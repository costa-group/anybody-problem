import { expect } from 'chai'
import hre from 'hardhat'
const ethers = hre.ethers

import {
  deployContracts,
  /*splitterAddress,*/
  getParsedEventLogs,
  solveLevel,
  // mintProblem,
  generateAndSubmitProof,
  getTicksRun
  // generateProof
} from '../../scripts/utils.js'

import { Anybody } from '../../dist/module.js'

// let tx
describe('AnybodyProblem Tests', function () {
  this.timeout(50000000)

  it('has the correct verifiers, externalMetadata, speedruns addresses', async () => {
    const deployedContracts = await deployContracts()

    const { AnybodyProblem: anybodyProblem } = deployedContracts
    for (const [name, contract] of Object.entries(deployedContracts)) {
      if (name === 'AnybodyProblem') continue
      if (name === 'ThemeGroup') continue
      if (name === 'verifiers') continue
      if (name === 'verifiersTicks') continue
      if (name === 'verifiersBodies') continue
      if (name.indexOf('Assets') > -1) continue
      let storedAddress
      if (name.indexOf('Verifier') > -1) {
        const bodyCount = name.split('_')[1]
        storedAddress = await anybodyProblem.verifiers(
          bodyCount,
          await getTicksRun(bodyCount)
        )
      } else {
        const functionName = name.charAt(0).toLowerCase() + name.slice(1)
        try {
          storedAddress = await anybodyProblem[`${functionName}()`]()
        } catch (e) {
          console.error({ functionName, e })
        }
      }
      const actualAddress = contract.address
      expect(storedAddress).to.equal(actualAddress)
    }
  })

  it('stores the verifiers in the correct order of the mapping', async () => {
    const deployedContracts = await deployContracts()
    const { AnybodyProblem: anybodyProblem } = deployedContracts
    for (const [name, contract] of Object.entries(deployedContracts)) {
      if (name.indexOf('Verifier') === -1) continue
      const bodyCount = name.split('_')[1]
      const tickCount = await getTicksRun(bodyCount)
      const storedAddress = await anybodyProblem.verifiers(bodyCount, tickCount)
      const actualAddress = contract.address
      expect(storedAddress).to.equal(actualAddress)
    }
  })

  it.skip('starts week correctly', async () => {
    // const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts()
    const SECONDS_IN_A_WEEK = await anybodyProblem.SECONDS_IN_A_WEEK()
    const week = await anybodyProblem.currentWeek()
    // const latestBlock = await hre.ethers.provider.getBlock('latest')
    // const timeUntilEndOfWeek = await anybodyProblem.timeUntilEndOfWeek()

    const nextSundayAt6pmUTC = new Date()
    nextSundayAt6pmUTC.setUTCHours(18, 0, 0, 0)
    nextSundayAt6pmUTC.setDate(
      nextSundayAt6pmUTC.getDate() +
        ((7 - nextSundayAt6pmUTC.getUTCDay() + 7) % 7)
    )
    const unixTime = Math.floor(nextSundayAt6pmUTC.getTime() / 1000)

    expect(unixTime).to.equal(week.add(SECONDS_IN_A_WEEK))
  })

  it('has the correct Speedruns addresses', async () => {
    const deployedContracts = await deployContracts()

    const { Speedruns: speedruns, AnybodyProblem: anybodyProblem } =
      deployedContracts
    const speedrunsAddress = await anybodyProblem.speedruns()
    expect(speedrunsAddress).to.equal(speedruns.address)
  })

  it('onlyOwner functions are really only Owner', async function () {
    const [, addr1] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts()

    const functions = [
      { name: 'updateProceedRecipient', args: [addr1.address] },
      { name: 'updateSpeedrunsAddress', args: [addr1.address] },
      { name: 'updateVerifier', args: [addr1.address, 0, 0] },
      { name: 'recoverUnsuccessfulPayment', args: [addr1.address] },
      { name: 'updateDiscount', args: [0] },
      { name: 'updatePriceToSave', args: [0] },
      { name: 'updatePriceToMint', args: [0] },
      { name: 'updatePaused', args: [true] }
    ]

    for (const { name, args } of functions) {
      await expect(
        anybodyProblem.connect(addr1)[name](...args)
      ).to.be.revertedWith('Ownable: caller is not the owner')
      await expect(anybodyProblem[name](...args)).to.not.be.reverted
    }
  })

  it('fallback and receive functions revert', async () => {
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProlem } = await deployContracts()
    await expect(
      owner.sendTransaction({ to: anybodyProlem.address, value: '1' })
    ).to.be.reverted
    await expect(
      owner.sendTransaction({ to: anybodyProlem.address, value: '0' })
    ).to.be.reverted
  })

  it('creates a proof for 1 bodies', async () => {
    const signers = await ethers.getSigners()
    const [owner] = signers
    const deployedContracts = await deployContracts()
    const { AnybodyProblem: anybodyProblem } = deployedContracts

    const day = await anybodyProblem.currentDay()
    let { bodyData, bodyCount } = await anybodyProblem.generateLevelData(day, 1)
    bodyData = bodyData.slice(0, bodyCount)
    const seed = '0x' + '0'.repeat(64)
    const proofLength = await getTicksRun(bodyCount)

    const { tx, bodyFinal } = await generateAndSubmitProof(
      owner.address,
      seed,
      expect,
      deployedContracts,
      0,
      proofLength,
      bodyData
    )

    const receipt = await tx.wait()
    const events = getParsedEventLogs(receipt, anybodyProblem, 'RunCreated')
    // console.dir({ events }, { depth: null })
    const runId = events[0].args.runId
    const allLevelData = await anybodyProblem.getLevelsData(runId)
    const level = await anybodyProblem.currentLevel(runId)
    const levelIndex = level - 1
    const levelData = allLevelData[levelIndex]
    // console.dir({ levelData }, { depth: null })
    const windowWidth = await anybodyProblem.windowWidth()
    const maxVector = await anybodyProblem.maxVector()
    const scalingFactor = await anybodyProblem.scalingFactor()

    const maxVectorScaled = maxVector.mul(scalingFactor)

    expect(levelData.solved).to.equal(false)
    expect(
      levelData.tmpBodyData.filter((b) => parseInt(b.seed) !== 0).length
    ).to.equal(bodyCount)
    expect(levelData.time).to.equal(proofLength)
    const startingRadius = await anybodyProblem.startingRadius()
    const maxRadius = ethers.BigNumber.from(5 * 5).add(startingRadius)
    const firstBodyRadius = ethers.BigNumber.from(36)

    // confirm new values are stored correctly
    for (let i = 0; i < bodyCount; i++) {
      const bodyData = levelData.tmpBodyData[i]
      const { bodyIndex, px, py, vx, vy, radius, seed } = bodyData
      expect(i).to.equal(bodyIndex)
      expect(seed).to.not.equal(0)

      expect(px).to.equal(bodyFinal[i][0].toString())
      expect(px).to.not.equal(0)
      expect(px.lt(windowWidth)).to.be.true

      expect(py).to.equal(bodyFinal[i][1].toString())
      expect(py).to.not.equal(0)
      expect(py.lt(windowWidth)).to.be.true

      expect(vx).to.equal(bodyFinal[i][2].toString())
      expect(vy).to.equal(bodyFinal[i][3].toString())

      expect(vx.lte(maxVectorScaled.mul(2))).to.be.true
      expect(vy.lte(maxVectorScaled.mul(2))).to.be.true

      expect(radius).to.equal(bodyFinal[i][4].toString())

      expect(radius).to.not.equal(0)
      if (i !== 0) {
        expect(radius.lte(maxRadius.mul(scalingFactor))).to.be.true
      } else {
        expect(radius.eq(firstBodyRadius.mul(scalingFactor))).to.be.true
      }
    }
  })

  it('solves the first level using mock', async () => {
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts({
      mock: true
    })
    let runId = 0
    const day = await anybodyProblem.currentDay()
    const level = 1
    const solvedReturn = await solveLevel(
      owner.address,
      anybodyProblem,
      expect,
      runId,
      level
    )
    runId = solvedReturn.runId
    const tx = solvedReturn.tx
    const time = solvedReturn.time
    await expect(tx)
      .to.emit(anybodyProblem, 'LevelSolved')
      .withArgs(owner.address, runId, 1, time, day)
  })

  it('must be unpaused', async function () {
    // const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts({
      mock: true
    })
    await anybodyProblem.updatePaused(true)
    await expect(
      anybodyProblem.batchSolve(0, true, 0, [], [], [], [], [])
    ).to.be.revertedWith('Contract is paused')
  })

  it('solves all levels async using mock', async () => {
    const [owner, acct1] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem, Speedruns: speedruns } =
      await deployContracts({ mock: true })
    await anybodyProblem.updateProceedRecipient(acct1.address)

    const proceedRecipient = await anybodyProblem.proceedRecipient()
    const balanceBefore = await ethers.provider.getBalance(proceedRecipient)

    let runId = 0,
      tx
    const day = await anybodyProblem.currentDay()

    let accumulativeTime = 0
    for (let i = 0; i < 5; i++) {
      const level = i + 1
      const solvedReturn = await solveLevel(
        owner.address,
        anybodyProblem,
        expect,
        runId,
        level
      )
      runId = solvedReturn.runId
      tx = solvedReturn.tx
      accumulativeTime += parseInt(solvedReturn.time)
    }

    await expect(tx)
      .to.emit(anybodyProblem, 'RunSolved')
      .withArgs(owner.address, runId, accumulativeTime, day)

    const mintingFee = await anybodyProblem.priceToSave()
    const discount = await anybodyProblem.discount()
    const price = (await anybodyProblem.priceToMint())
      .div(discount)
      .add(mintingFee)
    await expect(tx)
      .to.emit(anybodyProblem, 'EthMoved')
      .withArgs(acct1.address, true, '0x', price)

    const balanceAfter = await ethers.provider.getBalance(proceedRecipient)
    expect(balanceAfter.sub(balanceBefore)).to.equal(price)

    const speedrunBalance = await speedruns.balanceOf(owner.address, day)
    expect(speedrunBalance).to.equal(1)

    const fastestRun = await anybodyProblem.fastestByDay(day, 0)
    expect(fastestRun).to.equal(runId)

    const mostGames = await anybodyProblem.mostGames(0)
    expect(mostGames).to.equal(owner.address)
    const gamesPlayed = await anybodyProblem.gamesPlayed(owner.address)
    expect(gamesPlayed.total).to.equal(1)
    expect(gamesPlayed.lastPlayed).to.equal(day)
    expect(gamesPlayed.streak).to.equal(1)
  })

  it.only('solves all levels in a single tx', async () => {
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem, Speedruns: speedruns } =
      await deployContracts({ mock: true, verbose: true })
    let runId = 0
    const day = await anybodyProblem.currentDay()
    let accumulativeTime = 0
    const finalArgs = [null, true, 0, [], [], [], [], []]
    let finalRunId
    for (let i = 0; i < 5; i++) {
      const level = i + 1
      const solvedReturn = await solveLevel(
        owner.address,
        anybodyProblem,
        expect,
        runId,
        level,
        false
      )
      const args = solvedReturn.args
      const time = solvedReturn.time
      console.log(i + ': ' + time)
      finalRunId = solvedReturn.runId
      accumulativeTime += parseInt(time)
      finalArgs[0] = runId
      finalArgs[1] = true // alsoMint
      finalArgs[2] = 0 // day
      finalArgs[3].push(args[3][0])
      finalArgs[4].push(args[4][0])
      finalArgs[5].push(args[5][0])
      finalArgs[6].push(args[6][0])
      finalArgs[7].push(args[7][0])
    }

    const mintingFee = await anybodyProblem.priceToSave()
    const discount = await anybodyProblem.discount()
    const price = (await anybodyProblem.priceToMint())
      .div(discount)
      .add(mintingFee)
    expect(finalArgs.length).to.equal(8)

    const tx = await anybodyProblem.batchSolve(...finalArgs, { value: price })
    console.log({ finalRunId, accumulativeTime, day })
    const receipt = await tx.wait()
    const events = getParsedEventLogs(receipt, anybodyProblem, 'RunSolved')
    console.dir(events[0].args.accumulativeTime.toString(), { depth: null })

    const levelEvents = getParsedEventLogs(
      receipt,
      anybodyProblem,
      'LevelSolved'
    )
    // console.dir(levelEvents, { depth: null })
    levelEvents.forEach((event, i) => {
      console.log(i + ': ' + event.args.time.toString())
    })
    await expect(tx)
      .to.emit(anybodyProblem, 'RunSolved')
      .withArgs(owner.address, finalRunId, accumulativeTime, day)

    await expect(tx)
      .to.emit(anybodyProblem, 'EthMoved')
      .withArgs(owner.address, true, '0x', price)

    const speedrunBalance = await speedruns.balanceOf(owner.address, day)
    expect(speedrunBalance).to.equal(1)

    const fastestRun = await anybodyProblem.fastestByDay(day, 0)
    expect(fastestRun).to.equal(finalRunId)

    const mostGames = await anybodyProblem.mostGames(0)
    expect(mostGames).to.equal(owner.address)

    const gamesPlayed = await anybodyProblem.gamesPlayed(owner.address)
    expect(gamesPlayed.total).to.equal(1)
    expect(gamesPlayed.lastPlayed).to.equal(day)
    expect(gamesPlayed.streak).to.equal(1)
  })

  it('has the same results for generateLevelData as anybody.js', async () => {
    const SECONDS_IN_A_DAY = 86400
    const day =
      Math.floor(Date.now() / 1000) -
      (Math.floor(Date.now() / 1000) % SECONDS_IN_A_DAY)
    const level = 1
    const { AnybodyProblem: anybodyProblem } = await deployContracts()
    const contractLevelData = await anybodyProblem.generateLevelData(day, level)
    const contractBodyData = contractLevelData.bodyData
      .slice(0, level + 1)
      .map((body) => {
        const newBody = {}
        newBody.bodyIndex = body.bodyIndex.toNumber()
        newBody.px = body.px.toNumber()
        newBody.py = body.py.toNumber()
        newBody.vx = body.vx.toNumber()
        newBody.vy = body.vy.toNumber()
        newBody.radius = body.radius.toNumber()
        newBody.seed = body.seed
        return newBody
      })

    const anybody = new Anybody(null, {
      util: true
    })
    const anybodyLevelData = anybody.generateLevelData(day, level)
    expect(contractBodyData).to.deep.equal(anybodyLevelData)
  })

  it('has correct getLevelFromInputs with no dummy', async () => {
    const Input = [
      '0',
      '1000000',
      '20000',
      '20000',
      '0',
      '754480',
      '773335',
      '14544',
      '14963',
      '36000',
      '820297',
      '695735',
      '15617',
      '15319',
      '0',
      '26',
      '1428531153118459510960519782658600836333166681489',
      '338153',
      '247056',
      '19800',
      '18689',
      '36000',
      '174915',
      '126128',
      '10361',
      '11593',
      '17000',
      '0',
      '1000000',
      '20000',
      '20000',
      '0'
    ]

    const { AnybodyProblem: anybodyProblem } = await deployContracts()
    const level = await anybodyProblem.getLevelFromInputs(Input)
    expect(level[0]).to.equal(1)
    expect(level[1]).to.equal(0)
  })

  it('has correct getLevelFromInputs with dummy', async () => {
    const Input = [
      '0',
      '1000000',
      '20000',
      '20000',
      '0',
      '754480',
      '773335',
      '14544',
      '14963',
      '36000',
      '820297',
      '695735',
      '15617',
      '15319',
      '0',
      '0', // dummy x
      '0', // dummy y
      '20000', // dummy vx
      '20000', // dummy vy
      '0', // dummy radius
      '26',
      '1428531153118459510960519782658600836333166681489',
      '338153',
      '247056',
      '19800',
      '18689',
      '36000',
      '174915',
      '126128',
      '10361',
      '11593',
      '17000',
      '0', // dummy x
      '0', // dummy y
      '20000', // dummy vx
      '20000', // dummy vy
      '0', // dummy radius
      '0',
      '1000000',
      '20000',
      '20000',
      '0'
    ]

    const { AnybodyProblem: anybodyProblem } = await deployContracts()
    const level = await anybodyProblem.getLevelFromInputs(Input)
    expect(level[0]).to.equal(1)
    expect(level[1]).to.equal(1)
  })

  it('returns correct currentLevel', async () => {
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts({
      mock: true
    })
    const currentLevel = await anybodyProblem.currentLevel(0)
    expect(currentLevel).to.equal(0)
    let runId = 0
    let level = 1
    const solvedReturn = await solveLevel(
      owner.address,
      anybodyProblem,
      expect,
      runId,
      level
    )
    runId = solvedReturn.runId

    const newCurrentLevel = await anybodyProblem.currentLevel(runId)
    expect(newCurrentLevel).to.equal(2)
  })

  // TODO: add exhaustive tests for topic and types
  // NOTE: this was changed to internal function so can't be tested as easily
  it.skip('emits arbitrary events within Speedruns', async () => {
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem, Speedruns: speedruns } =
      await deployContracts()

    const metadataUpdateEvent = [
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            name: 'tokenId',
            type: 'uint256'
          }
        ],
        name: 'MetadataUpdate',
        type: 'event'
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            name: '_fromTokenId',
            type: 'uint256'
          },
          {
            indexed: false,
            name: '_toTokenId',
            type: 'uint256'
          }
        ],
        name: 'BatchMetadataUpdate',
        type: 'event'
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            name: '_fromTokenId',
            type: 'uint256'
          },
          {
            indexed: true,
            name: '_toTokenId',
            type: 'uint256'
          },
          {
            indexed: false,
            name: 'who',
            type: 'address'
          }
        ],
        name: 'BatchMetadataUpdateIndexed',
        type: 'event'
      }
    ]
    const speedrunsABI = speedruns.interface.fragments.map((fragment) =>
      JSON.parse(fragment.format(ethers.utils.FormatTypes.json))
    )
    // Adding the new event to the ABI
    speedrunsABI.push(...metadataUpdateEvent)

    // Creating a new Interface with the updated ABI
    const mergedInterface = new ethers.utils.Interface(speedrunsABI)

    // Creating a new contract instance with the merged Interface
    const newSpeedrunsContract = new ethers.Contract(
      speedruns.address,
      mergedInterface,
      speedruns.signer
    )

    const tokenId = 1
    const tx = await anybodyProblem.emitMetadataUpdate(tokenId)
    await expect(tx)
      .to.emit(newSpeedrunsContract, 'MetadataUpdate')
      .withArgs(tokenId)

    const fromTokenId = 1
    const toTokenId = 100
    const tx2 = await anybodyProblem.emitBatchMetadataUpdate(
      fromTokenId,
      toTokenId
    )
    await expect(tx2)
      .to.emit(newSpeedrunsContract, 'BatchMetadataUpdate')
      .withArgs(fromTokenId, toTokenId)

    const tx3 = await anybodyProblem.exampleEmitMultipleIndexEvent(
      fromTokenId,
      toTokenId,
      owner.address
    )
    await expect(tx3)
      .to.emit(newSpeedrunsContract, 'BatchMetadataUpdateIndexed')
      .withArgs(fromTokenId, toTokenId, owner.address)
  })

  it.skip('tests an arbitrary tx', async () => {
    const data =
      '0x52d3e4ef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066be96800000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000004a000000000000000000000000000000000000000000000000000000000000009400000000000000000000000000000000000000000000000000000000000000ba0000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000fa000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000007d000000000000000000000000000000000000000000000000000000000000000910da02e67b6b5f332864ed81bfbfe038c7ff89e45e9a1c9295c9d07451dfdd3625dd88e8b51a3bf46a76527b2ec9cd8e26786df70f7e9256bbc2e0b93e8a3ad21611c141c557afa611417c1b1ca5ff930d489271e2b30264f5c27f7ce55c5acb0fcbcefdf397d9817573956e5526912823f10934daa08654f85a6e5ac842f5522e8b2d0a61dd90b08607cb65b6a6132328c9b5825abb60f80fdda32f4d118a311898408c957f435eeb54fc055c21c559ded87e27a6fcfab21a580318deb4bbf91e9caf5781a58cf00b1e0c63e817352e6c5387c6521842b731b40938b5ac7c75051642256e3a07c2c64ac549963721fdf877ac3a418765e04cf4e6bcca1b88b227ff295b291aa597fc5a5f42ba4e2a9a7fbab5a119b77694cbc2e2f80bb17e502d1d9225a09816eb2e163d42164e788229c28280c404b28f8707cb3b62c3242226594976a18c1ba7104c456aca9bd178c9449885b9df89fe11bf092ade0a1c0622b304830ade4045ae5be3d1cbe5d64c9e1e678a164c5259ee0f6f8c7b5b817903a89d319de8ef3e22d9f1d50e262160bf1d60bdc5aeb3b99e3fbfa76fe7c5d70da422c5565026a4ebce4c34c4d490b2ef566c23bcfe02d0ea80d2224e45d87526538075f8e56aab3a0d442fe254b6beecbaea99bae8cc6b2710bdd81c2685be1a3357a9e68e518d100e01c3a862fda5dfb849de679785223a5bbe2d83405ae026a134f4f823429be3dd55a4050159f86c76bf0bce46ce5d8888d29bda26a5741c671713f4cb0fce34e280aebc12fba59e45a4b9d37f35d5f84fedfe0bebde9b00000000000000000000000000000000000000000000000000000000000000090289352554fdd74cc91d18efb507d5eb7cc231a4033ecf3929d3e5d43d006f650a3c6afab296b0d0e02c57e1cdf08327f51ef2120dec9b134527d740168bbf210135c65839228a713a9eda816a124d2c15fd35a20cb6f8fdbbe3397498abb9120ce44892e62bb9226d66afeae7482eb12c1f86fb68ad7f2756ab2ebbc51a2cbf131c61cbf9382665b012bae77756b0a6b67f7c1901696b114a6b74ac91d2a317160818fd56e44d32bd6371e9a68c13fab3c87514eb16ed377de5662f2fc1d3bb2273de99c486e636f7128097f062962b2f5e348020e3353b660459bbfd8f3b8b05e14ee06a7b466903f57912eea5b527195db245cf0acdeab59df9aea2e8a5b7209748fb1a7defea2ccd983d8b198210437f97c2b2039a496f6ba34210d8996706915499e8f674c4cc0c11db6e3211290c4ca220e35a988261ea54e796ce68f604cf8ba09f4624b51579c0635383910961d3fb56b89f63772a1f79991bcf08371963f9b4e1dfa66ccb478ecd039d1a990475a6ae4dfe14b676421a80e2f2f6092b4397bc101088d9b366a0cfe1575e4949057aa11b43851159510b00940e9300048f8995764d26728bdb130083dcc414dc096d0be29c1e956f3ec0194f184688213a8bd9a648b1356f501264ee98c7c6e70facccef09e2104f23bf26d46e9a4f0a9aeacdc6ae99297645faab4b305e14b4c89a6a534bbe5b6f3883e654711e4809e6ce366cb2aeb7d374e9ebe718b2b10d3b1b9a67a54f834c11b99fa435b2da28bbcf93ccef21f869459354646d9a8d5657804f3d4b1df32a5f2fb1946b8e592bd5cf602afdade58d77090093a9d06356962898cdce81770f090a476b93f3b7130dbe22d1f8d3bbdc97c3f5dbc25ff29cda186be29a43d8a4af1985b4d974552985164d1df6b7375db2200dac2ffee5b42c4ee8a7669edc0ff0e9e1b465b2d9086f2eaa94aca30ad980d5d4de47862014d193c7e616c1a0408fbc314992ffe8062930ba23ac97c962504bfe67480e391c0ca6d3e4995d1fdb17556f6d257505019776602b576474f322ae590e91b4be3175939b643ee17ed306c74b1a0065a602e6a0b7362a6a3b35d68305940311baa3f868ad64f7bec180be9fd04cbccc782bdd0d5fc14e9d1934dd81bd32394b906e7ec59a5da5690aff2b2eff5fc5409d0d9285aaf52504ec4bf37e95871aac4ad66b4cdd3b3e34117810409380544ca2066d33cf7f4c7b4fef88da5af87a806fc1cf8ed9882d4abf09b3d753de35c7bd2ba43c97cee8dd18f1ae0e0f4649f375d7cd1b80416e900e3d55408831d9278d00d45045bf1b280d50ecefd10f9cd02102506459363a84305fd1ef195aa7eb412f781a81585146ac756d601a8d5f18dbd2a9873c4be0e7ab3cb3ba8b513cc4c30ab644b933b2bf6a21a1d1fa991c87b2bb5191d00d8233729f108c5809ebfb17117ec3c2f1eb5e84526daeb155815f2b7c3f60a0c64746055d1955e158e5810a17d358b166735be66cc6c0625e34bc5f6bac256df74d20a951c9b1fbcc929d2824726b5bf83c8e01282bb98b7b905ededd23cee62e4924e3b49c97fa7dcc114e00e87797c3f803299329e62b2768aae3dfb82431174b6529d515bdc252f6d77900000000000000000000000000000000000000000000000000000000000000091fb4b7df828a807d9d286c0c8191d13a32cd283a150594596f7eb2b9d2c3452a2e7518c4ef75eebb1da2257d6cca28ac73aca100f147348cdcb6f1f63893505d215297753cfd6f1bebcee34c37f1b467ab4a61558efc0b144dd5a8365bdf5f2d20dcfa003aea03ac710220b2acbc6a5e46781062221479bd62e1f95aab716bda2693c803327b303a7651bbf7814b4c44641bb1cba10b6ff1ec9c79999ee281c103c1189c85f498696258e8747e1b80ba071b9fdf860821de4798f04d92e3607a0c49a94e1453f582bb7559dfc3b973eaf5750012e411fc0dfc33361239d5ffe6017a20c1cff7c5c94aa12ba777eef812ccc3924a5412185f0eaeed32e7cffd8619dc104478374c68c5acc90aeb9ba94c14106c724205f84f0c1499e0d865f88506446f92efb0bb06102f464c0293c3d38b3a1711ec38434415ccc59ed22fb23e00d33691c292b9705edd82051576b97634a4c61a10de925cc1b3338cb7e065f60e9f73fa827d3dfdbe06dbdd421fea04e0118867fda663ed90c9fa41e06dcaf0035228d9602337ddf6bf820da5e33b72b80f8240c011c4933c896619295bec150711e861e3e3240e05e8cd18eeba9b91b83aec080fdd678d059d1f16c9fcc1c320be0ffb3c491a88a73cdaac559958474dde51c18f63d51a5b693e58203041142d24e95a1d8b774297f2ac732d7679ab4b41fbfee1185a7e02226ce59a9498fc0b2f9cdb05f4192b791151e898efb6552aa8d563e366ea8cfd34777158f6e4712e049cdbe732564feebfe9a3800667253632e68f5597d2bbb10c8d64bb48af000000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000e6000000000000000000000000000000000000000000000000000000000000015000000000000000000000000000000000000000000000000000000000000001e2000000000000000000000000000000000000000000000000000000000000027400000000000000000000000000000000000000000000000000000000000003060000000000000000000000000000000000000000000000000000000000000398000000000000000000000000000000000000000000000000000000000000042a00000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008649800000000000000000000000000000000000000000000000000000000000a056a00000000000000000000000000000000000000000000000000000000000083d70000000000000000000000000000000000000000000000000000000000002ad70000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000819a5000000000000000000000000000000000000000000000000000000000003865800000000000000000000000000000000000000000000000000000000000047ff0000000000000000000000000000000000000000000000000000000000005e3d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006300000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa32000000000000000000000000000000000000000000000000000000000003527b000000000000000000000000000000000000000000000000000000000009f5990000000000000000000000000000000000000000000000000000000000007499000000000000000000000000000000000000000000000000000000000000480d0000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000cb79b0000000000000000000000000000000000000000000000000000000000070119000000000000000000000000000000000000000000000000000000000000573d00000000000000000000000000000000000000000000000000000000000041070000000000000000000000000000000000000000000000000000000000006978000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000058a5900000000000000000000000000000000000000000000000000000000000c3cc0000000000000000000000000000000000000000000000000000000000000522300000000000000000000000000000000000000000000000000000000000037600000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000e9848000000000000000000000000000000000000000000000000000000000004a6b000000000000000000000000000000000000000000000000000000000000035d8000000000000000000000000000000000000000000000000000000000000158d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d554a00000000000000000000000000000000000000000000000000000000000a8611000000000000000000000000000000000000000000000000000000000000412700000000000000000000000000000000000000000000000000000000000059580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004900000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa320000000000000000000000000000000000000000000000000000000000042af90000000000000000000000000000000000000000000000000000000000041f9c000000000000000000000000000000000000000000000000000000000000332f00000000000000000000000000000000000000000000000000000000000031000000000000000000000000000000000000000000000000000000000000008ca0000000000000000000000000000000000000000000000000000000000007a92200000000000000000000000000000000000000000000000000000000000bb91d00000000000000000000000000000000000000000000000000000000000037c40000000000000000000000000000000000000000000000000000000000002cdf000000000000000000000000000000000000000000000000000000000000697800000000000000000000000000000000000000000000000000000000000835220000000000000000000000000000000000000000000000000000000000012e0f0000000000000000000000000000000000000000000000000000000000005e2f000000000000000000000000000000000000000000000000000000000000486600000000000000000000000000000000000000000000000000000000000059d8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dbae400000000000000000000000000000000000000000000000000000000000cf1480000000000000000000000000000000000000000000000000000000000000ce60000000000000000000000000000000000000000000000000000000000006f420000000000000000000000000000000000000000000000000000000000008ca0000000000000000000000000000000000000000000000000000000000001b1ac000000000000000000000000000000000000000000000000000000000008c0400000000000000000000000000000000000000000000000000000000000005ece0000000000000000000000000000000000000000000000000000000000001a10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d7e48000000000000000000000000000000000000000000000000000000000008d8120000000000000000000000000000000000000000000000000000000000002876000000000000000000000000000000000000000000000000000000000000492e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d48100000000000000000000000000000000000000000000000000000000000bbae90000000000000000000000000000000000000000000000000000000000006b2d0000000000000000000000000000000000000000000000000000000000002cab0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e00000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa320000000000000000000000000000000000000000000000000000000000087e80000000000000000000000000000000000000000000000000000000000006a06100000000000000000000000000000000000000000000000000000000000035020000000000000000000000000000000000000000000000000000000000002ef20000000000000000000000000000000000000000000000000000000000008ca0000000000000000000000000000000000000000000000000000000000003c36500000000000000000000000000000000000000000000000000000000000addf80000000000000000000000000000000000000000000000000000000000002b2c00000000000000000000000000000000000000000000000000000000000043a6000000000000000000000000000000000000000000000000000000000000697800000000000000000000000000000000000000000000000000000000000630fe000000000000000000000000000000000000000000000000000000000007e952000000000000000000000000000000000000000000000000000000000000371400000000000000000000000000000000000000000000000000000000000049b800000000000000000000000000000000000000000000000000000000000059d800000000000000000000000000000000000000000000000000000000000cfc6600000000000000000000000000000000000000000000000000000000000b2a2b000000000000000000000000000000000000000000000000000000000000681500000000000000000000000000000000000000000000000000000000000042db0000000000000000000000000000000000000000000000000000000000004a38000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006d9360000000000000000000000000000000000000000000000000000000000098a6200000000000000000000000000000000000000000000000000000000000031b100000000000000000000000000000000000000000000000000000000000047080000000000000000000000000000000000000000000000000000000000008ca00000000000000000000000000000000000000000000000000000000000029e18000000000000000000000000000000000000000000000000000000000002616000000000000000000000000000000000000000000000000000000000000038150000000000000000000000000000000000000000000000000000000000000c30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000876d8000000000000000000000000000000000000000000000000000000000006d814000000000000000000000000000000000000000000000000000000000000870f000000000000000000000000000000000000000000000000000000000000655900000000000000000000000000000000000000000000000000000000000059d800000000000000000000000000000000000000000000000000000000000815bb00000000000000000000000000000000000000000000000000000000000de0b60000000000000000000000000000000000000000000000000000000000003ad100000000000000000000000000000000000000000000000000000000000084500000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000083384000000000000000000000000000000000000000000000000000000000001adb500000000000000000000000000000000000000000000000000000000000075d40000000000000000000000000000000000000000000000000000000000005a67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa32000000000000000000000000000000000000000000000000000000000007493d00000000000000000000000000000000000000000000000000000000000c9a0c000000000000000000000000000000000000000000000000000000000000626b000000000000000000000000000000000000000000000000000000000000355c0000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000aece300000000000000000000000000000000000000000000000000000000000ae98c0000000000000000000000000000000000000000000000000000000000006e930000000000000000000000000000000000000000000000000000000000006872000000000000000000000000000000000000000000000000000000000000697800000000000000000000000000000000000000000000000000000000000af78500000000000000000000000000000000000000000000000000000000000b2f790000000000000000000000000000000000000000000000000000000000003fd5000000000000000000000000000000000000000000000000000000000000274100000000000000000000000000000000000000000000000000000000000059d800000000000000000000000000000000000000000000000000000000000111a9000000000000000000000000000000000000000000000000000000000000181800000000000000000000000000000000000000000000000000000000000036e70000000000000000000000000000000000000000000000000000000000006a5c0000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000062e95000000000000000000000000000000000000000000000000000000000001ab1400000000000000000000000000000000000000000000000000000000000059c000000000000000000000000000000000000000000000000000000000000074a30000000000000000000000000000000000000000000000000000000000003a98000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e2f33000000000000000000000000000000000000000000000000000000000003bb0e00000000000000000000000000000000000000000000000000000000000026d5000000000000000000000000000000000000000000000000000000000000542e0000000000000000000000000000000000000000000000000000000000008ca00000000000000000000000000000000000000000000000000000000000072a3600000000000000000000000000000000000000000000000000000000000117b000000000000000000000000000000000000000000000000000000000000038150000000000000000000000000000000000000000000000000000000000000c30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b3ad6000000000000000000000000000000000000000000000000000000000002d0ba00000000000000000000000000000000000000000000000000000000000077490000000000000000000000000000000000000000000000000000000000005dcb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026f8800000000000000000000000000000000000000000000000000000000000c0e1a00000000000000000000000000000000000000000000000000000000000055730000000000000000000000000000000000000000000000000000000000007eb8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c408c000000000000000000000000000000000000000000000000000000000007ac6000000000000000000000000000000000000000000000000000000000000075d40000000000000000000000000000000000000000000000000000000000005a67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007100000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa32000000000000000000000000000000000000000000000000000000000006d9360000000000000000000000000000000000000000000000000000000000098a6200000000000000000000000000000000000000000000000000000000000031b100000000000000000000000000000000000000000000000000000000000047080000000000000000000000000000000000000000000000000000000000008ca00000000000000000000000000000000000000000000000000000000000029e18000000000000000000000000000000000000000000000000000000000002616000000000000000000000000000000000000000000000000000000000000038150000000000000000000000000000000000000000000000000000000000000c30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000876d8000000000000000000000000000000000000000000000000000000000006d814000000000000000000000000000000000000000000000000000000000000870f000000000000000000000000000000000000000000000000000000000000655900000000000000000000000000000000000000000000000000000000000059d800000000000000000000000000000000000000000000000000000000000815bb00000000000000000000000000000000000000000000000000000000000de0b60000000000000000000000000000000000000000000000000000000000003ad100000000000000000000000000000000000000000000000000000000000084500000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000083384000000000000000000000000000000000000000000000000000000000001adb500000000000000000000000000000000000000000000000000000000000075d40000000000000000000000000000000000000000000000000000000000005a670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000004e200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004800000000000000000000000000000000000000000000000000000000000899a000000000000000000000000000000000000000000000000000000000000133840000000000000000000000000000000000000000000000000000000000003d2800000000000000000000000000000000000000000000000000000000000063f7000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000009af310000000000000000000000000000000000000000000000000000000000029e3b000000000000000000000000000000000000000000000000000000000000792400000000000000000000000000000000000000000000000000000000000024c00000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000db6c400000000000000000000000000000000000000000000000000000000000659e00000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004401a0000000000000000000000000000000000000000000000000000000000010b970000000000000000000000000000000000000000000000000000000000001f56000000000000000000000000000000000000000000000000000000000000242a00000000000000000000000000000000000000000000000000000000000059d80000000000000000000000000000000000000000000000000000000000097f5d00000000000000000000000000000000000000000000000000000000000115200000000000000000000000000000000000000000000000000000000000004834000000000000000000000000000000000000000000000000000000000000699c0000000000000000000000000000000000000000000000000000000000004a3800000000000000000000000000000000000000000000000000000000000639c200000000000000000000000000000000000000000000000000000000000bf41f00000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000af55700000000000000000000000000000000000000000000000000000000000094a30000000000000000000000000000000000000000000000000000000000006973000000000000000000000000000000000000000000000000000000000000586b0000000000000000000000000000000000000000000000000000000000002af8000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa32000000000000000000000000000000000000000000000000000000000000bfe100000000000000000000000000000000000000000000000000000000000c94250000000000000000000000000000000000000000000000000000000000003c0a0000000000000000000000000000000000000000000000000000000000004a920000000000000000000000000000000000000000000000000000000000008ca0000000000000000000000000000000000000000000000000000000000006e62f000000000000000000000000000000000000000000000000000000000000fb2900000000000000000000000000000000000000000000000000000000000043de00000000000000000000000000000000000000000000000000000000000057b9000000000000000000000000000000000000000000000000000000000000697800000000000000000000000000000000000000000000000000000000000676830000000000000000000000000000000000000000000000000000000000046caf000000000000000000000000000000000000000000000000000000000000752c000000000000000000000000000000000000000000000000000000000000643800000000000000000000000000000000000000000000000000000000000059d8000000000000000000000000000000000000000000000000000000000006de8f00000000000000000000000000000000000000000000000000000000000935720000000000000000000000000000000000000000000000000000000000002c0e00000000000000000000000000000000000000000000000000000000000047620000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000071f010000000000000000000000000000000000000000000000000000000000048385000000000000000000000000000000000000000000000000000000000000641100000000000000000000000000000000000000000000000000000000000028800000000000000000000000000000000000000000000000000000000000003a98000000000000000000000000000000000000000000000000000000000004c54a00000000000000000000000000000000000000000000000000000000000a210a0000000000000000000000000000000000000000000000000000000000003c73000000000000000000000000000000000000000000000000000000000000357b0000000000000000000000000000000000000000000000000000000000002af8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014e660000000000000000000000000000000000000000000000000000000000087aca000000000000000000000000000000000000000000000000000000000000918800000000000000000000000000000000000000000000000000000000000035100000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000e307400000000000000000000000000000000000000000000000000000000000caa5c0000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006594a000000000000000000000000000000000000000000000000000000000007793600000000000000000000000000000000000000000000000000000000000044c400000000000000000000000000000000000000000000000000000000000010ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009271d00000000000000000000000000000000000000000000000000000000000eb916000000000000000000000000000000000000000000000000000000000000420800000000000000000000000000000000000000000000000000000000000062f60000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000037e0d00000000000000000000000000000000000000000000000000000000000a920400000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ad18400000000000000000000000000000000000000000000000000000000000de03600000000000000000000000000000000000000000000000000000000000031cd00000000000000000000000000000000000000000000000000000000000061fd0000000000000000000000000000000000000000000000000000000000002af8000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa32000000000000000000000000000000000000000000000000000000000009af310000000000000000000000000000000000000000000000000000000000029e3b000000000000000000000000000000000000000000000000000000000000792400000000000000000000000000000000000000000000000000000000000024c00000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000db6c400000000000000000000000000000000000000000000000000000000000659e00000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004401a0000000000000000000000000000000000000000000000000000000000010b970000000000000000000000000000000000000000000000000000000000001f56000000000000000000000000000000000000000000000000000000000000242a00000000000000000000000000000000000000000000000000000000000059d80000000000000000000000000000000000000000000000000000000000097f5d00000000000000000000000000000000000000000000000000000000000115200000000000000000000000000000000000000000000000000000000000004834000000000000000000000000000000000000000000000000000000000000699c0000000000000000000000000000000000000000000000000000000000004a3800000000000000000000000000000000000000000000000000000000000639c200000000000000000000000000000000000000000000000000000000000bf41f00000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000af55700000000000000000000000000000000000000000000000000000000000094a30000000000000000000000000000000000000000000000000000000000006973000000000000000000000000000000000000000000000000000000000000586b0000000000000000000000000000000000000000000000000000000000002af800000000000000000000000000000000000000000000000000000000000899a000000000000000000000000000000000000000000000000000000000000133840000000000000000000000000000000000000000000000000000000000003d2800000000000000000000000000000000000000000000000000000000000063f7000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000acc2a00000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000006c4a00000000000000000000000000000000000000000000000000000000000016660000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000eaa24000000000000000000000000000000000000000000000000000000000003a92f0000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c75e000000000000000000000000000000000000000000000000000000000008539600000000000000000000000000000000000000000000000000000000000044c400000000000000000000000000000000000000000000000000000000000010ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030c0300000000000000000000000000000000000000000000000000000000000f1cf200000000000000000000000000000000000000000000000000000000000049d000000000000000000000000000000000000000000000000000000000000075e00000000000000000000000000000000000000000000000000000000000004a38000000000000000000000000000000000000000000000000000000000000c2580000000000000000000000000000000000000000000000000000000000091fb800000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052daf00000000000000000000000000000000000000000000000000000000000ebf7f0000000000000000000000000000000000000000000000000000000000004f430000000000000000000000000000000000000000000000000000000000006f5f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa320000000000000000000000000000000000000000000000000000000000014e660000000000000000000000000000000000000000000000000000000000087aca000000000000000000000000000000000000000000000000000000000000918800000000000000000000000000000000000000000000000000000000000035100000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000e307400000000000000000000000000000000000000000000000000000000000caa5c0000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006594a000000000000000000000000000000000000000000000000000000000007793600000000000000000000000000000000000000000000000000000000000044c400000000000000000000000000000000000000000000000000000000000010ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009271d00000000000000000000000000000000000000000000000000000000000eb916000000000000000000000000000000000000000000000000000000000000420800000000000000000000000000000000000000000000000000000000000062f60000000000000000000000000000000000000000000000000000000000004a380000000000000000000000000000000000000000000000000000000000037e0d00000000000000000000000000000000000000000000000000000000000a920400000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ad18400000000000000000000000000000000000000000000000000000000000de03600000000000000000000000000000000000000000000000000000000000031cd00000000000000000000000000000000000000000000000000000000000061fd0000000000000000000000000000000000000000000000000000000000002af8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ba3c400000000000000000000000000000000000000000000000000000000000907ca0000000000000000000000000000000000000000000000000000000000006e1e0000000000000000000000000000000000000000000000000000000000002a420000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000f23d4000000000000000000000000000000000000000000000000000000000009ed960000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c7af00000000000000000000000000000000000000000000000000000000000090b2c00000000000000000000000000000000000000000000000000000000000044c400000000000000000000000000000000000000000000000000000000000010ee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ebb2800000000000000000000000000000000000000000000000000000000000da0c000000000000000000000000000000000000000000000000000000000000047fc0000000000000000000000000000000000000000000000000000000000006204000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d4a76000000000000000000000000000000000000000000000000000000000007ad6c00000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005bbc600000000000000000000000000000000000000000000000000000000000063bd0000000000000000000000000000000000000000000000000000000000004f430000000000000000000000000000000000000000000000000000000000006f5f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006300000000000000000000000066da63b03feca7dd44a5bb023bb3645d3252fa3200000000000000000000000000000000000000000000000000000000000acc2a00000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000006c4a00000000000000000000000000000000000000000000000000000000000016660000000000000000000000000000000000000000000000000000000000008ca000000000000000000000000000000000000000000000000000000000000eaa24000000000000000000000000000000000000000000000000000000000003a92f0000000000000000000000000000000000000000000000000000000000002fb40000000000000000000000000000000000000000000000000000000000003baf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c75e000000000000000000000000000000000000000000000000000000000008539600000000000000000000000000000000000000000000000000000000000044c400000000000000000000000000000000000000000000000000000000000010ee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030c0300000000000000000000000000000000000000000000000000000000000f1cf200000000000000000000000000000000000000000000000000000000000049d000000000000000000000000000000000000000000000000000000000000075e00000000000000000000000000000000000000000000000000000000000004a38000000000000000000000000000000000000000000000000000000000000c2580000000000000000000000000000000000000000000000000000000000091fb800000000000000000000000000000000000000000000000000000000000048870000000000000000000000000000000000000000000000000000000000006a9c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052daf00000000000000000000000000000000000000000000000000000000000ebf7f0000000000000000000000000000000000000000000000000000000000004f430000000000000000000000000000000000000000000000000000000000006f5f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000073d400000000000000000000000000000000000000000000000000000000000011ce000000000000000000000000000000000000000000000000000000000000000a'
    const [owner] = await ethers.getSigners()
    const { AnybodyProblem: anybodyProblem } = await deployContracts({
      ignoreTesting: true
    })

    const tx = await owner.sendTransaction({
      to: anybodyProblem.address,
      data,
      value: ethers.utils.parseEther('0.0025'),
      from: owner.address
    })
    const receipt = await tx.wait()
    console.log({ receipt })
  })
})

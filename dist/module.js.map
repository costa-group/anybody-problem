{"mappings":"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","sources":["src/index.js","src/anybody.js","src/sound.js","src/visuals.js","src/colors.js","src/fonts.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e152e4b68446ece7.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d06bd551a33d4978.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-a42feb4e67080c34.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6f029b3be80ccd2b.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-38c867d312fbdf76.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-56d0919a9049ddab.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-80816021cbc7e52b.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6d9a279f3babf5c0.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4b6c5d2459b76c9e.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-44edb296a187fbd8.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d480791d4bf11d2b.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7937eb5ae4e190ae.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-caf492e3a4f4ddfa.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-8861a7f0d18ed081.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-0c0884f08ed49dad.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-bdd903900ccd3bdb.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-355cea5f0c299c7e.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-33eee572cf648d5e.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-2be348a58aaaea81.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-32e6ee6a2274a904.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-3fa207d4f261ec3c.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-2e69c64ce8181f2d.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6f6a2f410b82f3eb.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-3619a9fec04ce155.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d6a970883607ab2d.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-bce015bd6f7f2d5a.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-959bf863f037ae07.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-120d401cbe3907d7.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-435a19b62ab2b0ec.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-003b61a2b238dc37.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-ecd148f0caa1c4e8.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-14a4c4d5c6f9e144.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4a137605df2823d5.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-66c80c98922895e4.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-3da2da8445cea453.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-054c82d2935a5cf9.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-73633499c5177ac1.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-0ce35c4d58f00e67.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-9a09440a3afecf19.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7fb00f7c76d43841.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-a92c5036f33d57b7.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-c232af9873bf8fc4.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d6008851c4de086c.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-c48e5926c81b3052.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4d7c5c12ff14c498.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-9a5bf4e8b362e1f9.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-caf8c716fcd2b229.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-cd2b14bb00b9711a.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e7dc07b9fd292481.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-75ba97522ba00f89.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-aca724a755fc7767.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-14e223d33a1c3cf0.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-54c3a690268c8734.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-9027013e52947d2f.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-2687a00654914c51.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-8d29ac2fbb103c98.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d5498fbc3ac7481c.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-9f5668a72aec8c26.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-384dead14b548b80.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4c7356feaf4e1d72.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7c8ec30e9ad453e5.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6b0e34b25f81478b.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-a82cb3c341b4cfd8.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4de40a3995f9987a.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-57f8c935a59ddcaf.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e082b9341466b6a0.js","src/calculations.js","src/buttons.js","server/contracts.ts","server/contractData/ABI-12345-AnybodyProblem.json","server/contractData/84532-AnybodyProblem.json","server/contractData/12345-AnybodyProblem.json","server/contractData/ABI-12345-Speedruns.json","server/contractData/84532-Speedruns.json","server/contractData/12345-Speedruns.json"],"sourcesContent":["export { Anybody } from './anybody.js'\nexport * from '../server/contracts.ts'\n","import EventEmitter from 'events'\nimport Sound from './sound.js'\nimport { Visuals } from './visuals.js'\nimport { Calculations } from './calculations.js'\nimport { utils } from 'ethers'\nimport { bodyThemes } from './colors.js'\nimport { loadFonts } from './fonts.js'\nimport { Buttons } from './buttons.js'\n// import wc from './witness_calculator.js'\n\nconst GAME_LENGTH_BY_LEVEL_INDEX = [30, 10, 20, 30, 40, 50]\nconst NORMAL_GRAVITY = 100\nconst proverTickIndex = {\n  2: 250,\n  3: 250,\n  4: 250,\n  5: 125,\n  6: 125\n}\nfunction intersectsButton(button, x, y) {\n  return (\n    x > button.x &&\n    x < button.x + button.width &&\n    y > button.y &&\n    y < button.y + button.height\n  )\n}\n\nconst PAUSE_BODY_DATA = [\n  {\n    bodyIndex: 0,\n    radius: 36000,\n    px: 149311,\n    py: 901865,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 1,\n    radius: 32000,\n    px: 309311,\n    py: 121865,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 2,\n    radius: 30000,\n    px: 850311,\n    py: 811865,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 3,\n    radius: 7000,\n    px: 833406,\n    py: 103029,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 4,\n    radius: 20000,\n    px: 705620,\n    py: 178711,\n    vx: -100000,\n    vy: -1111000\n  },\n  {\n    bodyIndex: 5,\n    radius: 17000,\n    px: 139878,\n    py: 454946,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 6,\n    radius: 9000,\n    px: 289878,\n    py: 694946,\n    vx: 0,\n    vy: 0\n  },\n  {\n    bodyIndex: 7,\n    radius: 14000,\n    px: 589878,\n    py: 694946,\n    vx: -100000,\n    vy: -1111000\n  }\n]\n\nexport class Anybody extends EventEmitter {\n  constructor(p, options = {}) {\n    super()\n\n    Object.assign(this, Visuals)\n    Object.assign(this, Calculations)\n    Object.assign(this, Buttons)\n\n    this.setOptions(options)\n\n    // Add other constructor logic here\n    this.p = p\n    !this.util && loadFonts(this.p)\n    // this.p.blendMode(this.p.DIFFERENCE)\n\n    this.levelSpeeds = new Array(5)\n    this.clearValues()\n    !this.util && this.prepareP5()\n    this.sound = new Sound(this)\n    this.init()\n    !this.util && this.start()\n  }\n\n  proverTickIndex(i) {\n    return proverTickIndex[i]\n  }\n\n  setOptions(options = {}) {\n    const defaultOptions = {\n      day: 324000,\n      level: 0,\n      bodyData: null,\n      todaysRecords: {},\n      // Add default properties and their initial values here\n      startingBodies: 1,\n      windowWidth: 1000,\n      windowHeight: 1000,\n      pixelDensity:\n        typeof window !== 'undefined'\n          ? window.devicePixelRatio < 2\n            ? 2\n            : window.devicePixelRatio\n          : 2, //4, // Math.min(4, 4 * (window.devicePixelRatio ?? 1)),\n      scalingFactor: 10n ** 3n,\n      minDistanceSquared: 200 * 200,\n      G: NORMAL_GRAVITY, // Gravitational constant\n      mode: 'game', // game or nft\n      admin: false,\n      solved: false,\n      clearBG: true,\n      colorStyle: '!squiggle', // squiggle or !squiggle\n      preRun: 0,\n      alreadyRun: 0,\n      paintSteps: 0,\n      chunk: 1,\n      mute: true,\n      freeze: false,\n      test: false,\n      util: false,\n      paused: true,\n      globalStyle: 'default', // 'default', 'psycho'\n      aimHelper: false,\n      target: 'inside', // 'outside' or 'inside'\n      faceRotation: 'mania', // 'time' or 'hitcycle' or 'mania'\n      sfx: 'bubble', // 'space' or 'bubble'\n      playerName: undefined,\n      practiceMode: false,\n      bestTimes: null,\n      popup: null\n    }\n    // Merge the default options with the provided options\n    const mergedOptions = { ...defaultOptions, ...options }\n    // Assign the merged options to the instance properties\n    Object.assign(this, mergedOptions)\n  }\n  setPlayer(name = undefined) {\n    this.playerName = name\n  }\n  removeCSS() {\n    if (typeof document === 'undefined') return\n    const style = document.getElementById('canvas-cursor')\n    style && document.head.removeChild(style)\n  }\n  addCSS() {\n    if (typeof document === 'undefined') return\n    if (document.getElementById('canvas-cursor')) return\n    const style = document.createElement('style')\n    style.id = 'canvas-cursor' // Add an id to the style element\n\n    style.innerHTML = `\n      #canvas, canvas {\n        cursor: none;\n      }\n    `\n    document.head.appendChild(style)\n  }\n\n  // run whenever the class should be reset\n  clearValues() {\n    if (this.level <= 1) this.levelSpeeds = new Array(5)\n    this.lastMissileCantBeUndone = false\n    this.speedFactor = 2\n    this.speedLimit = 10\n    this.missileSpeed = 15\n    this.G = NORMAL_GRAVITY\n    this.vectorLimit = this.speedLimit * this.speedFactor\n    this.missileVectorLimit = this.missileSpeed * this.speedFactor\n    this.FPS = 25\n    this.P5_FPS_MULTIPLIER = 3\n    this.P5_FPS = this.FPS * this.P5_FPS_MULTIPLIER\n    this.p?.frameRate(this.P5_FPS)\n    this.timer =\n      (this.level > 5 ? 60 : GAME_LENGTH_BY_LEVEL_INDEX[this.level]) * this.FPS\n    this.deadOpacity = '0.9'\n    this.initialScoreSize = 120\n    this.scoreSize = this.initialScoreSize\n    this.opac = this.globalStyle == 'psycho' ? 1 : 1\n    this.tailLength = 1\n    this.tailMod = this.globalStyle == 'psycho' ? 2 : 1\n    this.explosions = []\n    this.missiles = []\n    this.stillVisibleMissiles = []\n    this.missileInits = []\n    this.bodies = []\n    this.witheringBodies = []\n    this.bodyInits = []\n    this.bodyFinal = []\n    this.missileCount = 0\n    this.frames = 0\n    this.p5Frames = 0\n    this.showIt = true\n    this.justStopped = false\n    this.gameOver = false\n    this.firstFrame = true\n    this.loaded = false\n    this.showPlayAgain = false\n    this.handledGameOver = false\n    this.statsText = ''\n    this.hasStarted = false\n    this.buttons = {}\n    this.won = false\n    this.finalBatchSent = false\n    this.solved = false\n    this.date = new Date(this.day * 1000)\n      .toISOString()\n      .split('T')[0]\n      .replace(/-/g, '.')\n    this.framesTook = false\n    this.showProblemRankingsScreenAt = -1\n    this.saveStatus = 'unsaved' // 'unsaved' -> 'validating' -> 'validated' -> 'saving' -> 'saved' | 'error'\n    delete this.validatedAt\n    delete this.validatingAt\n    delete this.savingAt\n    delete this.savedAt\n\n    // uncomment to work on the game over screen\n    // setTimeout(() => {\n    //   this.handleGameOver({ won: true })\n    // }, 500)\n\n    // uncomment to work on the problem-ranking screen\n    // setTimeout(() => {\n    //   this.showProblemRankingsScreenAt = this.p5Frames\n    // }, 500)\n  }\n\n  // run once at initilization\n  init() {\n    this.skipAhead = false\n    this.winScreenBaddies = undefined\n    this.seed = utils.solidityKeccak256(['uint256'], [this.day])\n    this.generateBodies()\n    this.frames = this.alreadyRun\n    this.startingFrame = this.alreadyRun\n    this.stopEvery = this.test ? 20 : this.proverTickIndex(this.level + 1)\n    // const vectorLimitScaled = this.convertFloatToScaledBigInt(this.vectorLimit)\n    this.setPause(this.paused, true)\n    this.storeInits()\n    // this.prepareWitness()\n  }\n\n  async start() {\n    this.addCSS()\n    this.addListeners()\n    this.runSteps(this.preRun)\n    // this.paintAtOnce(this.paintSteps)\n    if (this.freeze) {\n      this.setPause(true, true)\n    }\n  }\n\n  destroy() {\n    this.setPause(true)\n    this.p.noLoop()\n    this.removeListener()\n    this.sound.stop()\n    this.sound = null\n    this.p.remove()\n  }\n\n  storeInits() {\n    this.bodyCopies = JSON.parse(JSON.stringify(this.bodies))\n    this.bodyInits = this.processInits(this.bodies)\n  }\n\n  processInits(bodies) {\n    return this.convertBodiesToBigInts(bodies).map((b) => {\n      b = this.convertScaledBigIntBodyToArray(b)\n      b[2] = BigInt(b[2]).toString()\n      b[3] = BigInt(b[3]).toString()\n      return b\n    })\n  }\n\n  runSteps(n = this.preRun) {\n    let runIndex = 0\n    let keepSimulating = true\n    this.showIt = false\n    while (keepSimulating) {\n      runIndex++\n      if (runIndex > n) {\n        keepSimulating = false\n        this.showIt = true\n        // n > 0 && console.log(`${n.toLocaleString()} runs`)\n      } else {\n        const results = this.step(this.bodies, this.missiles)\n        this.frames++\n        this.bodies = results.bodies\n        this.missiles = results.missiles || []\n      }\n    }\n  }\n\n  addListeners() {\n    const { canvas } = this.p\n\n    // binding dummy handlers is necessary for p5 to listen to touchmove\n    // and track mouseX and mouseY\n    this.p.touchStarted = () => {}\n    this.p.mouseMoved = this.handleMouseMove\n    this.p.touchMoved = this.handleMouseMove\n    this.p.mousePressed = this.handleMousePressed\n    this.p.mouseReleased = this.handleMouseReleased\n    this.p.touchEnded = () => {}\n\n    if (typeof window !== 'undefined' && this.mode == 'game') {\n      canvas.removeEventListener('click', this.handleNFTClick)\n      canvas.addEventListener('click', this.handleGameClick)\n      canvas.addEventListener('touchend', this.handleGameClick)\n      window.addEventListener('keydown', this.handleGameKeyDown)\n    } else {\n      canvas.removeEventListener('click', this.handleGameClick)\n      window?.removeEventListener('keydown', this.handleGameKeyDown)\n      canvas.addEventListener('click', this.handleGameClick)\n    }\n  }\n\n  removeListener() {\n    const { canvas } = this.p\n    canvas?.removeEventListener('click', this.handleNFTClick)\n    canvas?.removeEventListener('click', this.handleGameClick)\n    canvas?.removeEventListener('touchend', this.handleGameClick)\n    window?.removeEventListener('keydown', this.handleGameKeyDown)\n    window?.removeEventListener('keydown', this.sound.handleKeyDown)\n  }\n\n  getXY(e) {\n    // e may be a touch event or a click event\n    if (e.touches) {\n      e = e.touches[0] || e.changedTouches[0]\n    }\n    let x = e.offsetX || e.pageX\n    let y = e.offsetY || e.pageY\n    const rect = e.target.getBoundingClientRect()\n    const actualWidth = rect.width\n    x = (x * this.windowWidth) / actualWidth\n    y = (y * this.windowWidth) / actualWidth\n    return { x, y }\n  }\n\n  handleMouseMove = (e) => {\n    const { x, y } = this.getXY(e)\n    this.mouseX = x\n    this.mouseY = y\n    // check if mouse is inside any of the buttons\n    for (const key in this.buttons) {\n      const button = this.buttons[key]\n      button.hover = intersectsButton(button, x, y)\n    }\n  }\n\n  handleMousePressed = (e) => {\n    const { x, y } = this.getXY(e)\n    for (const key in this.buttons) {\n      const button = this.buttons[key]\n      button.active = intersectsButton(button, x, y)\n    }\n  }\n\n  handleMouseReleased = () => {\n    for (const key in this.buttons) {\n      const button = this.buttons[key]\n      if (button.active) button.active = false\n    }\n  }\n\n  handleGameClick = (e) => {\n    if (this.gameOver && this.won) {\n      this.skipAhead = true\n    }\n    const { x, y } = this.getXY(e)\n    // if mouse is inside of a button, call the button's handler\n    for (const key in this.buttons) {\n      const button = this.buttons[key]\n      if (\n        button.visible &&\n        intersectsButton(button, x, y) &&\n        !button.disabled\n      ) {\n        button.onClick()\n        return\n      }\n    }\n\n    if (this.paused || this.gameOver) return\n    this.missileClick(x, y)\n  }\n\n  handleNFTClick = () => {\n    this.setPause()\n  }\n\n  handleGameKeyDown = (e) => {\n    if (this.gameOver && this.won) {\n      this.skipAhead = true\n    }\n    const modifierKeyActive = e.shiftKey && e.altKey && e.ctrlKey && e.metaKey\n    if (modifierKeyActive) return\n    switch (e.code) {\n      case 'Space':\n        if (this.mouseX || this.mouseY) {\n          e.preventDefault()\n          this.missileClick(this.mouseX, this.mouseY)\n        }\n        break\n      case 'KeyR':\n        if (!this.gameOver || !this.won) this.restart(null, false)\n        break\n      case 'KeyP':\n        if (!this.gameOver) this.setPause()\n        break\n    }\n  }\n\n  handleGameOver = ({ won }) => {\n    if (this.handledGameOver) return\n    this.handledGameOver = true\n    this.gameoverTickerX = 0\n    this.sound?.playGameOver({ won })\n    this.gameOver = true\n    this.won = won\n    if (this.level !== 0 && !this.won) {\n      const gravityIndex = this.bodies\n        .slice(1)\n        .filter((b) => b.radius !== 0n).length\n      const newBodies = this.generateLevelData(\n        this.day,\n        6 - gravityIndex\n      ).slice(1)\n      this.bodies.push(\n        ...newBodies\n          .map((b) => this.bodyDataToBodies.call(this, b))\n          .map((b) => {\n            b.position.x = 0\n            b.position.y = 0\n            b.py = 0n\n            b.px = 0n\n            return b\n          })\n      )\n    }\n    this.P5_FPS *= 2\n    this.p.frameRate(this.P5_FPS)\n    var dust = 0\n    var timeTook = 0\n\n    const stats = this.calculateStats()\n    dust = stats.dust\n    timeTook = stats.timeTook\n    this.framesTook = stats.framesTook\n    this.emit('done', {\n      level: this.level,\n      won,\n      ticks: this.frames - this.startingFrame,\n      dust,\n      timeTook,\n      framesTook: this.framesTook\n    })\n    if (won) {\n      this.bodyData = null\n      this.finish()\n    }\n  }\n\n  restart = (options, beginPaused = true) => {\n    if (options) {\n      this.setOptions(options)\n    }\n    this.clearValues()\n    this.sound?.stop()\n    this.sound?.playStart()\n    this.sound?.setSong()\n    this.init()\n    this.draw()\n    if (!beginPaused) {\n      this.setPause(false)\n    }\n    this.addCSS()\n  }\n\n  doubleTextInverted(text) {\n    return text.slice(0, -1) + text.split('').reverse().join('')\n  }\n\n  setPause(newPauseState = !this.paused, mute = false) {\n    if (typeof newPauseState !== 'boolean') {\n      newPauseState = !this.paused\n    }\n\n    if (newPauseState) {\n      this.pauseBodies = PAUSE_BODY_DATA.map((b) =>\n        this.bodyDataToBodies.call(this, b)\n      )\n      this.pauseBodies[1].c = this.getBodyColor(this.day + 1, 0)\n      this.pauseBodies[2].c = this.getBodyColor(this.day + 2, 0)\n      this.paused = newPauseState\n      this.willUnpause = false\n      delete this.beganUnpauseAt\n    } else {\n      this.justPaused = true\n      this.willUnpause = true\n    }\n\n    this.emit('paused', newPauseState)\n    if (newPauseState) {\n      if (!mute) this.sound?.pause()\n    } else {\n      if (!mute) this.sound?.resume()\n    }\n  }\n\n  step() {\n    // this.steps ||= 0\n    // console.log({ steps: this.steps })\n    // this.steps++\n    // console.dir(\n    //   { bodies: this.bodies, missiles: this.missiles[0] },\n    //   { depth: null }\n    // )\n    if (this.missiles.length == 0 && this.lastMissileCantBeUndone) {\n      console.log('LASTMISSILECANTBEUNDONE = FALSE')\n      this.lastMissileCantBeUndone = false\n    }\n    this.bodies = this.forceAccumulator(this.bodies)\n    var results = this.detectCollision(this.bodies, this.missiles)\n    this.bodies = results.bodies\n    this.missiles = results.missiles || []\n    if (this.missiles.length > 0) {\n      const missileCopy = JSON.parse(JSON.stringify(this.missiles[0]))\n      this.stillVisibleMissiles.push(missileCopy)\n    }\n    if (this.missiles.length > 0 && this.missiles[0].radius == 0) {\n      this.missiles.splice(0, 1)\n    } else if (this.missiles.length > 1 && this.missiles[0].radius !== 0) {\n      // NOTE: follows logic of circuit\n      const newMissile = this.missiles.splice(0, 1)\n      this.missiles.splice(0, 1, newMissile[0])\n    }\n    return { bodies: this.bodies, missiles: this.missiles }\n  }\n\n  started() {\n    this.emit('started', {\n      day: this.day,\n      level: this.level,\n      bodyInits: JSON.parse(JSON.stringify(this.bodyInits))\n    })\n  }\n\n  processMissileInits(missiles) {\n    const radius = 10\n    return missiles.map((b) => {\n      const maxMissileVectorScaled = this.convertFloatToScaledBigInt(\n        this.missileVectorLimit\n      )\n      return {\n        step: b.step,\n        x: this.convertFloatToScaledBigInt(b.position.x).toString(),\n        y: this.convertFloatToScaledBigInt(b.position.y).toString(),\n        vx: (\n          this.convertFloatToScaledBigInt(b.velocity.x) + maxMissileVectorScaled\n        ).toString(),\n        vy: (\n          this.convertFloatToScaledBigInt(b.velocity.y) + maxMissileVectorScaled\n        ).toString(),\n        radius: radius.toString()\n      }\n    })\n  }\n\n  finish() {\n    if (this.finalBatchSent) return\n    // this.finished = true\n    // this.setPause(true)\n    const maxMissileVectorScaled = parseInt(\n      this.convertFloatToScaledBigInt(this.missileVectorLimit)\n    ).toString()\n\n    this.calculateBodyFinal()\n    const missileInputs = []\n    if (this.mode == 'game') {\n      let missileIndex = 0\n      // loop through all the steps that were just played since the last chunk\n      for (let i = this.alreadyRun; i < this.alreadyRun + this.stopEvery; i++) {\n        // if the step index matches the step where a missile was shot, add the missile to the missileInputs\n        // otherwise fill the missileInit array with an empty missile\n        if (this.missileInits[missileIndex]?.step == i) {\n          const missile = this.missileInits[missileIndex]\n          missileInputs.push([missile.vx, missile.vy, missile.radius])\n          missileIndex++\n        } else {\n          missileInputs.push([\n            maxMissileVectorScaled,\n            maxMissileVectorScaled,\n            '0'\n          ])\n        }\n      }\n      // add one more because missileInits contains one extra for circuit\n      missileInputs.push([maxMissileVectorScaled, maxMissileVectorScaled, '0'])\n    }\n\n    // define the inflightMissile for the proof from the first missile shot during this chunk\n    // if the first missile shot was shot at step == alreadyRun (start of this chunk)\n    // add it as an inflightMissile otherwise add a dummy missile\n    let inflightMissile =\n      this.missileInits[0]?.step == this.alreadyRun\n        ? this.missileInits[0]\n        : {\n            x: '0',\n            y: (this.windowWidth * parseInt(this.scalingFactor)).toString(),\n            vx: maxMissileVectorScaled,\n            vy: maxMissileVectorScaled,\n            radius: '0'\n          }\n    inflightMissile = [\n      inflightMissile.x,\n      inflightMissile.y,\n      inflightMissile.vx,\n      inflightMissile.vy,\n      inflightMissile.radius\n    ]\n\n    // defind outflightMissile for the proof from the currently flying missiles\n    // if there is no missile flying, add a dummy missile\n    const outflightMissileTmp = this.missiles[0] || {\n      px: '0',\n      py: (this.windowWidth * parseInt(this.scalingFactor)).toString(),\n      vx: maxMissileVectorScaled,\n      vy: maxMissileVectorScaled,\n      radius: '0'\n    }\n    const outflightMissile = [\n      outflightMissileTmp.px,\n      outflightMissileTmp.py,\n      outflightMissileTmp.vx,\n      outflightMissileTmp.vy,\n      outflightMissileTmp.radius\n    ]\n\n    const { day, level, bodyInits, bodyFinal, framesTook } = this\n\n    const results = JSON.parse(\n      JSON.stringify({\n        day,\n        level,\n        inflightMissile,\n        missiles: missileInputs,\n        bodyInits,\n        bodyFinal,\n        framesTook,\n        outflightMissile\n      })\n    )\n\n    this.bodyInits = JSON.parse(JSON.stringify(this.bodyFinal))\n    this.alreadyRun = this.frames\n\n    // this.missileInits is initialized with the currently in flight missiles\n    this.missileInits = this.processMissileInits(this.missiles).map((m) => {\n      m.step = this.frames\n      return m\n    })\n    this.emit('chunk', results)\n    this.bodyFinal = []\n    // this.setPause(false)\n    if (\n      this.mode == 'game' &&\n      this.bodies\n        .slice(this.level == 0 ? 0 : 1)\n        .reduce((a, c) => a + c.radius, 0) == 0\n    ) {\n      this.finalBatchSent = true\n    }\n    // if missiles.length > 0 that means that there is currently a missile in flight\n    // and so you can't add a new missile until the current missile has been finished.\n    // it is finished when this.missiles.length == 0, as checked in step() and missileClick()\n    // If a missile is shot while lastMissileCantBeUndone is true, then an event is emittied\n    // to notify the proving system to remove the last shot from the last chunk and the missile\n    // is removed from the missileInits array to prevent it from being used as incoming missile\n    // during the next chunk.\n    if (this.missiles.length > 0) {\n      console.log('LASTMISSILECANTBEUNDONE = TRUE')\n      this.lastMissileCantBeUndone = true\n    }\n    if (level !== 0) {\n      this.levelSpeeds[level - 1] = results\n    }\n    return results\n  }\n\n  generateLevelData(day, level) {\n    const bodyData = []\n    for (let i = 0; i <= level; i++) {\n      const dayLevelIndexSeed = utils.solidityKeccak256(\n        ['uint256', 'uint256', 'uint256'],\n        [day, level, i]\n      )\n      bodyData.push(this.getRandomValues(dayLevelIndexSeed, i, level))\n    }\n    return bodyData\n  }\n\n  getRandomValues(dayLevelIndexSeed, index, level = this.level) {\n    const maxVectorScaled = this.convertFloatToScaledBigInt(this.vectorLimit)\n\n    const body = {}\n    body.bodyIndex = index\n    body.seed = dayLevelIndexSeed\n    body.radius = this.genRadius(index, level)\n\n    if (level == 0) {\n      body.px = parseInt((BigInt(this.windowWidth) * this.scalingFactor) / 2n)\n      body.py = parseInt((BigInt(this.windowWidth) * this.scalingFactor) / 2n)\n      body.vx = parseInt(maxVectorScaled) - 5000\n      body.vy = parseInt(maxVectorScaled)\n      return body\n    }\n\n    let rand = utils.solidityKeccak256(['bytes32'], [dayLevelIndexSeed])\n    body.px = this.randomRange(\n      0,\n      BigInt(this.windowWidth) * this.scalingFactor,\n      rand\n    )\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    body.py = this.randomRange(\n      0,\n      BigInt(this.windowWidth) * this.scalingFactor,\n      rand\n    )\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    body.vx = this.randomRange(\n      maxVectorScaled / 2n,\n      (maxVectorScaled * 3n) / 2n,\n      rand\n    )\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    body.vy = this.randomRange(\n      maxVectorScaled / 2n,\n      (maxVectorScaled * 3n) / 2n,\n      rand\n    )\n\n    return body\n  }\n\n  genRadius(index, level = this.level) {\n    const radii = [36n, 27n, 22n, 17n, 12n, 7n] // n * 5 + 2\n    let size = level == 0 ? 27n : radii[index % radii.length]\n    return parseInt(size * BigInt(this.scalingFactor))\n  }\n\n  randomRange(minBigInt, maxBigInt, seed) {\n    if (minBigInt == maxBigInt) return minBigInt\n    minBigInt = typeof minBigInt === 'bigint' ? minBigInt : BigInt(minBigInt)\n    maxBigInt = typeof maxBigInt === 'bigint' ? maxBigInt : BigInt(maxBigInt)\n    seed = typeof seed === 'bigint' ? seed : BigInt(seed)\n    return parseInt((seed % (maxBigInt - minBigInt)) + minBigInt)\n  }\n\n  generateBodies() {\n    this.bodyData =\n      this.bodyData || this.generateLevelData(this.day, this.level)\n    this.bodies = this.bodyData.map((b) => this.bodyDataToBodies.call(this, b))\n    this.startingBodies = this.bodies.length\n  }\n\n  bodyDataToBodies(b, day = this.day) {\n    const bodyIndex = b.bodyIndex\n    const px = b.px / parseInt(this.scalingFactor)\n    const py = b.py / parseInt(this.scalingFactor)\n    const vx =\n      (b.vx - this.vectorLimit * parseInt(this.scalingFactor)) /\n      parseInt(this.scalingFactor)\n    const vy =\n      (b.vy - this.vectorLimit * parseInt(this.scalingFactor)) /\n      parseInt(this.scalingFactor)\n    const radius = b.radius / parseInt(this.scalingFactor)\n    // const faceIndex = this.getFaceIdx(b.seed)\n    return {\n      seed: b.seed,\n      // faceIndex,\n      bodyIndex: bodyIndex,\n      position: this.createVector(px, py),\n      velocity: this.createVector(vx, vy),\n      radius: radius,\n      c: this.getBodyColor(day, bodyIndex)\n    }\n  }\n\n  getBodyColor(day, bodyIndex = 0) {\n    let baddieSeed = utils.solidityKeccak256(\n      ['uint256', 'uint256'],\n      [day, bodyIndex]\n    )\n    const baddieHue = this.randomRange(0, 359, baddieSeed)\n    baddieSeed = utils.solidityKeccak256(['bytes32'], [baddieSeed])\n    const baddieSaturation = this.randomRange(90, 100, baddieSeed)\n    baddieSeed = utils.solidityKeccak256(['bytes32'], [baddieSeed])\n    const baddieLightness = this.randomRange(55, 60, baddieSeed)\n\n    // hero body info\n    const themes = Object.keys(bodyThemes)\n    const numberOfThemes = themes.length\n    let rand = utils.solidityKeccak256(['uint256'], [day])\n    const faceOptions = 14\n    const bgOptions = 10\n    const fgOptions = 10\n    const coreOptions = 1\n    const fIndex = this.randomRange(0, faceOptions - 1, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const bgIndex = this.randomRange(0, bgOptions - 1, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const fgIndex = this.randomRange(0, fgOptions - 1, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const coreIndex = this.randomRange(0, coreOptions - 1, rand)\n\n    const dailyThemeIndex = this.randomRange(0, numberOfThemes - 1, rand)\n\n    const themeName = themes[dailyThemeIndex]\n    const theme = bodyThemes[themeName]\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const bgHue = this.randomRange(0, 359, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const bgSaturationRange = theme.bg[1].split('-')\n    const bgSaturation = this.randomRange(\n      bgSaturationRange[0],\n      bgSaturationRange[1],\n      rand\n    )\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const bgLightnessRange = theme.bg[2].split('-')\n    const bgLightness = this.randomRange(\n      bgLightnessRange[0],\n      bgLightnessRange[1],\n      rand\n    )\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const coreHue = this.randomRange(0, 359, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const coreSaturationRange = theme.cr[1].split('-')\n    const coreSaturation = this.randomRange(\n      coreSaturationRange[0],\n      coreSaturationRange[1],\n      rand\n    )\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const coreLightnessRange = theme.cr[2].split('-')\n    const coreLightness = this.randomRange(\n      coreLightnessRange[0],\n      coreLightnessRange[1],\n      rand\n    )\n\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const fgHue = this.randomRange(0, 359, rand)\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const fgSaturationRange = theme.fg[1].split('-')\n    const fgSaturation = this.randomRange(\n      fgSaturationRange[0],\n      fgSaturationRange[1],\n      rand\n    )\n    rand = utils.solidityKeccak256(['bytes32'], [rand])\n    const fgLightnessRange = theme.fg[2].split('-')\n    const fgLightness = this.randomRange(\n      fgLightnessRange[0],\n      fgLightnessRange[1],\n      rand\n    )\n\n    const info = {\n      fIndex,\n      bgIndex,\n      fgIndex,\n      coreIndex,\n      bg: `hsl(${bgHue},${bgSaturation}%,${bgLightness}%`,\n      core: `hsl(${coreHue},${coreSaturation}%,${coreLightness}%`,\n      fg: `hsl(${fgHue},${fgSaturation}%,${fgLightness}%`,\n      baddie: [baddieHue, baddieSaturation, baddieLightness]\n    }\n    return info\n  }\n\n  prepareP5() {\n    this.p.frameRate(this.P5_FPS)\n    this.p.createCanvas(this.windowWidth, this.windowWidth)\n    this.p.pixelDensity(this.pixelDensity)\n    this.p.background('white')\n  }\n\n  missileClick(x, y) {\n    if (this.gameOver) return\n    if (this.paused) {\n      this.setPause(false)\n      return\n    }\n    if (\n      this.bodies.reduce((a, c) => a + c.radius, 0) == 0 ||\n      this.frames - this.startingFrame >= this.timer\n    ) {\n      return\n    }\n    // if (this.missiles.length > 0 && !this.admin) {\n    //   // this is a hack to prevent multiple missiles from being fired\n    //   this.missiles = []\n    //   // remove latest missile from missileInits\n    //   this.missileInits.pop()\n    // }\n\n    if (this.missiles.length > 0) {\n      if (this.lastMissileCantBeUndone) {\n        this.emit('remove-last-missile')\n        this.lastMissileCantBeUndone = false\n        console.log('LASTMISSILECANTBEUNDONE = FALSE')\n      }\n      this.missileInits.pop()\n      this.missileCount--\n    }\n\n    this.missileCount++\n    const radius = 10\n\n    const b = {\n      step: this.frames,\n      position: this.p.createVector(0, this.windowWidth),\n      velocity: this.p.createVector(x, y - this.windowWidth),\n      radius\n    }\n    // b.velocity.setMag(this.speedLimit * this.speedFactor)\n    b.velocity.limit(this.missileSpeed * this.speedFactor)\n    // const bodyCount = this.bodies.filter((b) => b.radius !== 0).length - 1\n    // this.missiles = this.missiles.slice(0, bodyCount)\n    // this.missiles = this.missiles.slice(-bodyCount)\n\n    // NOTE: this is stupid\n    this.missiles.push(b)\n    this.missiles = this.missiles.slice(-1)\n\n    this.sound?.playMissile()\n    this.missileInits.push(...this.processMissileInits([b]))\n  }\n\n  calculateStats = () => {\n    // n.b. this needs to match the contract in check_boost.cjs\n    const BODY_BOOST = [\n      0, // 0th body, just for easier indexing\n      0, // 1st body\n      0, // 2nd body\n      1, // 3rd body\n      2, // 4th body\n      4, // 5th body\n      8, // 6th body\n      16, // 7th body\n      32, // 8th body\n      64, //9th body\n      128 // 10th body\n    ]\n\n    const SPEED_BOOST = [\n      1, // <10s left\n      2, // <20s left\n      3, // <30s left\n      4, // <40s left\n      5, // <50s left\n      6 // < 60s left\n    ]\n\n    const bodiesIncluded = this.bodies.length\n    const bodiesBoost = BODY_BOOST[bodiesIncluded]\n    const { startingFrame, timer, frames } = this\n    const secondsLeft = (startingFrame + timer - frames) / this.FPS\n    const framesTook = frames - startingFrame - 1 // -1 because the first frame is the starting frame\n    const timeTook = framesTook / this.FPS\n    const speedBoostIndex = Math.floor(secondsLeft / 10)\n    const speedBoost = SPEED_BOOST[speedBoostIndex]\n    let dust = /*bodiesIncluded **/ bodiesBoost * speedBoost\n\n    const missilesShot = this.missileInits.reduce(\n      (p, c) => (c[0] == 0 ? p : p + 1),\n      0\n    )\n\n    return {\n      missilesShot,\n      bodiesIncluded,\n      bodiesBoost,\n      speedBoost,\n      dust,\n      timeTook,\n      framesTook\n    }\n  }\n\n  handleSave = () => {\n    // mock for testing visuals\n\n    if (this.saveStatus == 'unsaved') {\n      this.saveStatus = 'validating'\n      setTimeout(() => {\n        this.saveStatus = 'validated'\n      }, 2000)\n    } else if (this.saveStatus == 'validated') {\n      this.saveStatus = 'saving'\n      setTimeout(() => {\n        this.saveStatus = 'saved'\n      }, 2000)\n    }\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.Anybody = Anybody\n}\n\nBigInt.prototype.toJSON = function () {\n  return this.toString()\n}\n","import * as Tone from 'tone'\nconst {\n  Player,\n  PanVol,\n  Panner,\n  Reverb,\n  Compressor,\n  Volume,\n  Loop,\n  start,\n  loaded\n} = Tone\n\nconst whistle_8_T7 = new URL(\n  '/public/sound/whistle/whistle_8_T7.mp3',\n  import.meta.url\n).href\nconst whistle_4_T3 = new URL(\n  '/public/sound/whistle/whistle_4_T3.mp3',\n  import.meta.url\n).href\nconst whistle_7_T6 = new URL(\n  '/public/sound/whistle/whistle_7_T6.mp3',\n  import.meta.url\n).href\nconst whistle_12_T11 = new URL(\n  '/public/sound/whistle/whistle_12_T11.mp3',\n  import.meta.url\n).href\nconst whistle_8_T7_B = new URL(\n  '/public/sound/whistle/whistle_8_T7_B.mp3',\n  import.meta.url\n).href\n\nconst wii_2_T1 = new URL('/public/sound/wii/wii_2_T1.mp3', import.meta.url).href\nconst wii_4_T3 = new URL('/public/sound/wii/wii_4_T3.mp3', import.meta.url).href\nconst wii_8_T7 = new URL('/public/sound/wii/wii_8_T7.mp3', import.meta.url).href\nconst wii_10_T9 = new URL('/public/sound/wii/wii_10_T9.mp3', import.meta.url)\n  .href\nconst wii_12_T11 = new URL('/public/sound/wii/wii_12_T11.mp3', import.meta.url)\n  .href\nconst wii_T5 = new URL('/public/sound/wii/wii_T5.mp3', import.meta.url).href\nconst wii_chord = new URL('/public/sound/wii/wii_chord.mp3', import.meta.url)\n  .href\n\nconst ipod_2_T1 = new URL('/public/sound/ipod/ipod_2_T1.mp3', import.meta.url)\n  .href\nconst ipod_5_T4 = new URL('/public/sound/ipod/ipod_5_T4.mp3', import.meta.url)\n  .href\nconst ipod_7_T6 = new URL('/public/sound/ipod/ipod_7_T6.mp3', import.meta.url)\n  .href\nconst ipod_8_T7 = new URL('/public/sound/ipod/ipod_8_T7.mp3', import.meta.url)\n  .href\nconst ipod_14_FX = new URL('/public/sound/ipod/ipod_14_FX.mp3', import.meta.url)\n  .href\nconst ipod_15_Delay_Reverb = new URL(\n  '/public/sound/ipod/ipod_15_Delay_Reverb.mp3',\n  import.meta.url\n).href\nconst ipod_hiss = new URL('/public/sound/ipod/ipod_hiss.mp3', import.meta.url)\n  .href\n\nconst orbit_3_Audio = new URL(\n  '/public/sound/orbit/orbit_3-Audio.mp3',\n  import.meta.url\n).href\nconst orbit_8_DT1 = new URL(\n  '/public/sound/orbit/orbit_8_DT1.mp3',\n  import.meta.url\n).href\nconst orbit_9_DT2 = new URL(\n  '/public/sound/orbit/orbit_9_DT2.mp3',\n  import.meta.url\n).href\nconst orbit_10_DT6 = new URL(\n  '/public/sound/orbit/orbit_10_DT6.mp3',\n  import.meta.url\n).href\n\nconst coinBox = new URL('/public/sound/fx/coin-box.mp3', import.meta.url).href\nconst bongoHard = new URL(\n  '/public/sound/fx/SC_CP_perc_bongo_loud_tap.mp3',\n  import.meta.url\n).href\nconst bubble = new URL(\n  '/public/sound/fx/DSC_GST_one_shot_perc_water.mp3',\n  import.meta.url\n).href\nconst coin = new URL(\n  '/public/sound/fx/ESM_Game_Notification_83_Coin_Blip_Select_Tap_Button.mp3',\n  import.meta.url\n).href\n// const bottlerocket = new URL(\n//   '/public/sound/fx/space/BottleRocket_BW.60057.mp3',\n//   import.meta.url\n// ).href\n// const bottlerocket1 = new URL(\n//   '/public/sound/fx/space/BottleRocket_BW.60058.mp3',\n//   import.meta.url\n// ).href\nconst bottlerocket2 = new URL(\n  '/public/sound/fx/space/BottleRocket_S011FI.5.mp3',\n  import.meta.url\n).href\n// const heavy = new URL(\n//   '/public/sound/fx/space/ESM_GW_heavy_weapon_one_shot_rocket_launcher_launching_3_rocket_shot_clicky_long_gas_3.mp3',\n//   import.meta.url\n// ).href\nconst bomb = new URL(\n  '/public/sound/fx/space/ESM_Builder_Game_Fireworks_Bomb_Explosion_2_Fire_Bomb_Explosive_War_Battle_Rocket_Mortar_Tank_Cannon.mp3',\n  import.meta.url\n).href\nconst affirmative = new URL(\n  '/public/sound/fx/space/ESM_Digital_Game_Affirmation_Sound_Sci_fi_Military_Robotic_Robot_Cyber_Futuristic_Transition.mp3',\n  import.meta.url\n).href\n\nconst SONGS = {\n  whistle: {\n    bpm: 70,\n    parts: [\n      [\n        // each part consists of a set of tracks\n        // type Track: [sample, probability, introProbability?]\n        [whistle_8_T7, 1, 0],\n        [whistle_4_T3, 0.9, 1],\n        [whistle_7_T6, 0.7, 1],\n        [whistle_12_T11, 0.7, 0]\n      ],\n      [\n        [whistle_8_T7_B, 1, 0],\n        [whistle_4_T3, 0.7, 1],\n        [whistle_7_T6, 0.7, 1],\n        [whistle_12_T11, 0.7, 0]\n      ]\n    ]\n  },\n  wii: {\n    bpm: 70,\n    parts: [\n      [\n        [wii_2_T1, 1, 0],\n        [wii_4_T3, 0.9, 1],\n        [whistle_7_T6, 0.7, 0],\n        [wii_12_T11, 0.7, 1],\n        [wii_10_T9, 0.9, 1],\n        [wii_T5, 0.2, 0]\n      ],\n      [\n        [wii_2_T1, 1, 1],\n        [wii_4_T3, 0.9, 1],\n        [wii_8_T7, 1, 1],\n        [whistle_7_T6, 0.7, 0],\n        [wii_12_T11, 0.8, 0],\n        [wii_10_T9, 0.7, 1],\n        [wii_chord, 1, 1]\n      ]\n    ]\n  },\n  ipod: {\n    bpm: 113,\n    interval: '4m',\n    gameoverSpeed: 0.5,\n    parts: [\n      [\n        [ipod_2_T1, 0.9, 0],\n        [ipod_5_T4, 0.9, 1],\n        [ipod_7_T6, 0.7, 1],\n        [ipod_8_T7, 0.7, 0],\n        [ipod_14_FX, 0.5, 0],\n        [ipod_15_Delay_Reverb, 1, 0],\n        [ipod_hiss, 0.5, 0]\n      ]\n    ]\n  },\n  orbit: {\n    bpm: 96,\n    interval: '4m',\n    volume: -6,\n    parts: [\n      [\n        [orbit_3_Audio, 1, 1],\n        [orbit_8_DT1, 0.6, 0],\n        [orbit_9_DT2, 0.7, 0],\n        [orbit_10_DT6, 0.7, 0]\n      ]\n    ]\n  }\n}\n\nconst TRACK_VOLUME = 3 //db\nconst MAX_VOLUME = 8 //db\nconst INTRO_LENGTH = 1 // measures\nconst PAN_RANGE = 1.4 // 2 is hard L/R panning\n\nfunction random(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nexport default class Sound {\n  currentMeasure = 0\n\n  constructor(anybody) {\n    if (typeof window === 'undefined') return\n    this.anybody = anybody\n    window.addEventListener('keydown', this.handleKeyDown)\n    this.setSong()\n  }\n\n  setSong() {\n    const songs = Object.values(SONGS)\n    const songIndex = (3 + this.anybody.level) % songs.length\n    this.currentSong = songs[songIndex]\n  }\n\n  handleKeyDown = (e) => {\n    if (this.anybody.paused) return\n\n    if (e.key === '1') {\n      this.stop()\n      this.play(SONGS.whistle)\n    } else if (e.key === '2') {\n      this.stop()\n      this.play(SONGS.wii)\n    } else if (e.key === '3') {\n      this.stop()\n      this.play(SONGS.ipod)\n    } else if (e.key === '4') {\n      this.stop()\n      this.play(SONGS.orbit)\n    }\n  }\n\n  // this function must be called in response to a user action\n  // otherwise safari and chrome will block the audio\n  resume() {\n    this.play(this.currentSong)\n    this.playOneShot(bongoHard, -20)\n  }\n\n  pause() {\n    Tone.getTransport().stop()\n    this.voices?.forEach((voice) => voice.player.stop())\n    this.playOneShot(bongoHard, -22)\n  }\n\n  async playMissile() {\n    this.missilePanner = this.missilePanner || new Panner().connect(this.master)\n    this.missilePanner.pan.value = -PAN_RANGE / 2\n    let player\n    if (this.anybody.sfx === 'space') {\n      player = await this.playOneShot(bottlerocket2, -24, {\n        playbackRate: random([1, 2, 3])\n      })\n    } else {\n      player = await this.playOneShot(bubble, -26, {\n        playbackRate: random([1, 0.9, 1.3])\n      })\n    }\n    // pan sound left to right\n    if (player) {\n      player.disconnect()\n      player.connect(this.missilePanner)\n      this.missilePanner.pan.rampTo(PAN_RANGE / 2, 0.3)\n    }\n  }\n\n  async playExplosion(x) {\n    if (this.anybody.sfx === 'space') {\n      const player = await this.playOneShot(bomb, -20, {\n        playbackRate: random([1, 1.4, 0.8])\n      })\n      if (!player) return\n      const panner = new Panner().connect(this.master)\n      player.disconnect()\n      player.connect(panner)\n      panner.pan.value = (x / this.anybody.windowWidth) * 2 - 1\n    } else {\n      this.playOneShot(bubble, -36, { playbackRate: 2.3 })\n      this.playOneShot(bubble, -36, { playbackRate: 4.5 })\n      this.playOneShot(bubble, -16, { playbackRate: 0.2 })\n      await new Promise((resolve) => setTimeout(resolve, 100))\n      this.playOneShot(bubble, -26, { playbackRate: 1 })\n      this.playOneShot(bubble, -26, { playbackRate: 5.5 })\n      await new Promise((resolve) => setTimeout(resolve, 200))\n      this.playOneShot(bubble, -26, { playbackRate: 2.3 })\n      this.playOneShot(bubble, -26, { playbackRate: 5.5 })\n    }\n  }\n\n  async playOneShot(url, volume, opts = false) {\n    await start()\n    this.oneShots = this.oneShots || {}\n    const key = `${url}-${volume}-${opts && JSON.stringify(opts)}`\n    if (!this.oneShots[key]) {\n      this.oneShots[key] = new Player({\n        url,\n        volume,\n        ...opts\n      }).toDestination()\n    }\n\n    // play if it's been loaded or loads quickly, otherwise load and skip\n    const now = Date.now()\n    await loaded()\n    if (Date.now() - now < 200) {\n      this.oneShots[key].start()\n      return this.oneShots[key]\n    }\n  }\n\n  async playGameOver({ win }) {\n    if (this.playedGameOver) return\n    this.playedGameOver = true\n    Tone.getTransport().stop()\n    Tone.getTransport().cancel()\n    this.voices?.forEach((voice) => voice.player.stop())\n\n    // speed up the voices\n\n    const playbackRate = this.currentSong?.gameoverSpeed || 2\n    this.voices?.forEach((voice) => {\n      voice.player.playbackRate = playbackRate\n    })\n    Tone.getTransport().bpm.rampTo(\n      (Tone.getTransport().bpm.value *= playbackRate),\n      0.5\n    )\n\n    this.loop?.stop()\n    this.loop?.cancel()\n    this.loop?.start()\n\n    Tone.getTransport().start()\n\n    if (this.anybody.sfx === 'space') {\n      this.playOneShot(affirmative, -22, { playbackRate: 1 })\n      this.playOneShot(affirmative, -22, { playbackRate: 2 })\n      this.playOneShot(affirmative, -22, { playbackRate: 0.5 })\n    } else {\n      if (win) {\n        this.playOneShot(coin, -20)\n        this.playOneShot(coinBox, -26)\n      } else {\n        // play the bubble sample as a descending melody\n        this.playOneShot(ipod_hiss, -20)\n        this.playOneShot(bubble, -26, { playbackRate: 4 })\n        await new Promise((resolve) => setTimeout(resolve, 200))\n        this.playOneShot(bubble, -26, { playbackRate: 1 })\n        await new Promise((resolve) => setTimeout(resolve, 200))\n        this.playOneShot(bubble, -26, { playbackRate: 0.8 })\n        await new Promise((resolve) => setTimeout(resolve, 200))\n        this.playOneShot(bubble, -26, { playbackRate: 0.6 })\n        await new Promise((resolve) => setTimeout(resolve, 1000))\n      }\n    }\n  }\n\n  async playStart() {\n    if (this.anybody.sfx === 'space') {\n      this.playOneShot(affirmative, -22, { playbackRate: 1 })\n      this.playOneShot(affirmative, -22, { playbackRate: 2 })\n      this.playOneShot(affirmative, -22, { playbackRate: 0.5 })\n    } else {\n      this.playOneShot(coin, -20)\n    }\n  }\n\n  async playStat() {\n    if (this.anybody.sfx === 'space') {\n      this.playOneShot(bottlerocket2, -24, {\n        playbackRate: random([5, 10, 7])\n      })\n    } else {\n      this.playOneShot(bubble, -26, { playbackRate: random([3, 5, 10.5]) })\n    }\n  }\n\n  async playSuccess() {\n    if (this.anybody.sfx === 'space') {\n      this.playOneShot(affirmative, -22, { playbackRate: 1 })\n    } else {\n      this.playOneShot(coinBox, -28)\n    }\n  }\n\n  voiceFromFile(file) {\n    const voice = {\n      file: file,\n      player: new Player({\n        url: `${file}`,\n        fadeOut: 0.1\n      }),\n      panVol: new PanVol()\n    }\n    voice.panVol.volume.value = -Infinity\n    return voice\n  }\n\n  stop() {\n    Tone.getTransport().cancel()\n    Tone.getTransport().stop()\n    this.loop?.dispose()\n    this.voices?.forEach((voice) => {\n      voice.player.stop()\n      voice.player.dispose()\n      voice.panVol.dispose()\n    })\n    this.voices = null\n    this.currentMeasure = 0\n    this.playedGameOver = false\n  }\n\n  async play(song) {\n    // only start if it hasn't started yet\n    // if (Tone.getTransport().state === 'started') return\n    await start()\n    this.playingGameOver = false\n\n    // if song is different from last one, dispose of old voices\n    if (this.currentSong && this.currentSong !== song) {\n      this.stop()\n    }\n\n    this.currentSong = song\n\n    if (!this.voices) {\n      const parts = song.parts[0]\n      this.voices = parts.map((part) => this.voiceFromFile(part[0]))\n\n      // master output\n      this.reverb ||= new Reverb(0.5)\n      this.reverb.wet.value = 0.15\n      this.compressor ||= new Compressor()\n      this.compressor.threshold.value = -24\n      this.compressor.ratio.value = 2\n      this.compressor.attack.value = 1\n      this.compressor.release.value = 0.1\n      this.masterVolume?.dispose()\n      this.masterVolume = new Volume(song.volume || 0).toDestination()\n      this.masterVolume.volume.rampTo(song.volume || MAX_VOLUME, 3)\n      this.master = this.reverb\n        .connect(this.compressor)\n        .connect(this.masterVolume)\n\n      Tone.getTransport().bpm.value = song.bpm\n\n      await loaded()\n      this.loop = new Loop((time) => {\n        this.currentMeasure++\n        this.voices.forEach((voice, i) => {\n          // just step through parts\n          const part = song.parts[this.currentMeasure % song.parts.length][i]\n          const url = part[0]\n          if (url) {\n            voice.player.load(url)\n          } else {\n            voice.player.stop()\n          }\n          voice.player.chain(voice.panVol)\n          voice.panVol.connect(this.master)\n\n          // randomly mute some voices, but keep most on\n          const probability =\n            this.currentMeasure <= INTRO_LENGTH && typeof part[2] === 'number'\n              ? part[2]\n              : part[1]\n          if (Math.random() > probability) {\n            voice.panVol.volume.linearRampTo(-Infinity, 0.1, time)\n          } else {\n            voice.panVol.volume.linearRampTo(TRACK_VOLUME, 0.1, time)\n          }\n\n          voice.player.start(time)\n        })\n      }, song.interval || '2m').start()\n    }\n\n    // PLAY\n    Tone.getTransport().start()\n  }\n}\n","import { hslToRgb, rgbaOpacity, THEME, themes, randHSL } from './colors.js'\nimport { fonts, drawKernedText } from './fonts.js'\n\nconst BODY_SCALE = 4 // match to calculations.js !!\nconst WITHERING_STEPS = 3000\nconst GAME_LENGTH_BY_LEVEL_INDEX = [30, 10, 20, 30, 40, 50]\nconst LEVELS = GAME_LENGTH_BY_LEVEL_INDEX.length - 1\n\nconst rot = {\n  fg: {\n    direction: 1,\n    speed: 25\n  },\n  bg: {\n    direction: -1,\n    speed: 35\n  },\n  core: {\n    direction: 1,\n    speed: 100\n  }\n}\n\nconst rotOverride = {\n  fg: {\n    1: {\n      speed: 0\n    },\n    8: {\n      speed: 0\n    },\n    9: {\n      direction: -1\n    }\n  }\n}\n\nimport BG_SVG_1 from 'bundle-text:/public/bodies/bgs/bg1.svg'\nimport BG_SVG_2 from 'bundle-text:/public/bodies/bgs/bg2.svg'\nimport BG_SVG_3 from 'bundle-text:/public/bodies/bgs/bg3.svg'\nimport BG_SVG_4 from 'bundle-text:/public/bodies/bgs/bg4.svg'\nimport BG_SVG_5 from 'bundle-text:/public/bodies/bgs/bg5.svg'\nimport BG_SVG_6 from 'bundle-text:/public/bodies/bgs/bg6.svg'\nimport BG_SVG_7 from 'bundle-text:/public/bodies/bgs/bg7.svg'\nimport BG_SVG_8 from 'bundle-text:/public/bodies/bgs/bg8.svg'\nimport BG_SVG_9 from 'bundle-text:/public/bodies/bgs/bg9.svg'\nimport BG_SVG_10 from 'bundle-text:/public/bodies/bgs/bg10.svg'\nconst BG_SVGS = [\n  BG_SVG_1,\n  BG_SVG_2,\n  BG_SVG_3,\n  BG_SVG_4,\n  BG_SVG_5,\n  BG_SVG_6,\n  BG_SVG_7,\n  BG_SVG_8,\n  BG_SVG_9,\n  BG_SVG_10\n]\n\nimport FG_SVG_1 from 'bundle-text:/public/bodies/fgs/fg1.svg'\nimport FG_SVG_2 from 'bundle-text:/public/bodies/fgs/fg2.svg'\nimport FG_SVG_3 from 'bundle-text:/public/bodies/fgs/fg3.svg'\nimport FG_SVG_4 from 'bundle-text:/public/bodies/fgs/fg4.svg'\nimport FG_SVG_5 from 'bundle-text:/public/bodies/fgs/fg5.svg'\nimport FG_SVG_6 from 'bundle-text:/public/bodies/fgs/fg6.svg'\nimport FG_SVG_7 from 'bundle-text:/public/bodies/fgs/fg7.svg'\nimport FG_SVG_8 from 'bundle-text:/public/bodies/fgs/fg8.svg'\nimport FG_SVG_9 from 'bundle-text:/public/bodies/fgs/fg9.svg'\nimport FG_SVG_10 from 'bundle-text:/public/bodies/fgs/fg10.svg'\nconst FG_SVGS = [\n  FG_SVG_1,\n  FG_SVG_2,\n  FG_SVG_3,\n  FG_SVG_4,\n  FG_SVG_5,\n  FG_SVG_6,\n  FG_SVG_7,\n  FG_SVG_8,\n  FG_SVG_9,\n  FG_SVG_10\n]\n\nimport FACE_SVG_1 from 'bundle-text:/public/bodies/faces/1.svg'\nimport FACE_SVG_2 from 'bundle-text:/public/bodies/faces/2.svg'\nimport FACE_SVG_3 from 'bundle-text:/public/bodies/faces/3.svg'\nimport FACE_SVG_4 from 'bundle-text:/public/bodies/faces/4.svg'\nimport FACE_SVG_5 from 'bundle-text:/public/bodies/faces/5.svg'\nimport FACE_SVG_6 from 'bundle-text:/public/bodies/faces/6.svg'\nimport FACE_SVG_7 from 'bundle-text:/public/bodies/faces/7.svg'\nimport FACE_SVG_8 from 'bundle-text:/public/bodies/faces/8.svg'\nimport FACE_SVG_9 from 'bundle-text:/public/bodies/faces/9.svg'\nimport FACE_SVG_10 from 'bundle-text:/public/bodies/faces/10.svg'\nimport FACE_SVG_11 from 'bundle-text:/public/bodies/faces/11.svg'\nimport FACE_SVG_12 from 'bundle-text:/public/bodies/faces/12.svg'\nimport FACE_SVG_13 from 'bundle-text:/public/bodies/faces/13.svg'\nimport FACE_SVG_14 from 'bundle-text:/public/bodies/faces/14.svg'\nconst FACE_SVGS = [\n  FACE_SVG_1,\n  FACE_SVG_2,\n  FACE_SVG_3,\n  FACE_SVG_4,\n  FACE_SVG_5,\n  FACE_SVG_6,\n  FACE_SVG_7,\n  FACE_SVG_8,\n  FACE_SVG_9,\n  FACE_SVG_10,\n  FACE_SVG_11,\n  FACE_SVG_12,\n  FACE_SVG_13,\n  FACE_SVG_14\n]\n\nimport FACE_BLINK_SVG_1 from 'bundle-text:/public/bodies/faces_blink/1.svg'\nimport FACE_BLINK_SVG_2 from 'bundle-text:/public/bodies/faces_blink/2.svg'\nimport FACE_BLINK_SVG_3 from 'bundle-text:/public/bodies/faces_blink/3.svg'\nimport FACE_BLINK_SVG_4 from 'bundle-text:/public/bodies/faces_blink/4.svg'\nimport FACE_BLINK_SVG_5 from 'bundle-text:/public/bodies/faces_blink/5.svg'\nimport FACE_BLINK_SVG_6 from 'bundle-text:/public/bodies/faces_blink/6.svg'\nimport FACE_BLINK_SVG_7 from 'bundle-text:/public/bodies/faces_blink/7.svg'\nimport FACE_BLINK_SVG_8 from 'bundle-text:/public/bodies/faces_blink/8.svg'\nimport FACE_BLINK_SVG_9 from 'bundle-text:/public/bodies/faces_blink/9.svg'\nimport FACE_BLINK_SVG_10 from 'bundle-text:/public/bodies/faces_blink/10.svg'\nimport FACE_BLINK_SVG_11 from 'bundle-text:/public/bodies/faces_blink/11.svg'\nimport FACE_BLINK_SVG_12 from 'bundle-text:/public/bodies/faces_blink/12.svg'\nimport FACE_BLINK_SVG_13 from 'bundle-text:/public/bodies/faces_blink/13.svg'\nimport FACE_BLINK_SVG_14 from 'bundle-text:/public/bodies/faces_blink/14.svg'\nconst FACE_BLINK_SVGS = [\n  FACE_BLINK_SVG_1,\n  FACE_BLINK_SVG_2,\n  FACE_BLINK_SVG_3,\n  FACE_BLINK_SVG_4,\n  FACE_BLINK_SVG_5,\n  FACE_BLINK_SVG_6,\n  FACE_BLINK_SVG_7,\n  FACE_BLINK_SVG_8,\n  FACE_BLINK_SVG_9,\n  FACE_BLINK_SVG_10,\n  FACE_BLINK_SVG_11,\n  FACE_BLINK_SVG_12,\n  FACE_BLINK_SVG_13,\n  FACE_BLINK_SVG_14\n]\n\nimport FACE_SHOT_SVG_1 from 'bundle-text:/public/bodies/faces_shot/1.svg'\nimport FACE_SHOT_SVG_2 from 'bundle-text:/public/bodies/faces_shot/2.svg'\nimport FACE_SHOT_SVG_3 from 'bundle-text:/public/bodies/faces_shot/3.svg'\nimport FACE_SHOT_SVG_4 from 'bundle-text:/public/bodies/faces_shot/4.svg'\nimport FACE_SHOT_SVG_5 from 'bundle-text:/public/bodies/faces_shot/5.svg'\nimport FACE_SHOT_SVG_6 from 'bundle-text:/public/bodies/faces_shot/6.svg'\nimport FACE_SHOT_SVG_7 from 'bundle-text:/public/bodies/faces_shot/7.svg'\nimport FACE_SHOT_SVG_8 from 'bundle-text:/public/bodies/faces_shot/8.svg'\nimport FACE_SHOT_SVG_9 from 'bundle-text:/public/bodies/faces_shot/9.svg'\nimport FACE_SHOT_SVG_10 from 'bundle-text:/public/bodies/faces_shot/10.svg'\nimport FACE_SHOT_SVG_11 from 'bundle-text:/public/bodies/faces_shot/11.svg'\nimport FACE_SHOT_SVG_12 from 'bundle-text:/public/bodies/faces_shot/12.svg'\nimport FACE_SHOT_SVG_13 from 'bundle-text:/public/bodies/faces_shot/13.svg'\nimport FACE_SHOT_SVG_14 from 'bundle-text:/public/bodies/faces_shot/14.svg'\n\nconst FACE_SHOT_SVGS = [\n  FACE_SHOT_SVG_1,\n  FACE_SHOT_SVG_2,\n  FACE_SHOT_SVG_3,\n  FACE_SHOT_SVG_4,\n  FACE_SHOT_SVG_5,\n  FACE_SHOT_SVG_6,\n  FACE_SHOT_SVG_7,\n  FACE_SHOT_SVG_8,\n  FACE_SHOT_SVG_9,\n  FACE_SHOT_SVG_10,\n  FACE_SHOT_SVG_11,\n  FACE_SHOT_SVG_12,\n  FACE_SHOT_SVG_13,\n  FACE_SHOT_SVG_14\n]\n\nimport CORE_SVG from 'bundle-text:/public/bodies/cores/core-zigzag-lg.svg'\nconst CORE_SVGS = [CORE_SVG]\n\nimport BADDIE_BG_SVG from 'bundle-text:/public/baddies/baddie-bg.svg'\nimport BADDIE_CORE_SVG from 'bundle-text:/public/baddies/baddie-core.svg'\nimport BADDIE_FACE_SVG from 'bundle-text:/public/baddies/baddie-face.svg'\nconst BADDIE_SVG = {\n  bg: BADDIE_BG_SVG,\n  core: BADDIE_CORE_SVG,\n  face: BADDIE_FACE_SVG\n}\n\nconst replaceAttribute = (string, key, color) =>\n  string.replaceAll(\n    new RegExp(`${key}=\"(?!none)([^\"]+)\"`, 'g'),\n    `${key}=\"${color}\"`\n  )\n\nexport const Visuals = {\n  async draw() {\n    for (const key in this.buttons) {\n      const button = this.buttons[key]\n      button.visible = false\n    }\n    if (!this.showIt) return\n    if (!this.firstFrame && !this.hasStarted) {\n      this.hasStarted = true\n      this.started()\n    }\n\n    if (!this.paused && this.p5Frames % this.P5_FPS_MULTIPLIER == 0) {\n      this.firstFrame = false\n      this.frames++\n      const results = this.step(this.bodies, this.missiles)\n      this.bodies = results.bodies || []\n      this.missiles = results.missiles || []\n    }\n\n    this.p.noFill()\n    this.drawBg()\n    if (this.globalStyle == 'psycho') {\n      this.p.blendMode(this.p.DIFFERENCE)\n    }\n\n    if (this.globalStyle == 'psycho') {\n      this.p.blendMode(this.p.BLEND)\n    }\n\n    this.p5Frames++\n    // if (\n    //   this.mode == 'game' &&\n    //   this.target == 'inside' &&\n    //   !this.firstFrame &&\n    //   this.globalStyle !== 'psycho'\n    // ) {\n    //   for (let i = 0; i < this.bodies.length; i++) {\n    //     const body = this.bodies[i]\n    //     this.drawCenter(body)\n    //   }\n    // }\n\n    if (!this.paused) {\n      this.drawBodies()\n    }\n\n    if (\n      this.mode == 'game' &&\n      this.target == 'outside' &&\n      !this.firstFrame &&\n      this.globalStyle !== 'psycho'\n    ) {\n      for (let i = 0; i < this.bodies.length; i++) {\n        const body = this.bodies[i]\n        this.drawCenter(body)\n      }\n    }\n    this.drawWitheringBodies()\n\n    this.drawPause()\n    this.drawScore()\n    this.drawPopup()\n    this.drawGun()\n\n    if (\n      this.mode == 'game' &&\n      this.frames - this.startingFrame + this.FPS < this.timer &&\n      this.bodies.reduce((a, c) => a + c.radius, 0) != 0\n    ) {\n      this.drawMissiles()\n    }\n    this.drawExplosions()\n\n    const notPaused = !this.paused\n    const framesIsAtStopEveryInterval =\n      (this.frames - this.startingFrame) % this.stopEvery == 0 &&\n      this.p5Frames % this.P5_FPS_MULTIPLIER == 0\n    const didNotJustPause = !this.justPaused\n\n    const ranOutOfTime =\n      this.frames - this.startingFrame + this.FPS >= this.timer\n    const hitHeroBody = this.bodies[0].radius == 0 && this.level !== 0\n\n    if ((ranOutOfTime || hitHeroBody) && !this.handledGameOver) {\n      this.handleGameOver({ won: false, ranOutOfTime, hitHeroBody })\n    }\n    if (\n      !this.won &&\n      this.mode == 'game' &&\n      this.bodies\n        .slice(this.level == 0 ? 0 : 1)\n        .reduce((a, c) => a + c.radius, 0) == 0 &&\n      !this.handledGameOver\n    ) {\n      this.handleGameOver({ won: true })\n    }\n\n    if (\n      !this.firstFrame &&\n      notPaused &&\n      framesIsAtStopEveryInterval &&\n      didNotJustPause &&\n      !ranOutOfTime &&\n      !this.handledGameOver\n    ) {\n      this.finish()\n    } else {\n      this.justPaused = false\n    }\n  },\n\n  drawPause() {\n    if (!fonts.dot || !this.paused || this.showProblemRankingsScreenAt !== -1)\n      return\n\n    this.pauseGraphic ||= this.p.createGraphics(\n      this.windowWidth,\n      this.windowHeight\n    )\n    this.pauseGraphic.pixelDensity(this.pixelDensity)\n    this.pauseGraphic.clear()\n\n    const p = this.pauseGraphic\n\n    const unpauseDuration = this.level == 0 ? 2 : 0\n    const unpauseFrames = unpauseDuration * this.P5_FPS\n    if (this.willUnpause && !this.beganUnpauseAt) {\n      this.willUnpause = true\n      this.beganUnpauseAt = this.p5Frames\n    }\n\n    // pause and return when unpause finished\n    if (this.beganUnpauseAt + unpauseFrames < this.p5Frames) {\n      this.paused = false\n      this.willUnpause = false\n      return\n    } else if (this.willUnpause) {\n      // fade text out\n      const fadeOutFrames = (unpauseFrames / 4) * 3\n      const fadeOutStart = this.beganUnpauseAt\n      const fadeOutProgress = this.p5Frames - fadeOutStart\n      const fadeOut = this.p.map(fadeOutProgress, 0, fadeOutFrames, 1, 0)\n      p.fill(rgbaOpacity(THEME.pink, fadeOut))\n    } else {\n      p.fill(THEME.pink)\n    }\n\n    this.drawPauseBodies()\n\n    // draw logo\n    p.textFont(fonts.dot)\n    p.textSize(200)\n    p.textAlign(p.LEFT, p.TOP)\n    p.noStroke()\n    const titleY = this.windowHeight / 2 - 270\n    drawKernedText(p, 'Anybody', 46, titleY, 0.8)\n    drawKernedText(p, 'Problem', 46, titleY + 240, 2)\n\n    if (!this.willUnpause) {\n      // play button\n      this.drawFatButton({\n        text: 'PLAY',\n        onClick: () => {\n          if (!this.playerName) {\n            // open connect wallet popup\n            this.popup = {\n              header: 'Play Onchain',\n              body: [\n                'Free to play!  ...or practice!',\n                'Connect a wallet to validate your wins.'\n              ],\n              buttons: [\n                {\n                  text: 'PRACTICE',\n                  fg: THEME.violet_50,\n                  bg: THEME.violet_25,\n                  stroke: THEME.violet_50,\n                  onClick: () => {\n                    // start practice mode\n                    this.popup = null\n                    this.sound?.playStart()\n                    this.setPause(false)\n                    this.practiceMode = true\n                  }\n                },\n                {\n                  text: 'CONNECT',\n                  fg: THEME.violet_25,\n                  bg: THEME.violet_50,\n                  stroke: THEME.violet_50,\n                  onClick: () => {\n                    this.emit('connect-wallet')\n                  }\n                }\n              ]\n            }\n            return\n          }\n          // start play\n          this.sound?.playStart()\n          this.setPause(false)\n          this.practiceMode = false\n        },\n        fg: THEME.fuschia,\n        bg: THEME.pink,\n        bottom: 120,\n        p\n      })\n\n      // date\n      p.textFont(fonts.body)\n      p.textSize(24)\n      const dateWidth = p.textWidth(this.date)\n      const dateBgWidth = dateWidth + 48\n      const dateBgHeight = 32\n      const dateBottomY = this.windowHeight - 58\n      p.fill(THEME.textBg)\n      p.rect(\n        this.windowWidth / 2 - dateBgWidth / 2,\n        dateBottomY - dateBgHeight / 2,\n        dateBgWidth,\n        dateBgHeight,\n        20\n      )\n      p.textAlign(p.CENTER, p.CENTER)\n      p.fill(THEME.textFg)\n      p.text(this.date, this.windowWidth / 2, dateBottomY)\n    }\n\n    this.p.image(this.pauseGraphic, 0, 0)\n  },\n  drawBodyOutlines() {\n    for (let i = 0; i < this.bodies.length; i++) {\n      const body = this.bodies[i]\n      const radius = body.radius * 4\n\n      this.p.stroke(this.getGrey())\n      this.p.stroke('black')\n      this.p.strokeWeight(1)\n      this.p.color('rgba(0,0,0,0)')\n      this.p.ellipse(body.position.x, body.position.y, radius, radius)\n    }\n  },\n\n  drawBg() {\n    this.p.background(THEME.bg)\n\n    if (!this.starBG) {\n      this.starBG = this.p.createGraphics(this.windowWidth, this.windowHeight)\n      this.starBG.pixelDensity(this.pixelDensity)\n\n      for (let i = 0; i < 200; i++) {\n        // this.starBG.stroke('black')\n        this.starBG.noStroke()\n        // this.starBG.fill('rgba(255,255,255,0.6)')\n        // this.starBG.fill('black')\n        this.starBG.fill(THEME.fg)\n        this.starBG.textSize(15)\n        const strings = [',', '.', '*']\n        this.starBG.text(\n          strings[Math.floor(Math.random() * strings.length)],\n          Math.floor(Math.random() * this.windowWidth),\n          Math.floor(Math.random() * this.windowHeight)\n        )\n      }\n      //   const totalLines = 6\n      //   for (let i = 0; i < totalLines; i++) {\n      //     if (i % 5 == 5) {\n      //       this.starBG.strokeWeight(1)\n      //       // this.starBG.stroke(`hsl(${i * (360 / totalLines)}, 100%, 50%)`)\n      //     } else {\n      //       this.starBG.strokeWeight(1)\n      //       // this.starBG.stroke('rgba(0,0,0,0.1)')\n      //     }\n      //     this.starBG.line(i * (this.windowWidth / totalLines), 0, i * (this.windowWidth / totalLines), this.windowHeight)\n      //     this.starBG.line(0, i * (this.windowHeight / totalLines), this.windowWidth, i * (this.windowHeight / totalLines))\n      //   }\n      // }\n    }\n    const basicX = 0\n    // Math.floor((this.frames / FPS) * (this.frames / FPS)) % this.windowWidth\n    const basicY = 0\n    // Math.floor((this.frames / FPS) * (this.frames / FPS)) % this.windowHeight\n\n    // const basicX = this.accumX % this.windowWidth\n    // const basicY = this.accumY % this.windowHeight\n\n    // const Xleft = basicX - this.windowWidth\n    // const Xright = basicX + this.windowWidth\n\n    // const Ytop = basicY - this.windowHeight\n    // const Ybottom = basicY + this.windowHeight\n\n    // this.confirmedStarPositions ||= []\n    // for (let i = 0; i < this.starPositions?.length; i++) {\n    //   if (i < this.confirmedStarPositions.length) continue\n    //   const starBody = this.starPositions[i]\n    //   const radius = starBody.radius * 4\n    //   if (Xleft < 10) {\n    //     this.drawBodiesLooped(starBody, radius, this.drawStarOnBG)\n    //     if (this.loaded) {\n    //       this.confirmedStarPositions.push(this.starPositions[i])\n    //     }\n    //   } else {\n    //     this.drawBodiesLooped(starBody, radius, this.drawStarOnTopOfBG)\n    //   }\n    // }\n\n    this.p.image(\n      this.starBG,\n      basicX,\n      basicY,\n      this.windowWidth,\n      this.windowHeight\n    )\n    // this.p.image(\n    //   this.starBG,\n    //   Xleft,\n    //   basicY,\n    //   this.windowWidth,\n    //   this.windowHeight\n    // )\n    // this.p.image(\n    //   this.starBG,\n    //   Xright,\n    //   basicY,\n    //   this.windowWidth,\n    //   this.windowHeight\n    // )\n    // this.p.image(this.starBG, basicX, Ytop, this.windowWidth, this.windowHeight)\n    // this.p.image(\n    //   this.starBG,\n    //   basicX,\n    //   Ybottom,\n    //   this.windowWidth,\n    //   this.windowHeight\n    // )\n    // this.p.image(this.starBG, Xleft, Ytop, this.windowWidth, this.windowHeight)\n    // this.p.image(this.starBG, Xright, Ytop, this.windowWidth, this.windowHeight)\n    // this.p.image(\n    //   this.starBG,\n    //   Xleft,\n    //   Ybottom,\n    //   this.windowWidth,\n    //   this.windowHeight\n    // )\n    // this.p.image(\n    //   this.starBG,\n    //   Xright,\n    //   Ybottom,\n    //   this.windowWidth,\n    //   this.windowHeight\n    // )\n\n    // // Grid lines, uncomment for visual debugging and alignment\n    // const boxCount = 6\n    // // this.p.stroke('black')\n    // this.p.stroke('white')\n    // for (let i = 1; i < boxCount; i++) {\n    //   if (i % 5 == 5) {\n    //     this.p.strokeWeight(1)\n    //     // this.starBG.stroke(`hsl(${i * (360 / totalLines)}, 100%, 50%)`)\n    //   } else {\n    //     this.p.strokeWeight(1)\n    //   }\n    //   this.p.line(\n    //     i * (this.windowWidth / boxCount),\n    //     0,\n    //     i * (this.windowWidth / boxCount),\n    //     this.windowHeight\n    //   )\n    //   this.p.line(\n    //     0,\n    //     i * (this.windowHeight / boxCount),\n    //     this.windowWidth,\n    //     i * (this.windowHeight / boxCount)\n    //   )\n    // }\n  },\n\n  drawPopup() {\n    if (!this.popup) return\n    const { p, popup } = this\n\n    // animate in\n    const animDuration = 0.2 // seconds\n\n    const justEntered = popup.lastVisibleFrame !== this.p5Frames - 1\n    if (justEntered) {\n      popup.visibleForFrames = 0\n    }\n    popup.visibleForFrames++\n    popup.lastVisibleFrame = this.p5Frames\n\n    const alpha = Math.min(\n      0.75,\n      popup.visibleForFrames / (animDuration * this.P5_FPS)\n    )\n\n    p.fill(`rgba(20, 4, 32, ${alpha})`)\n    p.noStroke()\n    p.rect(0, 0, this.windowWidth, this.windowHeight)\n\n    const x = 180\n    const w = 640\n    const pad = [36, 48, 120, 48]\n    const fz = [72, 32]\n    const bg = popup.bg ?? THEME.violet_25\n    const fg = popup.fg ?? THEME.violet_50\n    const stroke = popup.stroke ?? fg\n\n    const h = pad[0] + fz[0] + fz[1] * popup.body.length + pad[2]\n    const animY = Math.max(\n      0,\n      50 - (50 / (animDuration * this.P5_FPS)) * popup.visibleForFrames\n    )\n    const y = (this.windowHeight - h) / 2 + animY\n\n    // modal\n    p.fill(bg)\n    p.stroke(stroke)\n    p.strokeWeight(3)\n    p.rect(x, y, w, h, 24, 24, 24, 24)\n\n    // heading\n    if (!fonts.dot) return\n    p.textFont(fonts.dot)\n    p.fill(popup.fg ?? fg)\n    p.textSize(fz[0])\n    p.textAlign(p.CENTER, p.TOP)\n    p.noStroke()\n    p.text(popup.header, x + w / 2, y + pad[0])\n\n    // body\n    if (!fonts.body) return\n    p.textFont(fonts.body)\n    p.textSize(fz[1])\n    p.textAlign(p.CENTER, p.TOP)\n    popup.body.forEach((text, i) => {\n      const lineGap = parseInt(fz[1] * 0.25)\n      const y1 = y + pad[0] + fz[0] + fz[1] * (i + 1) + lineGap * (i + 1) - 10\n      p.text(text, x + w / 2, y1)\n    })\n\n    // buttons (max 2)\n    const btnGutter = 10\n    const btnW = w / 2 - pad[1] / 2 - btnGutter / 2\n    const defaultOptions = {\n      height: 84,\n      width: btnW,\n      y: y + h - 84 / 2,\n      fg,\n      bg,\n      stroke\n    }\n\n    popup.buttons.slice(0, 2).forEach((options, i) => {\n      this.drawButton({\n        x:\n          popup.buttons.length > 1\n            ? x + pad[1] / 2 + (btnW + btnGutter) * i\n            : x + w / 2 - btnW / 2, // centered\n        ...defaultOptions,\n        ...options\n      })\n    })\n\n    p.pop()\n  },\n\n  getColorDir(chunk) {\n    return Math.floor(this.frames / (255 * chunk)) % 2 == 0\n  },\n\n  getGrey() {\n    if (this.getColorDir(this.chunk)) {\n      return 255 - (Math.floor(this.frames / this.chunk) % 255)\n    } else {\n      return Math.floor(this.frames / this.chunk) % 255\n    }\n  },\n\n  drawScore() {\n    if (this.paused) return\n    const { p } = this\n    p.push()\n    p.fill('white')\n    p.noStroke()\n    p.textAlign(p.LEFT, p.TOP)\n\n    this.drawProblemRankingsScreen()\n\n    const runningFrames = this.frames - this.startingFrame\n    const seconds = (this.framesTook || runningFrames) / this.FPS\n    const secondsLeft =\n      (this.level > 5 ? 60 : GAME_LENGTH_BY_LEVEL_INDEX[this.level]) - seconds\n    if (this.gameOver) {\n      this.scoreSize = this.initialScoreSize\n      p.pop()\n      this.won ? this.drawWinScreen() : this.drawLoseScreen()\n      if (!this.celebrating) return\n    }\n\n    // flash the score red and white\n    if (this.won) {\n      const flash = Math.floor(this.frames / 10) % 2 == 0\n      p.fill(flash ? THEME.red : 'white')\n    }\n\n    p.textFont(fonts.body)\n    p.textSize(this.scoreSize)\n    if (\n      runningFrames > 2 &&\n      (!this.gameOver || (this.gameOver && this.won && !this.skipAhead))\n    ) {\n      if (this.won) {\n        p.textSize(this.scoreSize * 2)\n        p.text(seconds.toFixed(2) + 's', 20, 10)\n      } else {\n        p.text(secondsLeft.toFixed(2), 20, 10)\n        p.textAlign(p.RIGHT, p.TOP)\n        p.text('Lvl ' + this.level, this.windowWidth - 20, 10)\n      }\n    }\n\n    p.pop()\n  },\n\n  drawWinScreen() {\n    if (this.showProblemRankingsScreenAt >= 0) return\n\n    const justEntered = this.winScreenLastVisibleFrame !== this.p5Frames - 1\n    if (justEntered) {\n      this.winScreenVisibleForFrames = 0\n    }\n    this.winScreenVisibleForFrames++\n    this.winScreenLastVisibleFrame = this.p5Frames\n\n    const celebrationTime = 5 // seconds\n    this.celebrating =\n      this.winScreenVisibleForFrames / this.P5_FPS < celebrationTime\n\n    if (this.celebrating && !this.skipAhead) {\n      this.drawGameOverTicker({\n        text: '                 YES  YES  YES  YES  YES  YES  YES  YES',\n        bottom: true,\n        fg: THEME.iris_30\n      })\n    } else {\n      if (this.level == 0) {\n        this.level++\n        this.restart(null, false)\n      } else {\n        this.drawStatsScreen()\n      }\n    }\n  },\n\n  drawStatsScreen() {\n    const { p } = this\n\n    const justEntered = this.statsScreenLastVisibleFrame !== this.p5Frames - 1\n    if (justEntered) {\n      this.statsScreenVisibleForFrames = 0\n      this.P5_FPS = this.FPS * this.P5_FPS_MULTIPLIER\n      this.p.frameRate(this.P5_FPS)\n    }\n    this.statsScreenVisibleForFrames++\n    this.statsScreenLastVisibleFrame = this.p5Frames\n\n    const entranceTime = 0.4 // seconds\n\n    const scale = Math.min(\n      1,\n      this.statsScreenVisibleForFrames / (entranceTime * this.P5_FPS)\n    )\n\n    p.push()\n    p.noStroke()\n    p.fill('white')\n\n    // logo at top\n    if (!fonts.dot) return\n    p.textFont(fonts.dot)\n    p.fill(THEME.pink)\n    p.textSize(60)\n    p.textAlign(p.LEFT, p.TOP)\n    const logoY = p.map(scale, 0, 1, -100, 22)\n    drawKernedText(p, 'Anybody', 334, logoY, 0.8)\n    drawKernedText(p, 'Problem', 640, logoY, 2)\n\n    // bordered boxes\n    p.fill('black')\n    p.stroke(THEME.border)\n    p.strokeWeight(1)\n    const gutter = 22\n    const middleBoxY = 320\n    p.rect(gutter, 104, this.windowWidth - gutter * 2, 144, 24)\n\n    if (this.showShare) {\n      p.rect(gutter, 320, this.windowWidth - gutter * 2, 524, 24)\n    } else {\n      p.rect(gutter, 320, this.windowWidth - gutter * 2, 444, 24)\n      p.rect(gutter, 796, this.windowWidth - gutter * 2, 64, 24)\n    }\n\n    // upper box text\n    p.textSize(32)\n    p.noStroke()\n    if (!fonts.body) return\n    p.textFont(fonts.body)\n    p.fill(THEME.iris_60)\n\n    // upper box text - labels\n    p.text('problem', 330, 132)\n    p.text('solver', 330, 192)\n\n    // upper box text - values\n    p.textSize(54)\n    p.fill(THEME.iris_30)\n    const date = new Date(this.date)\n    const options = { month: 'short', day: '2-digit', year: 'numeric' }\n    const formattedDate = date\n      .toLocaleDateString('en-US', options)\n      .toUpperCase()\n      .replace(', ', '-')\n      .replace(' ', '-')\n    p.text(formattedDate, 454, 114)\n    p.text(this.playerName ?? 'YOU', 454, 174)\n    // end upper box text\n\n    // middle box text\n    p.textSize(48)\n    p.fill(THEME.iris_60)\n    p.textAlign(p.RIGHT, p.TOP)\n    const col1X = 580\n    const col2X = 770\n    const col3X = 960\n\n    // middle box text - labels\n    p.text('time', col1X, 264)\n    p.text('best', col2X, 264)\n    p.text('+/-', col3X, 264)\n\n    // middle box text - values\n    const levelTimes = this.levelSpeeds\n      .map((result) => result?.framesTook / this.FPS)\n      .filter((l) => l !== undefined)\n    const bestTimes =\n      this.todaysRecords?.levels?.map((l) => l.events[0].time / this.FPS) ||\n      Array.from({ length: 5 }, (_, i) => levelTimes[i] || 0)\n    const plusMinus = bestTimes\n      .map((best, i) => {\n        if (i >= levelTimes.length) return ''\n        const time = levelTimes[i]\n        const diff = time - best\n        const sign = diff > 0 ? '+' : ''\n        return sign + diff.toFixed(2)\n      })\n      .filter(Boolean)\n    const problemComplete = levelTimes.length >= LEVELS\n    const rowHeight = 72\n\n    // middle box text - highlight current row\n    p.fill('rgba(146, 118, 255, 0.2)')\n    p.rect(\n      gutter,\n      middleBoxY + (levelTimes.length - 1) * rowHeight,\n      this.windowWidth - gutter * 2,\n      rowHeight\n    )\n\n    // middle box text - value text\n    p.push()\n    p.textAlign(p.RIGHT, p.CENTER)\n    p.textSize(44)\n    // const middleBoxPadding = 12\n    // p.translate(0, middleBoxPadding)\n    for (let i = 0; i < LEVELS; i++) {\n      const time = i < levelTimes.length ? levelTimes[i].toFixed(2) : '-'\n      const light = i % 2 == 0\n      p.fill(light ? THEME.iris_30 : THEME.iris_60)\n      p.text(\n        time,\n        col1X,\n        middleBoxY + rowHeight * i + rowHeight / 2,\n        150,\n        rowHeight\n      )\n    }\n    for (let i = 0; i < LEVELS; i++) {\n      const best = i < bestTimes.length ? bestTimes[i] : '-'\n      const light = i % 2 == 1 && i < levelTimes.length\n      p.fill(light ? THEME.iris_30 : THEME.iris_60)\n      p.text(\n        best.toFixed(2),\n        col2X,\n        middleBoxY + rowHeight * i + rowHeight / 2,\n        150,\n        rowHeight\n      )\n    }\n    for (let i = 0; i < LEVELS; i++) {\n      const diff = plusMinus[i] || '-'\n      if (i === levelTimes.length - 1) {\n        p.fill(/^-/.test(diff) ? THEME.lime : THEME.flame_50)\n      } else {\n        p.fill(/^-/.test(diff) ? THEME.green_75 : THEME.flame_75)\n      }\n      p.text(\n        diff,\n        col3X,\n        middleBoxY + rowHeight * i + rowHeight / 2,\n        150,\n        rowHeight\n      )\n    }\n    p.textSize(64)\n\n    // middle box text - sum line\n    const bestTime = bestTimes\n      .slice(0, levelTimes.length)\n      .reduce((a, b) => a + b, 0)\n    const levelTimeSum = levelTimes.reduce((a, b) => a + b, 0)\n    const sumLine = [\n      levelTimeSum.toFixed(2),\n      bestTime.toFixed(2),\n      (levelTimeSum - bestTime).toFixed(2)\n    ]\n    const sumLineY = middleBoxY + rowHeight * bestTimes.length + rowHeight / 2\n    const sumLineHeight = 80\n    p.textAlign(p.LEFT, p.CENTER)\n    p.fill(THEME.iris_30)\n    p.text(problemComplete ? 'solved in' : 'current time', 44, sumLineY)\n    p.textAlign(p.RIGHT, p.CENTER)\n    for (const [i, col] of [col1X, col2X, col3X].entries()) {\n      if (i == 0) p.fill('white')\n      else if (i == 1) p.fill(THEME.iris_60)\n      else p.fill(/^-/.test(sumLine[i]) ? THEME.lime : THEME.flame_75)\n      p.text(sumLine[i], col, sumLineY, 150, sumLineHeight)\n    }\n\n    p.pop()\n    // end middle box text\n\n    // draw hero this.bodies[0]\n    const body = this.getDisplayHero()\n    const radius = this.getBodyRadius(body.radius)\n    const xWobble = p.sin(p.frameCount / this.P5_FPS) * (5 + body.bodyIndex)\n    const yWobble =\n      p.cos(p.frameCount / this.P5_FPS + body.bodyIndex * 3) *\n      (6 + body.bodyIndex)\n\n    body.position = {\n      x: p.map(scale, 0, 1, -140, 170) + xWobble,\n      y: 180 + yWobble\n    }\n    this.bodiesGraphic ||= this.p.createGraphics(\n      this.windowWidth,\n      this.windowHeight\n    )\n    this.drawBodiesLooped(body, radius, this.drawBody)\n\n    // begin middle box baddie body pyramid\n\n    this.winScreenBaddies ||= this.getDisplayBaddies()\n    const baddies = this.winScreenBaddies\n    for (let i = 0; i < baddies.length; i++) {\n      const row = baddies[i]\n      for (let j = 0; j < row.length; j++) {\n        const body = row[row.length - 1 - j]\n        body.position = this.createVector(\n          64 + j * 72,\n          middleBoxY + i * rowHeight + rowHeight / 2\n        )\n        body.velocity = this.createVector(0, 1)\n        body.radius = 6.5\n        this.drawBodiesLooped(body, 3, this.drawBody)\n      }\n    }\n\n    p.image(this.bodiesGraphic, 0, 0)\n    this.bodiesGraphic.clear()\n\n    // overlay transparent black box to dim past last levelTimes\n    p.fill('rgba(0,0,0,0.6)')\n    p.rect(\n      gutter,\n      middleBoxY + rowHeight * levelTimes.length,\n      this.windowWidth - gutter * 2,\n      rowHeight * (LEVELS - levelTimes.length)\n    )\n\n    // bottom box ticker text\n    this.winTickerGraphic ||= this.p.createGraphics(\n      this.windowWidth,\n      this.windowHeight\n    )\n    p.textAlign(p.LEFT, p.TOP)\n    p.textSize(32)\n    p.fill(THEME.iris_30)\n    p.text(\n      this.level == 5\n        ? 'CONGRATS!!! SAVE YOUR GAME TO SOLVE THE PROBLEM!!!!'\n        : 'NICE JOB!!!!    Keep going!!!   Solve this problem and climb the leaderboard.',\n      44,\n      811\n    )\n    // bottom buttons\n    if (this.level >= 5) {\n      this.showShare = true\n    }\n    const buttonCount = this.showShare ? 4 : 3\n    this.drawBottomButton({\n      text: 'RETRY',\n      onClick: () => {\n        this.restart(null, false)\n      },\n      ...themes.buttons.teal,\n      columns: buttonCount,\n      column: 0\n    })\n    this.drawBottomButton({\n      text: 'RESTART',\n      onClick: () => {\n        // confirm in popup\n        this.popup = {\n          bg: THEME.flame_75,\n          fg: THEME.flame_50,\n          stroke: THEME.flame_50,\n          header: 'Start Over?',\n          body: ['Any progress will be lost!'],\n          buttons: [\n            {\n              text: 'CLOSE',\n              fg: THEME.flame_50,\n              bg: THEME.flame_75,\n              stroke: THEME.flame_50,\n              onClick: () => {\n                this.popup = null\n              }\n            },\n            {\n              text: 'RESTART',\n              fg: THEME.flame_75,\n              bg: THEME.flame_50,\n              stroke: THEME.flame_50,\n              onClick: () => {\n                this.popup = null\n                this.level = 1\n                this.restart(null, false)\n              }\n            }\n          ]\n        }\n      },\n      ...themes.buttons.flame,\n      columns: buttonCount,\n      column: 1\n    })\n    if (this.showShare) {\n      this.drawBottomButton({\n        text: 'SHARE',\n        onClick: () => {\n          // TODO: hide bottom btns / paint a promo-message over them\n          this.shareCanvas()\n        },\n        ...themes.buttons.pink,\n        columns: buttonCount,\n        column: 2\n      })\n    }\n    if (this.level < 5) {\n      this.drawBottomButton({\n        text: 'NEXT',\n        onClick: () => {\n          this.level++\n          if (this.level > 5) {\n            this.showProblemRankingsScreenAt = this.p5Frames\n          } else {\n            this.restart(null, false)\n          }\n        },\n        ...themes.buttons.green,\n        columns: buttonCount,\n        column: buttonCount - 1\n      })\n    } else {\n      // parent app should handle waiting to save\n      this.drawBottomButton({\n        text: 'SAVE',\n        onClick: () => {\n          this.emit('save')\n        },\n        ...themes.buttons.green,\n        columns: buttonCount,\n        column: buttonCount - 1\n      })\n    }\n    p.pop()\n  },\n\n  drawProblemRankingsScreen() {\n    if (this.showProblemRankingsScreenAt === -1) return\n\n    const { p } = this\n\n    const entranceTime = 1.5 // seconds\n\n    const scale = Math.min(\n      1,\n      (this.p5Frames - this.showProblemRankingsScreenAt) /\n        (entranceTime * this.P5_FPS)\n    )\n\n    p.push()\n    p.noStroke()\n    p.fill('white')\n\n    // bordered boxes\n    p.fill('black')\n    p.stroke(THEME.border)\n    p.strokeWeight(1)\n    const gutter = 22\n    const middleBoxY = 155\n    const rowHeight = 72\n    const rows = 3\n    p.rect(gutter, 28, this.windowWidth - gutter * 2, 103, 24)\n    p.rect(\n      gutter,\n      middleBoxY,\n      this.windowWidth - gutter * 2,\n      rows * rowHeight,\n      24\n    )\n    p.rect(\n      gutter,\n      24 + 155 + rows * rowHeight,\n      this.windowWidth - gutter * 2,\n      rowHeight,\n      24\n    )\n\n    // logo at top\n    if (!fonts.dot) return\n    p.textFont(fonts.dot)\n    const logoOpacity = p.map(scale, 0, 1, 0, 1)\n    p.fill(rgbaOpacity(THEME.pink, logoOpacity))\n    p.textSize(60)\n    p.textAlign(p.LEFT, p.TOP)\n    drawKernedText(p, 'Anybody', 46, 44, 0.8)\n    drawKernedText(p, 'Problem', 352, 44, 2)\n\n    // upper box text - date\n    p.textSize(56)\n    p.noStroke()\n    if (!fonts.body) return\n    p.textFont(fonts.body)\n    p.fill(THEME.iris_30)\n    p.textAlign(p.RIGHT, p.TOP)\n    p.text(this.date, this.windowWidth - 42, 48)\n\n    // middle box text\n    p.textSize(44)\n    p.textAlign(p.RIGHT, p.TOP)\n    const col1X = 42\n    const col2X = 187\n    const col3X = this.windowWidth - col1X // right aligned\n\n    // middle box text - values\n    const scores = [\n      {\n        rank: 1,\n        name: '0xABCD-1234',\n        time: 188.889192912\n      },\n      {\n        rank: 2,\n        name: 'longassensnamethatgoesofftherowalllllllls',\n        time: 189.889192912\n      },\n      {\n        rank: 3,\n        name: '0xABCD-1234',\n        time: 198.889192912\n      },\n      {\n        rank: 999998,\n        name: 'petersugihara.eth',\n        time: 260.889192912\n      }\n    ]\n\n    // middle box text - value text\n    for (const [rowNumber, score] of scores.entries()) {\n      const rowY =\n        rowHeight * rowNumber + rowHeight / 2 + (rowNumber === 3 ? 24 : 0)\n\n      p.textAlign(p.LEFT, p.CENTER)\n      p.fill(THEME.iris_60)\n      const rankText =\n        score.rank === 1\n          ? '1st'\n          : score.rank === 2\n            ? '2nd'\n            : score.rank === 3\n              ? '3rd'\n              : `${score.rank.toLocaleString()}`\n      p.text(rankText, col1X, middleBoxY + rowY)\n\n      p.fill(THEME.iris_30)\n      let nameText = score.name // truncate to fit\n      while (p.textWidth(nameText) > 656) {\n        nameText = `${nameText.replaceAll(/\\.\\.\\.$/g, '').slice(0, -1)}...`\n      }\n      p.text(nameText, col2X, middleBoxY + rowY)\n\n      p.textAlign(p.RIGHT, p.CENTER)\n      p.fill(THEME.iris_60)\n      p.text(score.time.toFixed(2), col3X, middleBoxY + rowY)\n\n      // bottom divider line\n      if (rowNumber < 2) {\n        p.fill(THEME.iris_60)\n        p.rect(\n          gutter,\n          middleBoxY + rowHeight * (rowNumber + 1),\n          this.windowWidth - gutter * 2,\n          1\n        )\n      }\n    }\n    // end middle box text\n\n    // draw hero body\n    const body = this.getDisplayHero({ radius: 33 })\n    const radius = this.getBodyRadius(body.radius)\n    const xWobble = p.sin(p.frameCount / this.P5_FPS) * (5 + body.bodyIndex)\n    const yWobble =\n      p.cos(p.frameCount / this.P5_FPS + body.bodyIndex * 3) *\n      (6 + body.bodyIndex)\n    body.position = {\n      x: p.map(scale ** 3, 0, 1, -140, 180) + xWobble,\n      y: 670 + yWobble\n    }\n    this.bodiesGraphic ||= this.p.createGraphics(\n      this.windowWidth,\n      this.windowHeight\n    )\n    this.drawBodiesLooped(body, radius, this.drawBody)\n    p.image(this.bodiesGraphic, 0, 0)\n    this.bodiesGraphic.clear()\n\n    this.drawMessageBox ||= ({ lines, x, y, color, start, textWidth }) => {\n      if (start !== -1 && this.p5Frames < start) return\n      const padding = 20\n      const paddingLeft = 24\n      p.textSize(32)\n      p.textAlign(p.LEFT, p.TOP)\n      p.textLeading(36)\n      p.fill('black')\n      p.stroke(color)\n      p.strokeWeight(1)\n      const joined = lines.join('\\n')\n      const messageText = joined.slice(\n        0,\n        Math.floor((this.p5Frames - start) / 2)\n      )\n      if (\n        this.p5Frames % Math.floor(this.P5_FPS / 8) === 0 &&\n        joined.length > messageText.length\n      ) {\n        this.sound?.playStat()\n      }\n      const longestLine = lines.sort((a, b) => b.length - a.length)[0]\n      p.rect(\n        x,\n        y,\n        (textWidth || p.textWidth(longestLine)) + paddingLeft + padding,\n        lines.length * 36 + padding * 2,\n        20\n      )\n      // console.log({ h: lines.length * 36 + padding * 2 })\n      p.fill(color)\n\n      p.text(messageText, x + paddingLeft, y + padding)\n    }\n\n    if (this.saveStatus === 'unsaved') {\n      // draw messages from hero that\n      const message1Entrance = 1.5\n      const message1 = ['wOwOwoWwwww ! ! ! !', 'you solved the daily problem !']\n\n      const message1Frame =\n        this.showProblemRankingsScreenAt + message1Entrance * this.P5_FPS\n\n      const message2Entrance = 3\n      const message2 = [\n        'SAVE your score to the leaderboard',\n        \"and receive today's celestial body !\"\n      ]\n      const message2Frame =\n        this.showProblemRankingsScreenAt + message2Entrance * this.P5_FPS\n\n      const message3Entrance = 5.5\n      const message3 = [\n        \"replay as many times as you'd like\",\n        \"before tomorrow's problem...\"\n      ]\n      const message3Frame =\n        this.showProblemRankingsScreenAt + message3Entrance * this.P5_FPS\n\n      this.drawMessageBox({\n        lines: message1,\n        x: 344,\n        y: 504,\n        color: THEME.iris_30,\n        start: message1Frame\n      })\n\n      this.drawMessageBox({\n        lines: message3,\n        x: 370,\n        y: 704,\n        color: THEME.pink,\n        start: message3Frame\n      })\n\n      this.drawMessageBox({\n        lines: message2,\n        x: 484,\n        y: 604,\n        color: THEME.green_50,\n        start: message2Frame,\n        textWidth: 451\n      })\n    }\n\n    if (this.saveStatus === 'validating') {\n      this.validatingAt ||= this.p5Frames\n      this.drawMessageBox({\n        lines: ['validating your score...'],\n        x: 344,\n        y: 504,\n        color: THEME.iris_30,\n        start: this.validatingAt\n      })\n    }\n\n    if (\n      this.saveStatus === 'validated' ||\n      this.saveStatus === 'saved' ||\n      this.saveStatus === 'saving'\n    ) {\n      this.validatedAt ||= this.p5Frames\n      this.drawMessageBox({\n        lines: ['score validated!'],\n        x: 344,\n        y: 504,\n        color: THEME.iris_30,\n        start: -1\n      })\n    }\n\n    if (this.saveStatus === 'validated' && this.validatedAt) {\n      const message2Frame = this.validatedAt + 1 * this.P5_FPS\n      this.drawMessageBox({\n        lines: ['you can now save your score'],\n        x: 484,\n        y: 566,\n        color: THEME.green_50,\n        start: message2Frame\n      })\n    } else if (this.saveStatus === 'saving') {\n      this.savingAt ||= this.p5Frames\n      this.drawMessageBox({\n        lines: ['saving your score...'],\n        x: 484,\n        y: 566,\n        color: THEME.green_50,\n        start: this.savingAt\n      })\n    } else if (this.saveStatus === 'saved') {\n      this.savedAt ||= this.p5Frames\n      this.drawMessageBox({\n        lines: ['score SAVED!'],\n        x: 478,\n        y: 566,\n        color: THEME.green_50,\n        start: this.savedAt\n      })\n\n      const message2Frame = this.savedAt + 1 * this.P5_FPS\n      this.drawMessageBox({\n        lines: ['this body is now in your wallet !'],\n        x: 414,\n        y: 653,\n        color: THEME.pink_40,\n        start: message2Frame\n      })\n\n      const message3Frame = this.savedAt + 2 * this.P5_FPS\n      this.drawMessageBox({\n        lines: ['but, maybe you can do better ??'],\n        x: 545,\n        y: 757,\n        color: THEME.yellow_50,\n        start: message3Frame\n      })\n    }\n\n    if (this.saveStatus !== 'saved') {\n      // bottom buttons\n      const buttonCount = 2\n      this.drawBottomButton({\n        text: 'BACK',\n        onClick: () => {\n          this.restart(null, false)\n        },\n        ...themes.buttons.teal,\n        columns: buttonCount,\n        column: 0\n      })\n      this.drawBottomButton({\n        text:\n          this.saveStatus === 'unsaved'\n            ? 'SAVE'\n            : this.saveStatus === 'validated'\n              ? 'SAVE' // TODO: is it confusing that this label doesn't change?\n              : `${this.saveStatus.toUpperCase()}...`,\n        onClick: () => {\n          this.handleSave()\n        },\n        ...themes.buttons.green,\n        disabled:\n          this.saveStatus !== 'unsaved' && this.saveStatus !== 'validated',\n        columns: buttonCount,\n        column: 1,\n        key: 'problem-save'\n      })\n    } else {\n      this.drawBottomButton({\n        text: 'NEW GAME',\n        onClick: () => {\n          this.restart()\n        },\n        ...themes.buttons.yellow,\n        columns: 1,\n        column: 0\n      })\n    }\n    p.pop()\n  },\n\n  getDisplayHero({ radius } = { radius: 33 }) {\n    const body = this.bodies[0]\n    const bodyCopy = JSON.parse(\n      JSON.stringify(\n        body,\n        (key, value) => (typeof value === 'bigint' ? value.toString() : value) // return everything else unchanged\n      )\n    )\n    bodyCopy.position = this.p.createVector(body.position.x, body.position.y)\n    bodyCopy.velocity = this.p.createVector(body.velocity.x, body.velocity.y)\n    bodyCopy.radius = radius\n    return bodyCopy\n  },\n\n  getDisplayBaddies() {\n    const baddies = []\n    const fallbackBody = this.bodies[this.bodies.length - 1]\n    if (!fallbackBody) return []\n    const str = JSON.stringify(fallbackBody)\n    for (let i = 0; i < LEVELS; i++) {\n      baddies.push([])\n      for (let j = 0; j < i + 1; j++) {\n        const bodyCopy =\n          j >= this.bodies.length - 1\n            ? JSON.parse(str)\n            : JSON.parse(JSON.stringify(this.bodies[j + 1]))\n        // bodyCopy.position = this.p.createVector(\n        //   body.position.x,\n        //   body.position.y\n        // )\n        // bodyCopy.velocity = this.p.createVector(\n        //   body.velocity.x,\n        //   body.velocity.y\n        // )\n        baddies[i].push(bodyCopy)\n      }\n    }\n    return baddies\n  },\n\n  drawGameOverTicker({ text, bottom = false, fg }) {\n    const doubleText = `${text} ${text} `\n\n    const { p } = this\n    p.noStroke()\n    p.fill(fg)\n    p.textSize(200)\n    p.textAlign(p.LEFT, p.TOP)\n    p.textFont(fonts.body)\n    const tickerSpeed = -600 / this.P5_FPS\n    const textWidth = p.textWidth(doubleText)\n    if (\n      !this.gameoverTickerX ||\n      this.gameoverTickerX + tickerSpeed < -textWidth / 2\n    ) {\n      this.gameoverTickerX = 0\n    }\n    this.gameoverTickerX += tickerSpeed\n    p.text(\n      doubleText,\n      this.gameoverTickerX,\n      bottom ? this.windowHeight - 80 - 120 : 80\n    )\n  },\n\n  drawLoseScreen() {\n    const { p } = this\n    p.push()\n    p.noStroke()\n    const text =\n      this.bodies[0].radius == 0\n        ? 'NOOO, KILL BADDIES NOT BODY!!'\n        : 'TIME IS UP   TIME IS UP  TIME IS UP'\n    this.drawGameOverTicker({\n      text: '                 ' + text,\n      fg: THEME.red\n    })\n\n    this.drawFatButton({\n      text: 'RETRY',\n      onClick: () => this.restart(null, false),\n      fg: THEME.red,\n      bg: THEME.maroon\n    })\n\n    p.pop()\n  },\n\n  scaleX(val) {\n    const { canvas } = this.p\n    return (val / canvas.offsetWidth) * this.windowWidth\n  },\n\n  scaleY(val) {\n    const { canvas } = this.p\n    return (val / canvas.offsetHeight) * this.windowHeight\n  },\n\n  drawGun() {\n    this.p.stroke('rgba(200,200,200,1)')\n    this.p.strokeCap(this.p.SQUARE)\n\n    if (this.p.mouseX <= 0 && this.p.mouseY <= 0) return\n\n    // Bottom left corner coordinates\n    let startX = 0\n    let startY = this.windowHeight\n    this.p.strokeWeight(2)\n\n    const crossHairSize = 25\n\n    // Calculate direction from bottom left to mouse\n    let dirX = this.scaleX(this.p.mouseX) - startX\n    let dirY = this.scaleY(this.p.mouseY) - startY\n    this.p.line(\n      this.scaleX(this.p.mouseX) - crossHairSize,\n      this.scaleX(this.p.mouseY),\n      this.scaleX(this.p.mouseX) + crossHairSize,\n      this.scaleX(this.p.mouseY)\n    )\n    this.p.line(\n      this.scaleX(this.p.mouseX),\n      this.scaleX(this.p.mouseY) - crossHairSize,\n      this.scaleX(this.p.mouseX),\n      this.scaleX(this.p.mouseY) + crossHairSize\n    )\n\n    if (this.paused || this.gameOver) return\n\n    // Draw the line\n    const drawingContext = this.p.canvas.getContext('2d')\n    const chunk = this.windowWidth / 100\n    drawingContext.setLineDash([chunk])\n    if (this.aimHelper) {\n      drawingContext.lineDashOffset = -(this.frames * 10)\n    }\n\n    this.p.line(startX, startY, startX + dirX, startY + dirY)\n    drawingContext.setLineDash([])\n    drawingContext.lineDashOffset = 0\n    this.p.strokeWeight(0)\n  },\n\n  hslToGrayscale(hslArray) {\n    if (typeof hslArray == 'string') {\n      hslArray = hslArray.split(',')\n      hslArray[0] = parseInt(hslArray[0].split('(')[1])\n      hslArray[1] = parseInt(hslArray[1])\n      hslArray[2] = parseInt(hslArray[2].split(')')[0])\n      return `hsl(${hslArray[0]},0%,${hslArray[2]}%)`\n    }\n    return [hslArray[0], 0, hslArray[2]]\n  },\n\n  rgbaToGrayscale(rgba, split = 3) {\n    const rgbaArray = rgba.split(',')\n    const r = parseInt(rgbaArray[0].split('(')[1])\n    const g = parseInt(rgbaArray[1])\n    const b = parseInt(rgbaArray[2])\n    const a = parseFloat(rgbaArray[3].split(')')[0])\n    const avg = Math.min(Math.floor((r + g + b) / split), 255)\n    return `rgba(${avg},${avg},${avg},${a})`\n  },\n\n  drawExplosions() {\n    if (\n      this.paused ||\n      (this.gameOver && (!this.celebrating || this.skipAhead) && this.won)\n    )\n      return\n    const { explosions } = this\n\n    for (let i = 0; i < explosions.length; i++) {\n      const v = explosions[i].velocity\n      const _explosion = JSON.parse(JSON.stringify(explosions[i]))\n      _explosion.velocity = v\n\n      _explosion.c.bg = this.hslToGrayscale(explosions[i].c.bg, 1.5)\n      _explosion.c.fg = this.hslToGrayscale(explosions[i].c.fg)\n      _explosion.c.core = this.hslToGrayscale(explosions[i].c.core)\n      _explosion.c.baddie = this.hslToGrayscale(explosions[i].c.baddie)\n\n      this.drawBody(\n        _explosion.position.x,\n        _explosion.position.y,\n        _explosion.v,\n        _explosion.radius,\n        _explosion\n      )\n      // const bomb = _explosion[0]\n      // p.fill('rgba(255,255,255,0.5)')\n      // p.stroke('white')\n      // p.strokeWeight(2)\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 2, bomb.i * 2)\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 1.8, bomb.i * 1.8)\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 1.6, bomb.i * 1.6)\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 1.4, bomb.i * 1.4)\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 1.6, bomb.i * 1.6)\n      // p.fill('rgba(255,255,255,0.9)')\n      // p.ellipse(bomb.x, bomb.y, bomb.i * 1.4, bomb.i * 1.4)\n      // _explosion.shift()\n      // if (_explosion.length == 0) {\n      //   explosions.splice(i, 1)\n      // }\n    }\n  },\n\n  drawMissiles() {\n    if (this.paused || this.gameOver) return\n    this.p.noStroke()\n    this.p.strokeWeight(0)\n\n    // const missileReverbLevels = 20\n    // const green = '2,247,123'\n    // const yellow = '255,255,0'\n    // const color = yellow\n    // const c =\n    //   Math.floor(this.frames / missileReverbLevels) % 2 == 0\n    //     ? `rgb(${color})`\n    //     : 'white'\n\n    const starRadius = 10\n\n    const star = (x, y, radius1, radius2, npoints, color, rotateBy, index) => {\n      const { p } = this\n      let angle = p.TWO_PI / npoints\n      let halfAngle = angle / 2.0\n      p.beginShape()\n      if (index == 0) {\n        p.fill(color)\n      } else {\n        p.noFill()\n        p.strokeWeight(2)\n        p.stroke(color)\n      }\n      for (let a = rotateBy; a < p.TWO_PI + rotateBy; a += angle) {\n        let sx = x + p.cos(a) * radius2\n        let sy = y + p.sin(a) * radius2\n        p.vertex(sx, sy)\n        sx = x + p.cos(a + halfAngle) * radius1\n        sy = y + p.sin(a + halfAngle) * radius1\n        p.vertex(sx, sy)\n      }\n      p.endShape(p.CLOSE)\n      return p\n    }\n    //   for (let i = 0; i < missileReverbLevels; i++) {\n    //     const alpha = 1 //(missileReverbLevels - i) / missileReverbLevels\n    //     console.log({ alpha })\n    //     const rainbowColor = `hsla(${(i / missileReverbLevels) * 360}, 100%, 50%, ${alpha})`\n    //     const maxStarRadius = starRadius * missileReverbLevels\n    //     this.starMissile.push(\n    //       this.p.createGraphics(maxStarRadius * 2, maxStarRadius * 2)\n    //     )\n    //     this.starMissile[i].noStroke()\n    //     this.starMissile[i].fill(rainbowColor)\n    //     // if (i == 0) {\n    //     //   this.starMissile[i].stroke('black')\n    //     //   this.starMissile[i].strokeWeight(20)\n    //     //   this.starMissile[i].fill(`rgba(255,255,255,1)`)\n    //     // }\n    //     // this.starMissile.rect(0, 0, maxStarRadius * 2, maxStarRadius * 2)\n    //     this.starMissile[i] = star(\n    //       this.starMissile[i],\n    //       maxStarRadius,\n    //       maxStarRadius,\n    //       maxStarRadius,\n    //       maxStarRadius / 2,\n    //       5\n    //     )\n    //   }\n    // }\n\n    const maxLife = 60\n\n    // const colors = ['white', 'cyan', 'yellow', 'magenta']\n    // const colors = ['255,255,255', '0,255,255', '255,255,0', '255,0,255']\n\n    for (let i = 0; i < this.stillVisibleMissiles.length; i++) {\n      const body = this.stillVisibleMissiles[i]\n      if (!body.phase) {\n        const life = 0\n\n        const color = randHSL(\n          themes.bodies.default['pastel_highlighter_marker'].cr\n        )\n        const rotateBy = this.frames % 360\n        body.phase = {\n          color,\n          life,\n          rotateBy\n        }\n      } else if (!this.paused) {\n        body.phase.life++\n        if (body.phase.life >= maxLife) {\n          this.stillVisibleMissiles.splice(i, 1)\n          i--\n          continue\n        }\n      }\n      this.stillVisibleMissiles[i] = body\n\n      // const alpha = 1 //(maxLife - body.phase.life) / maxLife\n      // const rainbowColor = `hsla(${body.phase.color}, 100%, 50%, ${alpha})`\n      const rainbowColor = body.phase.color //`rgba(${body.phase.color},${alpha})`\n      const thisRadius =\n        starRadius / 1.5 +\n        starRadius * (((body.phase.life / 25) * body.phase.life) / 25)\n\n      this.p.push()\n      this.p.translate(body.position.x, body.position.y)\n      // const rotateBy = (i * 2 + this.frames / 4) % 360\n      // this.p.rotate(body.phase.rotateBy)\n      // const modulo = missileReverbLevels\n      // const n = missileReverbLevels + Math.floor(this.frames / 1.8) - i\n      // const n = i\n      // const index = n % modulo\n      star(\n        0,\n        0,\n        thisRadius,\n        thisRadius / 2,\n        5,\n        rainbowColor,\n        body.phase.rotateBy,\n        body.phase.life\n      )\n\n      this.p.pop()\n    }\n\n    // this.p.push()\n    // // const c =\n    // //   Math.floor((this.frames - i) / missileReverbLevels) % 2 == 0\n    // //     ? `rgba(${color},${(missileReverbLevels - i) / missileReverbLevels})`\n    // //     : `rgba(255,255,255,${(missileReverbLevels - i) / missileReverbLevels})`\n    // // this.p.stroke(c)\n    // this.p.translate(body.position.x, body.position.y)\n    // const rotateBy = (this.frames * 2) % 360\n    // this.p.rotate(rotateBy)\n    // this.p.image(\n    //   this.starMissile[0],\n    //   -starRadius / 2,\n    //   -starRadius / 2,\n    //   starRadius,\n    //   starRadius\n    // )\n    // this.p.pop()\n  },\n\n  isMissileClose(body) {\n    const minDistance = 300\n    let closeEnough = false\n    for (let i = 0; i < this.missiles.length; i++) {\n      const missile = this.missiles[i]\n      const distance = this.p.dist(\n        body.position.x,\n        body.position.y,\n        missile.position.x,\n        missile.position.y\n      )\n      if (distance < minDistance) {\n        closeEnough = true\n        break\n      }\n    }\n    return closeEnough\n  },\n\n  drawImageAsset(svg, width, fill, myP = this.bodiesGraphic, strokeWidth = 1) {\n    function hashString(str) {\n      let hash = 0\n      for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i)\n        hash = (hash << 5) - hash + char\n        hash |= 0 // Convert to 32bit integer\n      }\n      return hash.toString()\n    }\n    this.imgAssets ||= {}\n    // TODO: remove width from ID when colors aren't temp-random\n    const assetHash = hashString(svg)\n    const id = assetHash + width + fill\n    const loaded = this.imgAssets[id]\n\n    if (!loaded) {\n      this.imgAssets[id] = 'loading'\n      svg = fill ? replaceAttribute(svg, 'fill', fill) : svg\n      svg = replaceAttribute(svg, 'stroke-width', strokeWidth)\n      svg = 'data:image/svg+xml,' + encodeURIComponent(svg)\n      try {\n        this.p.loadImage(svg, (img) => {\n          const width = img.width\n          const height = img.height\n\n          const foo = this.p.createGraphics(width, height)\n          foo.pixelDensity(this.pixelDensity)\n\n          foo.image(img, 0, 0, width, height)\n\n          this.imgAssets[id] = foo\n        })\n      } catch (e) {\n        console.error(e)\n        this.imgAssets[id] = undefined\n      }\n    }\n\n    if (loaded && loaded !== 'loading') {\n      myP.image(loaded, -width / 2, -width / 2, width, width)\n    }\n  },\n  closeTo(body) {\n    let isClose = false\n    const minDistance = body.radius * 2\n    for (let i = 1; i < this.bodies.length; i++) {\n      const other = this.bodies[i]\n      if (other.radius == 0) continue\n      const specificDistance = minDistance + other.radius * 4\n      const distance = this.p.dist(\n        body.position.x,\n        body.position.y,\n        other.position.x,\n        other.position.y\n      )\n      if (distance <= specificDistance) {\n        isClose = true\n        break\n      }\n    }\n    return isClose\n  },\n\n  drawFaceSvg(body, width) {\n    this.fIndex = body.c.fIndex\n    const { fIndex } = this\n    const graphic = body.graphic || this.bodiesGraphic\n\n    const baddiesNear = this.closeTo(body)\n    if (\n      (baddiesNear && !this.paused) ||\n      (this.gameOver && !this.won && !this.skipAhead)\n    ) {\n      this.drawImageAsset(FACE_SHOT_SVGS[this.fIndex], width, null, graphic)\n      return\n    }\n\n    const x = 5 // every 5 seconds it blinks\n    const m = this.P5_FPS // for 25 frames (1 second)\n    // uncomment the following line to rotate face\n    // this.bodiesGraphic.push()\n    // this.bodiesGraphic.rotate(body.velocity.heading() + this.p.PI / 2)\n    if (\n      Math.floor(this.p5Frames / x) % m == 0 ||\n      Math.floor(this.p5Frames / x) % m == 2\n    ) {\n      this.drawImageAsset(FACE_BLINK_SVGS[fIndex], width, null, graphic)\n    } else {\n      this.drawImageAsset(FACE_SVGS[fIndex], width, null, graphic)\n    }\n    // this.bodiesGraphic.pop()\n  },\n\n  drawStarForegroundSvg(width, body) {\n    const fill = body.c.fg\n    const graphic = body.graphic || this.bodiesGraphic\n    graphic.push()\n\n    this.fgIndex = body.c.fgIndex\n    const { fgIndex } = this\n    const r = {\n      ...rot.fg,\n      ...(rotOverride?.fg?.[fgIndex] ?? {})\n    }\n    const rotateBy =\n      r.speed == 0\n        ? 0\n        : (this.p5Frames / this.P5_FPS_MULTIPLIER / r.speed) % 360\n    graphic.rotate(r.direction * rotateBy)\n    this.drawImageAsset(FG_SVGS[fgIndex], width, fill, graphic)\n    graphic.pop()\n  },\n\n  drawCoreSvg(width, body) {\n    const fill = body.c.core\n    const graphic = body.graphic || this.bodiesGraphic\n    graphic.push()\n    const r = {\n      ...rot.core,\n      ...(rotOverride?.core?.[0] ?? {})\n    }\n    const rotateBy =\n      r.speed == 0\n        ? 0\n        : (this.p5Frames / this.P5_FPS_MULTIPLIER / r.speed) % 360\n    graphic.rotate(r.direction * rotateBy)\n    this.drawImageAsset(CORE_SVGS[0], width, fill, graphic)\n    graphic.pop()\n  },\n\n  drawStarBackgroundSvg(width, body) {\n    const fill = body.c.bg\n    const graphic = body.graphic || this.bodiesGraphic\n    graphic.push()\n    this.bgIndex = body.c.bgIndex\n    const { bgIndex } = this\n    const r = {\n      ...rot.bg,\n      ...(rotOverride?.bg?.[bgIndex] ?? {})\n    }\n    const rotateBy =\n      r.speed == 0\n        ? 0\n        : (this.p5Frames / this.P5_FPS_MULTIPLIER / r.speed) % 360\n    graphic.rotate(r.direction * rotateBy)\n    this.drawImageAsset(BG_SVGS[bgIndex], width, fill, graphic)\n    graphic.pop()\n  },\n\n  moveAndRotate_PopAfter(graphic, x, y /*v*/) {\n    graphic.push()\n    graphic.translate(x, y)\n\n    // rotate body in vector direction\n    // const angle = v.heading() + this.p.PI / 2\n    // graphic.rotate(angle)\n\n    // if (v.x > 0) {\n    //   graphic.scale(-1, 1)\n    // }\n    // if (v.y > 0) {\n    //   graphic.scale(1, -1)\n    // }\n  },\n\n  exportBody(\n    day,\n    shouldRotate = true,\n    width = this.windowWidth,\n    height = this.windowHeight\n  ) {\n    // const graphic = this.p.createGraphics(width, height)\n    // if (!this.starBG) {\n    //   throw new Error('no starbg')\n    // }\n\n    // const starBGpixelData = this.starBG.drawingContext.getImageData(\n    //   0,\n    //   0,\n    //   width,\n    //   height\n    // ).data\n\n    const bodyData = this.generateLevelData(day, 1)\n    const bodies = bodyData.map((b) => this.bodyDataToBodies.call(this, b, day))\n    const heroBody = bodies[0]\n    console.log({ heroBody })\n\n    // create an SVG element with a black background\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    svg.setAttribute('width', width)\n    svg.setAttribute('height', height)\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink')\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`)\n    svg.setAttribute('version', '1.1')\n    // make svg have a black background\n    // const bgRect = document.createElementNS(\n    //   'http://www.w3.org/2000/svg',\n    //   'rect'\n    // )\n    // bgRect.setAttribute('x', 0)\n    // bgRect.setAttribute('y', 0)\n    // bgRect.setAttribute('width', width)\n    // bgRect.setAttribute('height', height)\n    // bgRect.setAttribute('fill', 'black')\n    // svg.appendChild(bgRect)\n\n    // add starBGpixelData as PNG to the SVG\n    // const starBG = document.createElementNS(\n    //   'http://www.w3.org/2000/svg',\n    //   'image'\n    // )\n    // starBG.setAttribute('x', 0)\n    // starBG.setAttribute('y', 0)\n    // starBG.setAttribute('width', width)\n    // starBG.setAttribute('height', height)\n    // starBG.setAttribute('href', this.starBG.canvas.toDataURL('image/png'))\n    // svg.appendChild(starBG)\n\n    // add hero body to the SVG\n    const bgIndex = heroBody.c.bgIndex\n    const coreIndex = heroBody.c.coreIndex\n    const fgIndex = heroBody.c.fgIndex\n    const faceIndex = heroBody.c.fIndex\n    const prefix = (svg) => `data:image/svg+xml;base64,${btoa(svg)}`\n\n    const bgSVG = prefix(\n      replaceAttribute(BG_SVGS[bgIndex], 'fill', heroBody.c.bg)\n    )\n    const coreSVG = prefix(\n      replaceAttribute(CORE_SVGS[coreIndex], 'fill', heroBody.c.core)\n    )\n\n    const fgSVG = prefix(\n      replaceAttribute(FG_SVGS[fgIndex], 'fill', heroBody.c.fg)\n    )\n    const faceSVG = prefix(FACE_SVGS[faceIndex])\n\n    const uuid = () => Math.random().toString(36).substr(2, 9)\n    const bgId = `bg-${bgIndex}-${uuid()}`\n    const coreId = `core-${coreIndex}-${uuid()}`\n    const fgId = `fg-${fgIndex}-${uuid()}`\n    const faceId = `f-${faceIndex}-${uuid()}`\n\n    const bgRatio = 1\n    const coreRatio = 0.375\n    const fgRatio = 1\n    const faceRatio = 1\n\n    // add the svg elements to the parent svg\n    const bg = document.createElementNS('http://www.w3.org/2000/svg', 'image')\n    const bgWidth = width * bgRatio\n    const bgHeight = height * bgRatio\n    const bgOffset = (width - bgWidth) / 2\n    const bgYOffset = (height - bgHeight) / 2\n    bg.setAttribute('id', bgId)\n    bg.setAttribute('x', bgOffset)\n    bg.setAttribute('y', bgYOffset)\n    bg.setAttribute('width', bgWidth)\n    bg.setAttribute('height', bgHeight)\n    bg.setAttribute('href', bgSVG)\n    svg.appendChild(bg)\n\n    const core = document.createElementNS('http://www.w3.org/2000/svg', 'image')\n    const coreWidth = width * coreRatio\n    const coreHeight = height * coreRatio\n    const coreOffset = (width - coreWidth) / 2\n    const coreYOffset = (height - coreHeight) / 2\n    core.setAttribute('id', coreId)\n    core.setAttribute('x', coreOffset)\n    core.setAttribute('y', coreYOffset)\n    core.setAttribute('width', coreWidth)\n    core.setAttribute('height', coreHeight)\n    core.setAttribute('href', coreSVG)\n    svg.appendChild(core)\n\n    const fg = document.createElementNS('http://www.w3.org/2000/svg', 'image')\n    const fgWidth = width * fgRatio\n    const fgHeight = height * fgRatio\n    const fgOffset = (width - fgWidth) / 2\n    const fgYOffset = (height - fgHeight) / 2\n    fg.setAttribute('id', fgId)\n    fg.setAttribute('x', fgOffset)\n    fg.setAttribute('y', fgYOffset)\n    fg.setAttribute('width', fgWidth)\n    fg.setAttribute('height', fgHeight)\n    fg.setAttribute('href', fgSVG)\n    svg.appendChild(fg)\n\n    const face = document.createElementNS('http://www.w3.org/2000/svg', 'image')\n    const faceWidth = width * faceRatio\n    const faceHeight = height * faceRatio\n    const faceOffset = (width - faceWidth) / 2\n    const faceYOffset = (height - faceHeight) / 2\n    face.setAttribute('id', faceId)\n    face.setAttribute('x', faceOffset)\n    face.setAttribute('y', faceYOffset)\n    face.setAttribute('width', faceWidth)\n    face.setAttribute('height', faceHeight)\n    face.setAttribute('href', faceSVG)\n    svg.appendChild(face)\n    if (shouldRotate) {\n      const fgSpin = {\n        ...rot.fg,\n        ...(rotOverride?.fg?.[fgIndex] ?? {})\n      }\n      const fgAnimation = fgSpin.direction < 0 ? 'fullRotateR' : 'fullRotate'\n      const fgSpeed = (fgSpin.speed / 3).toFixed(2)\n\n      const bgSpin = {\n        ...rot.bg,\n        ...(rotOverride?.bg?.[bgIndex] ?? {})\n      }\n      const bgAnimation = bgSpin.direction < 0 ? 'fullRotateR' : 'fullRotate'\n      const bgSpeed = (bgSpin.speed / 3).toFixed(2)\n\n      const coreSpin = {\n        ...rot.core\n      }\n      const coreAnimation = 'fullRotate'\n      const coreSpeed = (coreSpin.speed / 3).toFixed(2)\n      // add css to the svg that makes each element rotate\n      const css = document.createElement('style')\n      css.innerHTML = `\n@keyframes fullRotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes fullRotateR {\n  from {\n    transform: rotate(360deg);\n  }\n  to {\n    transform: rotate(0deg);\n  }\n}\n#${bgId} {\n  animation: ${bgAnimation} ${bgSpeed}s linear infinite;\n  transform-origin: center center; \n}\n#${coreId} {\n  animation: ${coreAnimation} ${coreSpeed}s linear infinite;\n  transform-origin: center center; \n}\n#${fgId} {\n  animation: ${fgAnimation} ${fgSpeed}s linear infinite;\n  transform-origin: center center; \n}`\n      svg.appendChild(css)\n    }\n    return svg\n  },\n\n  drawBody(x, y, v, radius, body) {\n    const graphic = body.graphic || this.bodiesGraphic\n    this.moveAndRotate_PopAfter(graphic, x, y, v)\n\n    // y-offset of face relative to center\n    // const offset = this.getOffset(radius)\n\n    if (\n      (body.bodyIndex === 0 || body.hero) &&\n      (this.level !== 0 || this.paused)\n    ) {\n      // draw hero\n      const size = Math.floor(body.radius * BODY_SCALE * 2.66)\n\n      this.drawStarBackgroundSvg(size, body)\n      if (!body.backgroundOnly) {\n        this.drawCoreSvg(body.radius * BODY_SCALE, body)\n      }\n      this.drawStarForegroundSvg(size, body)\n      if (!body.backgroundOnly) {\n        this.drawFaceSvg(body, size)\n      }\n    } else {\n      this.drawBaddie(body)\n    }\n\n    graphic.pop()\n  },\n\n  getBodyRadius(actualRadius) {\n    return actualRadius * 4\n  },\n\n  drawBodiesLooped(body, radius, drawFunction) {\n    body.backgroundOnly = false\n    drawFunction = drawFunction.bind(this)\n    drawFunction(body.position.x, body.position.y, body.velocity, radius, body)\n\n    if (this.paused) return\n    if (this.gameOver) return\n    if (body.bodyIndex !== 0 || this.level == 0) return\n    let loopedX = false,\n      loopedY = false,\n      loopX = body.position.x,\n      loopY = body.position.y\n    const loopGap = radius * 1.5\n    body.backgroundOnly = true\n    // crosses right, draw on left\n    if (body.position.x > this.windowWidth - loopGap) {\n      loopedX = true\n      loopX = body.position.x - this.windowWidth\n      drawFunction(loopX, body.position.y, body.velocity, radius, body)\n      // crosses left, draw on right\n    } else if (body.position.x < loopGap) {\n      loopedX = true\n      loopX = body.position.x + this.windowWidth\n      drawFunction(loopX, body.position.y, body.velocity, radius, body)\n    }\n\n    // crosses bottom, draw on top\n    if (body.position.y > this.windowHeight - loopGap) {\n      loopedY = true\n      loopY = body.position.y - this.windowHeight\n      drawFunction(body.position.x, loopY, body.velocity, radius, body)\n      // crosses top, draw on bottom\n    } else if (body.position.y < loopGap) {\n      loopedY = true\n      loopY = body.position.y + this.windowHeight\n      drawFunction(body.position.x, loopY, body.velocity, radius, body)\n    }\n\n    // crosses corner, draw opposite corner\n    if (loopedX && loopedY) {\n      drawFunction(loopX, loopY, body.velocity, radius, body)\n    }\n  },\n\n  // TODO: add this back as part of a end game animation\n  drawWitheringBodies() {\n    if (this.gameOver) {\n      return\n    }\n    const { p } = this\n\n    this.bodiesGraphic ||= p.createGraphics(this.windowWidth, this.windowHeight)\n\n    this.bodiesGraphic.drawingContext.msImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.mozImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.webkitImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.imageSmoothingEnabled = false\n    // this.bodiesGraphic.pixelDensity(0.2)\n\n    this.bodiesGraphic.drawingContext.msImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.mozImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.webkitImageSmoothingEnabled = false\n    this.bodiesGraphic.drawingContext.imageSmoothingEnabled = false\n    this.bodiesGraphic.noStroke()\n    for (const body of this.witheringBodies) {\n      p.push()\n      p.translate(body.position.x, body.position.y)\n      body.witherSteps ||= 0\n      body.witherSteps++\n      if (body.witherSteps > WITHERING_STEPS) {\n        this.witheringBodies = this.witheringBodies.filter((b) => b !== body)\n        p.pop()\n        continue\n      }\n\n      // the body should shrink to nothing over WITHERING_STEPS\n      const radius = p.map(\n        WITHERING_STEPS - body.witherSteps,\n        0,\n        WITHERING_STEPS,\n        1,\n        30 // start radius\n      )\n\n      // the ghost body pulses a little bit, isn't totally round\n      body.zoff ||= 0\n      p.stroke(255)\n      p.noFill()\n      p.fill(255, 255, 255, 230)\n      p.beginShape()\n      for (let a = 0; a < p.TWO_PI; a += 0.02) {\n        let xoff = p.map(p.cos(a), -1, 1, 0, 2)\n        let yoff = p.map(p.sin(a), -1, 1, 0, 2)\n        const r = p.map(\n          p.noise(xoff, yoff, body.zoff),\n          0,\n          1,\n          radius - 10,\n          radius\n        )\n        let x = r * p.cos(a)\n        let y = r * p.sin(a)\n        p.vertex(x, y)\n      }\n      p.endShape(p.CLOSE)\n      body.zoff += 0.01\n\n      p.pop()\n    }\n  },\n\n  async drawBodies(attachToCanvas = true) {\n    if (this.won && (!this.celebrating || this.skipAhead)) return\n    this.bodiesGraphic ||= this.p.createGraphics(\n      this.windowWidth,\n      this.windowHeight\n    )\n    this.bodiesGraphic.noStroke()\n\n    const bodyCopies = []\n    for (let i = 0; i < this.bodies.length; i++) {\n      // const body = this.bodies.sort((a, b) => b.radius - a.radius)[i]\n      const body = this.bodies[i]\n      // after final proof is sent, don't draw upgradable bodies\n      if (body.radius == 0) continue\n      const bodyRadius = this.bodyCopies.filter(\n        (b) => b.bodyIndex == body.bodyIndex\n      )[0]?.radius\n      const radius = this.getBodyRadius(bodyRadius)\n      this.drawBodiesLooped(body, radius, this.drawBody)\n\n      const bodyCopy = JSON.parse(\n        JSON.stringify(\n          body,\n          (key, value) => (typeof value === 'bigint' ? value.toString() : value) // return everything else unchanged\n        )\n      )\n      bodyCopy.position = this.p.createVector(body.position.x, body.position.y)\n      bodyCopy.velocity = this.p.createVector(body.velocity.x, body.velocity.y)\n      bodyCopies.push(bodyCopy)\n    }\n    if (attachToCanvas) {\n      this.p.image(this.bodiesGraphic, 0, 0)\n    }\n    this.bodiesGraphic.clear()\n  },\n\n  drawPauseBodies() {\n    this.pauseGraphic.noStroke()\n\n    for (const [i, body] of this.pauseBodies.entries()) {\n      this.pauseGraphic.push()\n      body.position.x\n      // after final proof is sent, don't draw upgradable bodies\n      if (body.radius == 0) continue\n      const bodyRadius = this.bodyCopies.filter(\n        (b) => b.bodyIndex == body.bodyIndex\n      )[0]?.radius\n\n      // TODO: often there is no bodyRadius because bodyIndex doesn't match\n      // what is going on there?\n      // if (!bodyRadius) {\n      //   throw new Error('no body matches')\n      // }\n\n      const radius = this.getBodyRadius(bodyRadius)\n\n      // calculate x and y wobble factors based on this.p5Frames to make the pause bodies look like they're bobbing around\n      const xWobble =\n        this.p.sin(this.p.frameCount / this.P5_FPS) * (10 + body.bodyIndex)\n      const yWobble =\n        this.p.cos(this.p.frameCount / this.P5_FPS + body.bodyIndex * 3) *\n        (16 + body.bodyIndex)\n\n      // if not paused, bodies should flee to the nearest side of the screen\n      const fleeDuration = 1.5 // seconds\n      const xFlee =\n        this.willUnpause && this.beganUnpauseAt\n          ? this.p.map(\n              this.p5Frames - this.beganUnpauseAt,\n              0,\n              this.P5_FPS * fleeDuration,\n              0,\n              body.position.x > this.windowWidth / 2\n                ? this.windowWidth + 300\n                : -300\n            )\n          : 0\n      const yFlee =\n        this.willUnpause && this.beganUnpauseAt\n          ? this.p.map(\n              this.p5Frames - this.beganUnpauseAt,\n              0,\n              this.P5_FPS * fleeDuration,\n              0,\n              body.position.y > this.windowHeight / 2\n                ? this.windowHeight + 300\n                : -300\n            )\n          : 0\n\n      const bodyCopy = JSON.parse(\n        JSON.stringify(\n          body,\n          (key, value) => (typeof value === 'bigint' ? value.toString() : value) // return everything else unchanged\n        )\n      )\n      bodyCopy.position = this.p.createVector(\n        body.position.x + xWobble + xFlee,\n        body.position.y + yWobble + yFlee\n      )\n      bodyCopy.velocity = this.p.createVector(body.velocity.x, body.velocity.y)\n      bodyCopy.graphic = this.pauseGraphic\n      bodyCopy.hero = i < 3\n      this.drawBodiesLooped(bodyCopy, radius, this.drawBody)\n      this.pauseGraphic.pop()\n    }\n  },\n\n  replaceOpacity(c, opacity) {\n    const isHSLA = c.includes('hsla')\n    const prefix = isHSLA ? 'hsla' : 'rgba'\n    let cc = c\n      .split(',')\n      .map((c) => parseFloat(c.replace(')', '').replace(prefix + '(', '')))\n    if (cc.length !== 4) {\n      throw new Error('Color must have alpha value format, instead it has ' + c)\n    }\n    cc[3] = opacity\n    if (isHSLA) {\n      cc[1] = cc[1] + '%'\n      cc[2] = cc[2] + '%'\n    }\n    return `${prefix}(${cc.join(',')})`\n  },\n\n  brighten(c, amount = 20) {\n    let cc = c\n    let inhsla = false\n    if (c.includes('rgba')) {\n      inhsla = true\n      cc = c\n        .split(',')\n        .map((c) => parseFloat(c.replace(')', '').replace('hsla(', '')))\n    } else {\n      cc = cc.map((c) => {\n        return parseFloat(('' + c).replace('%', ''))\n      })\n    }\n    cc[2] = cc[2] + amount\n    cc[1] = cc[1] + (inhsla ? '%' : '')\n    cc[2] = cc[2] + (inhsla ? '%' : '')\n    return inhsla ? `hsla(${cc.join(',')})` : cc\n  },\n\n  drawBaddie(body) {\n    const graphic = body.graphic || this.bodiesGraphic\n    const colorHSL = body.c.baddie\n    const coreWidth = body.radius * BODY_SCALE\n    let bgColor = hslToRgb(this.brighten(colorHSL, -20), 1)\n    const coreColor = `hsl(${colorHSL[0]},${colorHSL[1]}%,${colorHSL[2]}%)`\n    graphic.push()\n    const rotate = (this.p5Frames / this.P5_FPS_MULTIPLIER / 30) % 360\n    graphic.rotate(rotate)\n    this.drawImageAsset(\n      BADDIE_SVG.bg,\n      Math.floor(coreWidth * (310 / 111.2)),\n      bgColor,\n      graphic,\n      '0.5'\n    )\n    graphic.push()\n    const heading = this.level == 0 ? -this.p.PI / 2 : body.velocity.heading()\n    graphic.rotate(-rotate + heading + this.p.PI / 2)\n    if (!body.backgroundOnly) {\n      this.drawImageAsset(BADDIE_SVG.core, coreWidth, coreColor, graphic, '0.5')\n      this.drawImageAsset(BADDIE_SVG.face, coreWidth, coreColor, graphic)\n\n      // pupils always looking at missile, if no missile, look at mouse\n      const target =\n        this.missiles.length > 0\n          ? this.missiles[0].position\n          : { x: this.scaleX(this.p.mouseX), y: this.scaleY(this.p.mouseY) }\n\n      const bx = body.position.x\n      const by = body.position.y\n\n      const leftEye = [-body.radius * 0.6, -body.radius * 0.15]\n      const rightEye = [body.radius * 0.6, -body.radius * 0.15]\n\n      graphic.fill('white')\n      graphic.strokeWeight(1)\n      graphic.stroke('black')\n      graphic.circle(leftEye[0], leftEye[1], body.radius)\n      graphic.circle(rightEye[0], rightEye[1], body.radius)\n\n      const angle =\n        Math.atan2(target.y - by, target.x - bx) - heading - this.p.PI / 2\n\n      const distance = body.radius * 0.2\n      const leftX = distance * Math.cos(angle)\n      const leftY = distance * Math.sin(angle)\n\n      graphic.fill('black')\n      graphic.circle(leftX + leftEye[0], leftY + leftEye[1], body.radius * 0.5)\n      graphic.circle(\n        leftX + rightEye[0],\n        leftY + rightEye[1],\n        body.radius * 0.5\n      )\n\n      // const heroBody = this.bodies[0]\n      // const minDistance = heroBody.radius * 2 + body.radius * 4\n      // const currentDistance = graphic.dist(\n      //   heroBody.position.x,\n      //   heroBody.position.y,\n      //   body.position.x,\n      //   body.position.y\n      // )\n      // const closeToBody = currentDistance <= minDistance\n\n      // if (true) {\n      // graphic.noStroke()\n      // graphic.fill(coreColor)\n      // graphic.triangle(\n      //   0,\n      //   -body.radius * 0.2,\n      //   leftEye[0] * 2,\n      //   -body.radius * 0.8,\n      //   rightEye[0] * 2,\n      //   -body.radius * 0.8\n      // )\n      // }\n    }\n\n    graphic.pop()\n    graphic.pop()\n  },\n\n  drawCenter(b, p = this.bodiesGraphic, x = 0, y = 0) {\n    let closeEnough = false //this.isMissileClose(b)\n    // this.p.blendMode(this.p.DIFFERENCE)\n    p.noStroke()\n    x = x == undefined ? b.position.x : x\n    y = y == undefined ? b.position.y : y\n    const r = b.radius * BODY_SCALE // b.radius * 4\n    if (r == 0) return\n    // let c = this.brighten(b.c).replace(this.opac, 1)\n    let darker = this.brighten(b.c, -30).replace(this.opac, 1)\n\n    p.fill(darker)\n    p.ellipse(x, y, r)\n    if (closeEnough) {\n      // draw teeth\n      const teeth = 10\n      const toothSize = r / 4.5\n      // if (closeEnough) {\n      p.fill(darker)\n      p.ellipse(x, y, r)\n      for (let i = 0; i < teeth; i++) {\n        if (i == Math.floor(teeth / 4)) continue\n        if (i == Math.ceil(teeth / 4)) continue\n\n        if (i == Math.floor((3 * teeth) / 4)) continue\n        if (i == Math.ceil((3 * teeth) / 4)) continue\n        p.fill('white')\n        // draw each tooth\n        const angle = (i * this.p.TWO_PI) / teeth\n        // add some rotation depending on vector of body\n        const rotatedAngle = angle + b.velocity.heading()\n        const x1 = x + (r / 2.3) * this.p.cos(rotatedAngle)\n        const y1 = y + (r / 2.3) * this.p.sin(rotatedAngle)\n        p.ellipse(x1, y1, toothSize)\n      }\n\n      p.stroke(darker)\n      p.strokeWeight(r / 12)\n      p.noFill()\n      p.ellipse(x, y, r)\n    } else {\n      /** DRAW TARGET */\n      // const width = r / 2\n      // const rotatedAngle = b.velocity.heading()\n      // p.push()\n      // p.translate(x, y)\n      // p.rotate(rotatedAngle + p.PI / 2)\n      // const teeth = 6\n      // for (let i = 0; i < teeth; i++) {\n      //   p.fill('white')\n      //   const xx = 0 - width / (teeth / 2) + ((i % (teeth / 2)) * width) / 2\n      //   const yy =\n      //     -width / (teeth / 2) - ((i < teeth / 2 ? -1 : 1) * width) / 5\n      //   p.ellipse(xx - width / teeth / 2, yy + width / 4, width / (teeth / 3))\n      // }\n      // p.fill(darker)\n      // p.rect(0 - width / 1.5, 0 - width / 1.5, width * 1.5, width / 3)\n      // p.rect(0 - width / 1.5, 0 + width / 4, width * 1.5, width / 3)\n      // p.strokeWeight(15)\n      // p.noFill()\n      // p.stroke(darker)\n      // p.ellipse(0, 0, r - 7)\n      // p.pop()\n      p.strokeWeight(0)\n      const count = 3\n      for (let i = 0; i < count; i++) {\n        if (i % 2 == 1) {\n          p.fill('white')\n        } else {\n          p.fill(darker)\n        }\n        p.ellipse(x, y, r - (i * r) / count)\n      }\n    }\n    // p.blendMode(p.BLEND)\n  },\n\n  colorArrayToTxt(cc) {\n    // let cc = baseColor.map(c => c + start + (chunk * i))\n    cc.push(this.opac)\n    cc = `hsla(${cc.join(',')})`\n    return cc\n  },\n\n  createVector(x, y) {\n    if (this.p) {\n      return this.p.createVector(x, y)\n    } else {\n      return { x, y }\n    }\n  },\n\n  frameRate() {\n    this.lastFrameRateCheckAt ||= { frames: this.frames, time: Date.now() }\n    this.lastFrameRate ||= 0\n\n    if (this.frames - this.lastFrameRateCheckAt.frames > 30) {\n      const diff = Date.now() - this.lastFrameRateCheckAt.time\n      this.lastFrameRate =\n        ((this.frames - this.lastFrameRateCheckAt.frames) / diff) * 1000\n      this.lastFrameRateCheckAt = { frames: this.frames, time: Date.now() }\n    }\n\n    return this.lastFrameRate\n  },\n\n  shareCanvas() {\n    const canvas = this.p.canvas\n\n    canvas.toBlob((blob) => {\n      const file = new File([blob], 'p5canvas.png', { type: 'image/png' })\n\n      if (navigator.share) {\n        console.log('sharing canvas...')\n        navigator\n          .share({\n            files: [file]\n          })\n          .catch((error) => console.error('Error sharing:', error))\n      } else if (navigator.clipboard && navigator.clipboard.write) {\n        try {\n          console.log('writing canvas to clipboard...')\n          navigator.clipboard.write([new ClipboardItem({ 'image/png': blob })])\n          this.popup = {\n            header: 'Go Share!',\n            body: ['Copied results to your clipboard.'],\n            fg: THEME.pink_50,\n            bg: THEME.pink_75,\n            buttons: [\n              {\n                text: 'CLOSE',\n                onClick: () => {\n                  this.popup = null\n                }\n              }\n            ]\n          }\n        } catch (error) {\n          console.error('Error copying to clipboard:', error)\n          this.popup = {\n            header: 'Hmmm',\n            body: ['Couldn’t copy results to your clipboard.'],\n            buttons: [\n              {\n                text: 'CLOSE',\n                onClick: () => {\n                  this.popup = null\n                }\n              }\n            ]\n          }\n        }\n      } else {\n        console.error('no options to share canvas!')\n      }\n    }, 'image/png')\n  }\n}\n","const iris_50 = 'rgba(121, 88, 255, 1)'\nconst iris_100 = 'rgba(25, 15, 66, 1)'\nconst iris_60 = 'rgba(88, 59, 209, 1)'\nconst iris_30 = 'rgba(163, 140, 222, 1)'\nconst teal_50 = 'rgba(137, 255, 248, 1)'\nconst teal_75 = 'rgba(13, 61, 58, 1)'\nconst flame_50 = 'rgba(255, 88, 88, 1)'\nconst flame_75 = 'rgba(70, 12, 12, 1)'\nconst pink_50 = 'rgba(255, 105, 177, 1)'\nconst pink_75 = 'rgba(59, 29, 43, 1)'\nconst green_50 = 'rgba(125, 241, 115, 1)'\nconst green_75 = 'rgba(4, 53, 0, 1)'\nconst yellow_50 = 'rgba(252, 255, 105, 1)'\nconst yellow_75 = 'rgba(58, 59, 29, 1)'\nconst violet_25 = 'rgba(236, 205, 255, 1)'\nconst violet_50 = 'rgba(160, 67, 232, 1)'\n\nexport const THEME = {\n  bg: 'rgb(20,20,20)',\n  fg: 'white',\n  bodiesTheme: 'default',\n  border: iris_60,\n  // colors\n  lime: 'rgba(125, 241, 115, 1)',\n  lime_40: 'rgba(125, 241, 115, 0.4)',\n  pink: 'rgba(236, 205, 255, 1)',\n  pink_40: 'rgba(219, 115, 255, 1)',\n  fuschia: 'rgba(160, 67, 232, 1)',\n  red: 'rgba(255, 88, 88, 1)',\n  maroon: 'rgba(53, 20, 20, 1)',\n  textFg: iris_50,\n  textBg: iris_100,\n  iris_30,\n  iris_60,\n  teal_50,\n  teal_75,\n  flame_50,\n  flame_75,\n  pink_50,\n  pink_75,\n  green_50,\n  green_75,\n  yellow_50,\n  violet_25,\n  violet_50\n}\n\n// [hue, saturation, lightness]\nexport const themes = {\n  bodies: {\n    // random hues\n    default: {\n      'saturated-exclude-darks': {\n        bg: [undefined, '80-100', '18-100'], // undefined = 0—359\n        cr: [undefined, '80-100', '18-100'],\n        fg: [undefined, '80-100', '18-100']\n      },\n      pastel_highlighter_marker: {\n        bg: [undefined, '80-100', '85-95'],\n        cr: [undefined, '100-100', '55-60'],\n        fg: [undefined, '70-90', '67-67']\n      },\n      marker_pastel_highlighter: {\n        bg: [undefined, '100-100', '60-60'],\n        cr: [undefined, '100-100', '90-95'],\n        fg: [undefined, '100-100', '55-60']\n      },\n      shadow_highlighter_marker: {\n        bg: [undefined, '80-100', '18-25'],\n        cr: [undefined, '100-100', '55-60'],\n        fg: [undefined, '70-90', '67-67']\n      },\n      berlin: {\n        bg: [undefined, '100-100', '18-18'],\n        cr: [undefined, '100-100', '45-45'],\n        fg: [undefined, '100-100', '30-30']\n      }\n    },\n    // reds / OPTIMISM\n    reds: {\n      'bg:red-wide': {\n        bg: ['300-20', '90', '50'],\n        cr: [undefined, '80', '90'],\n        fg: [undefined, '80', '60']\n      }\n    },\n    // yellows / BLAST\n    yellows: {\n      'bg:yellow-narrow': {\n        bg: ['40-60', '95-100', '50-60'],\n        cr: [undefined, '90-100', '85-95'],\n        fg: [undefined, '90', '60']\n      }\n    }\n  },\n  buttons: {\n    teal: {\n      fg: teal_50,\n      bg: teal_75\n    },\n    flame: {\n      fg: flame_50,\n      bg: flame_75\n    },\n    pink: {\n      fg: pink_50,\n      bg: pink_75\n    },\n    green: {\n      fg: green_50,\n      bg: green_75\n    },\n    yellow: {\n      fg: yellow_50,\n      bg: yellow_75\n    }\n  }\n}\n\nexport const bodyThemes = themes.bodies[THEME.bodiesTheme]\n\n// helpers\n\nexport function hslToRgb(values, alpha = 1) {\n  let [h, s, l] = values\n\n  s /= 100\n  l /= 100\n\n  let c = (1 - Math.abs(2 * l - 1)) * s\n  let x = c * (1 - Math.abs(((h / 60) % 2) - 1))\n  let m = l - c / 2\n  let r = 0,\n    g = 0,\n    b = 0\n\n  if (0 <= h && h < 60) {\n    r = c\n    g = x\n    b = 0\n  } else if (60 <= h && h < 120) {\n    r = x\n    g = c\n    b = 0\n  } else if (120 <= h && h < 180) {\n    r = 0\n    g = c\n    b = x\n  } else if (180 <= h && h < 240) {\n    r = 0\n    g = x\n    b = c\n  } else if (240 <= h && h < 300) {\n    r = x\n    g = 0\n    b = c\n  } else if (300 <= h && h < 360) {\n    r = c\n    g = 0\n    b = x\n  }\n\n  r = Math.round((r + m) * 255)\n  g = Math.round((g + m) * 255)\n  b = Math.round((b + m) * 255)\n\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`\n}\n\nfunction randInt(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function randHSL(ranges) {\n  let hues = ranges[0] ?? '0-359'\n  let sats = ranges[1] ?? '0-100'\n  let lights = ranges[2] ?? '0-100'\n\n  // NOTE: hue:360 = black\n  hues = hues.split('-').map((s) => Number(s))\n  sats = sats.split('-').map((s) => Number(s))\n  lights = lights.split('-').map((s) => Number(s))\n\n  // if hue range loops (350-10), randomly select a position from the two sections (0-10, 350-359)\n  if (hues[0] > hues[1]) {\n    hues = [randInt(0, hues[1]), randInt(hues[0], '359')][randInt(0, 1)]\n    hues = [hues]\n  }\n\n  // generate in ranges\n  const h = randInt(hues[0], hues[1] || hues[0])\n  const s = randInt(sats[0], sats[1] || sats[0])\n  const l = randInt(lights[0], lights[1] || lights[0])\n\n  return `hsl(${h},${s}%,${l}%)`\n}\n\nexport function rgbaOpacity(color, opacity) {\n  const [r, g, b] = color.split(',').map((s) => Number(s.replace(/\\D/g, '')))\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`\n}\n","const bodyFontURL = new URL(\n  '/public/fonts/Space-Notorious-rounded.otf',\n  import.meta.url\n).href\n\n// n.b. to make this font load, I had to remove the leading numbers from the filename\nconst dotFontURL = new URL(\n  '/public/fonts/A000-Dots-edited-subsetAlphaNumPuncSimple.ttf',\n  import.meta.url\n).href\nexport const fonts = { body: null, dot: null }\n\nexport function loadFonts(p) {\n  const toLoad = { body: bodyFontURL, dot: dotFontURL }\n\n  for (const fontName in toLoad) {\n    if (fonts[fontName]) continue\n\n    const url = toLoad[fontName]\n    const handleError = (err) => {\n      console.log('font load error', err)\n      // fall back to sans\n      fonts[fontName] = 'sans-serif'\n    }\n    p.loadFont(\n      url,\n      (font) => {\n        fonts[fontName] = font\n      },\n      handleError\n    )\n  }\n}\n\nexport function drawKernedText(p, text, x, y, kerning) {\n  let start = x\n  for (const char of text.split('')) {\n    p.text(char, start, y)\n    start += p.textWidth(char) + kerning\n  }\n}\n","module.exports = \"4e68348903103795\";","module.exports = \"d9b0eda2489f92a1\";","module.exports = \"2a20903d78ae9b52\";","module.exports = \"3708bdff91193b6c\";","module.exports = \"1a79ad5ee30f7c2a\";","module.exports = \"10eeb469411471bf\";","module.exports = \"8d17b13ebfd61877\";","module.exports = \"f454f05952c45af2\";","module.exports = \"2d302df143d28c44\";","module.exports = \"3e80bc02a9411ca7\";","module.exports = \"171562ff3cfbfe63\";","module.exports = \"d3baa737021112e9\";","module.exports = \"c9b285fbc2807908\";","module.exports = \"171b4cb220e30111\";","module.exports = \"87a4a5de76e4da3b\";","module.exports = \"917e68048114bc03\";","module.exports = \"2648ef4499a4c700\";","module.exports = \"f0d0189f752d9875\";","module.exports = \"32f0a706dab4e39c\";","module.exports = \"0c31cc233fefb0df\";","module.exports = \"6a9e5a0ac377a886\";","module.exports = \"79b1a557bb0c6916\";","module.exports = \"59974fe8edf19394\";","module.exports = \"375ed61c753313fa\";","module.exports = \"797ceea08dba4903\";","module.exports = \"2307c352f202b86b\";","module.exports = \"1967fb8d5c6ee3a4\";","module.exports = \"1f0b37dde47b923e\";","module.exports = \"fe0a2b60dc178b18\";","module.exports = \"8854734aaa7d2b83\";","module.exports = \"a522e10d74a26bf5\";","module.exports = \"c1cbed5431d94a50\";","module.exports = \"4cebac3486709165\";","module.exports = \"9ac3144a36eb709c\";","module.exports = \"a6f47cd7f1ce1060\";","module.exports = \"62e446d118ce88bf\";","module.exports = \"e37c109b5ffc23a0\";","module.exports = \"600f4722a08e983d\";","module.exports = \"a831f91e5750d7ef\";","module.exports = \"05cb5bd966a4950e\";","module.exports = \"9bafee0b50ef17fd\";","module.exports = \"d754621bf42a2e69\";","module.exports = \"ba3adcf4d717433f\";","module.exports = \"4947777303ad53e1\";","module.exports = \"898ddba03f3629cb\";","module.exports = \"60a52bf1b529113e\";","module.exports = \"ad193a92af8d0828\";","module.exports = \"8f1c3e8359862d0e\";","module.exports = \"449683c0cf966117\";","module.exports = \"74c3fd5e3c330cfe\";","module.exports = \"6a8e4257940124fd\";","module.exports = \"6e678e440a1eb04a\";","module.exports = \"cc85927ce7a501f1\";","module.exports = \"18afdba69a9f3192\";","module.exports = \"9e8ddbbc3701f3e8\";","module.exports = \"07eb865007604f80\";","module.exports = \"842e3e444f4166e5\";","module.exports = \"da0ae826d91fd805\";","module.exports = \"143ea8e7249afcbc\";","module.exports = \"1069d79db527bccb\";","module.exports = \"38248008586a5d3c\";","module.exports = \"7bf2f98d70ef4e7c\";","module.exports = \"ede3dadceb9217b4\";","module.exports = \"08440c15d746318c\";","module.exports = \"7614b3efd368aa02\";","module.exports = \"f8b268d116d71f61\";","export const Calculations = {\n  forceAccumulator(bodies = this.bodies) {\n    bodies = this.convertBodiesToBigInts(bodies)\n    bodies = this.forceAccumulatorBigInts(bodies)\n    bodies = this.convertBigIntsToBodies(bodies)\n    return bodies\n  },\n\n  forceAccumulatorBigInts(bodies) {\n    const vectorLimitScaled = this.convertFloatToScaledBigInt(this.vectorLimit)\n    let accumulativeForces = []\n    for (let i = 0; i < bodies.length; i++) {\n      accumulativeForces.push([0n, 0n])\n    }\n    const time = BigInt(this.speedFactor)\n    for (let i = 0; i < bodies.length; i++) {\n      const body = bodies[i]\n      for (let j = i + 1; j < bodies.length; j++) {\n        const otherBody = bodies[j]\n        const force = this.calculateForceBigInt(body, otherBody)\n        const bodyVelocity = [time * force[0], time * force[1]]\n        const otherBodyVelocity = [time * -force[0], time * -force[1]]\n\n        accumulativeForces[i] = _addVectors(accumulativeForces[i], bodyVelocity)\n        accumulativeForces[j] = _addVectors(\n          accumulativeForces[j],\n          otherBodyVelocity\n        )\n      }\n    }\n\n    for (let i = 0; i < bodies.length; i++) {\n      const body = bodies[i]\n      const body_velocity = _addVectors(\n        [body.velocity.x, body.velocity.y],\n        accumulativeForces[i]\n      )\n      body.velocity.x = body_velocity[0]\n      body.velocity.y = body_velocity[1]\n      const body_velocity_x_abs =\n        body.velocity.x > 0n ? body.velocity.x : -1n * body.velocity.x\n      if (body_velocity_x_abs > vectorLimitScaled) {\n        body.velocity.x =\n          (body_velocity_x_abs / body.velocity.x) * vectorLimitScaled\n      }\n      const body_velocity_y_abs =\n        body.velocity.y > 0n ? body.velocity.y : -1n * body.velocity.y\n      if (body_velocity_y_abs > vectorLimitScaled) {\n        body.velocity.y =\n          (body_velocity_y_abs / body.velocity.y) * vectorLimitScaled\n      }\n\n      const body_position = _addVectors(\n        [body.position.x, body.position.y],\n        [body.velocity.x, body.velocity.y]\n      )\n\n      body.position.x = body_position[0]\n      body.position.y = body_position[1]\n    }\n\n    const scaledWindowWidth = this.convertFloatToScaledBigInt(this.windowWidth)\n    for (let i = 0; i < bodies.length; i++) {\n      const body = bodies[i]\n\n      if (body.position.x > scaledWindowWidth) {\n        body.position.x = 0n\n      } else if (body.position.x < 0n) {\n        body.position.x = scaledWindowWidth\n      }\n      if (body.position.y > scaledWindowWidth) {\n        body.position.y = 0n\n      } else if (body.position.y < 0n) {\n        body.position.y = scaledWindowWidth\n      }\n    }\n    return bodies\n  },\n\n  calculateBodyFinal() {\n    this.bodies.sort((a, b) => a.bodyIndex - b.bodyIndex)\n    const bodiesAsBigInts = this.convertBodiesToBigInts(this.bodies)\n    this.bodyFinal = bodiesAsBigInts.map((b) => {\n      b = this.convertScaledBigIntBodyToArray(b)\n      b[2] = BigInt(b[2]).toString()\n      b[3] = BigInt(b[3]).toString()\n      return b\n    })\n  },\n\n  // Calculate the gravitational force between two bodies\n  calculateForceBigInt(body1, body2) {\n    const GScaled = BigInt(Math.floor(this.G * parseInt(this.scalingFactor)))\n\n    let minDistanceScaled =\n      BigInt(this.minDistanceSquared) * this.scalingFactor ** 2n // when the original gets squared, the scaling factor gets squared\n\n    const position1 = body1.position\n\n    const body1_position_x = position1.x\n    const body1_position_y = position1.y\n    const body1_radius = body1.radius\n\n    const position2 = body2.position\n    const body2_position_x = position2.x\n    const body2_position_y = position2.y\n    const body2_radius = body2.radius\n\n    let dx = body2_position_x - body1_position_x\n    let dy = body2_position_y - body1_position_y\n    const dxAbs = dx > 0n ? dx : -1n * dx\n    const dyAbs = dy > 0n ? dy : -1n * dy\n\n    const dxs = dx * dx\n    const dys = dy * dy\n\n    let distanceSquared\n    const unboundDistanceSquared = dxs + dys\n    if (unboundDistanceSquared < minDistanceScaled) {\n      distanceSquared = minDistanceScaled\n    } else {\n      distanceSquared = unboundDistanceSquared\n    }\n    let distance = _approxSqrt(distanceSquared)\n\n    const bodies_sum =\n      body1_radius == 0n || body2_radius == 0n\n        ? 0n\n        : (body1_radius + body2_radius) * 4n // NOTE: this could be tweaked as a variable for \"liveliness\" of bodies\n\n    const distanceSquared_with_avg_denom = distanceSquared * 2n // NOTE: this is a result of moving division to the end of the calculation\n    const forceMag_numerator = GScaled * bodies_sum * this.scalingFactor // distance should be divided by scaling factor but this preserves rounding with integer error\n\n    const forceDenom = distanceSquared_with_avg_denom * distance\n\n    const forceXnum = dxAbs * forceMag_numerator\n    const forceXunsigned = _approxDiv(forceXnum, forceDenom)\n    const forceX = dx < 0n ? -forceXunsigned : forceXunsigned\n\n    const forceYnum = dyAbs * forceMag_numerator\n    const forceYunsigned = _approxDiv(forceYnum, forceDenom)\n    const forceY = dy < 0n ? -forceYunsigned : forceYunsigned\n    return [forceX, forceY]\n  },\n\n  convertScaledStringArrayToMissile(missile) {\n    return this.convertScaledStringArrayToBody(missile, this.missileVectorLimit)\n  },\n\n  convertScaledStringArrayToBody(body, vectorLimit = this.vectorLimit) {\n    const maxVectorScaled = this.convertFloatToScaledBigInt(vectorLimit)\n    return {\n      position: {\n        x: BigInt(body[0]),\n        y: BigInt(body[1])\n      },\n      velocity: {\n        x: BigInt(body[2]) - maxVectorScaled,\n        y: BigInt(body[3]) - maxVectorScaled\n      },\n      radius: BigInt(body[4])\n    }\n  },\n\n  convertScaledBigIntMissileToArray(m) {\n    return this.convertScaledBigIntBodyToArray(m, this.missileVectorLimit)\n  },\n  convertScaledBigIntBodyToArray(b, vectorLimit = this.vectorLimit) {\n    const maxVectorScaled = this.convertFloatToScaledBigInt(vectorLimit)\n    const bodyArray = []\n    const noNegativeVelocityX = b.velocity.x + maxVectorScaled\n    const noNegativeVelocityY = b.velocity.y + maxVectorScaled\n    bodyArray.push(\n      _convertBigIntToModP(b.position.x),\n      _convertBigIntToModP(b.position.y),\n      _convertBigIntToModP(noNegativeVelocityX),\n      _convertBigIntToModP(noNegativeVelocityY),\n      _convertBigIntToModP(b.radius)\n    )\n    return bodyArray.map((b) => b.toString())\n  },\n\n  convertScaledStringToBigInt(value) {\n    return BigInt(value)\n  },\n\n  convertMissileScaledStringArrayToFloat(missile) {\n    const maxMissileVectorScaled = this.convertFloatToScaledBigInt(\n      this.missileVectorLimit\n    )\n    missile = missile.map(this.convertScaledStringToBigInt.bind(this))\n    return {\n      position: {\n        x: 0,\n        y: this.windowWidth\n      },\n      velocity: {\n        x: this.convertScaledBigIntToFloat(missile[0] - maxMissileVectorScaled),\n        y: this.convertScaledBigIntToFloat(missile[1] - maxMissileVectorScaled)\n      },\n      radius: parseInt(missile[2])\n    }\n  },\n\n  convertScaledStringArrayToFloat(body) {\n    const maxVectorScaled = this.convertFloatToScaledBigInt(this.vectorLimit)\n    body = body.map(this.convertScaledStringToBigInt.bind(this))\n    return {\n      position: {\n        x: this.convertScaledBigIntToFloat(body[0]),\n        y: this.convertScaledBigIntToFloat(body[1])\n      },\n      velocity: {\n        x: this.convertScaledBigIntToFloat(body[2] - maxVectorScaled),\n        y: this.convertScaledBigIntToFloat(body[3] - maxVectorScaled)\n      },\n      radius: this.convertScaledBigIntToFloat(body[4])\n    }\n  },\n  convertBigIntsToBodies(bigBodies) {\n    const bodies = []\n    for (let i = 0; i < bigBodies.length; i++) {\n      const body = bigBodies[i]\n      const newBody = { bodyIndex: i, position: {}, velocity: {}, radius: null }\n      newBody.px = body.position.x\n      newBody.position.x = this.convertScaledBigIntToFloat(body.position.x)\n      newBody.py = body.position.y\n      newBody.position.y = this.convertScaledBigIntToFloat(body.position.y)\n      newBody.position = this.createVector(\n        newBody.position.x,\n        newBody.position.y\n      )\n\n      newBody.vx = body.velocity.x\n      newBody.velocity.x = this.convertScaledBigIntToFloat(body.velocity.x)\n      newBody.vy = body.velocity.y\n      newBody.velocity.y = this.convertScaledBigIntToFloat(body.velocity.y)\n      newBody.velocity = this.createVector(\n        newBody.velocity.x,\n        newBody.velocity.y\n      )\n\n      if (!this.accumX) {\n        this.accumX = 0\n        this.accumY = 0\n      }\n      this.accumX += newBody.velocity.x\n      this.accumY += newBody.velocity.y\n      newBody.radius = this.convertScaledBigIntToFloat(body.radius)\n      if (body.c) {\n        newBody.c = body.c\n      }\n      newBody.seed = body.seed\n      newBody.bodyIndex = body.bodyIndex\n      // newBody.faceIndex = body.faceIndex\n      bodies.push(newBody)\n    }\n    return bodies\n  },\n\n  convertFloatToScaledBigInt(value) {\n    // changed from Math.floor to Math.round, TODO: look here in case there's rounding error\n    return BigInt(Math.round(value * parseInt(this.scalingFactor)))\n    // let maybeNegative = BigInt(Math.floor(value * parseInt(scalingFactor))) % p\n    // while (maybeNegative < 0n) {\n    //   maybeNegative += p\n    // }\n    // return maybeNegative\n  },\n  convertScaledBigIntToFloat(value) {\n    return parseFloat(value) / parseFloat(this.scalingFactor)\n  },\n\n  convertBodiesToBigInts(bodies) {\n    const bigBodies = []\n\n    const skipCopying = ['px', 'py', 'vx', 'vy']\n    for (let i = 0; i < bodies.length; i++) {\n      const body = bodies[i]\n      const newBody = { position: {}, velocity: {} }\n\n      newBody.position.x =\n        body.px || this.convertFloatToScaledBigInt(body.position.x)\n      newBody.position.y =\n        body.py || this.convertFloatToScaledBigInt(body.position.y)\n      newBody.velocity.x =\n        body.vx || this.convertFloatToScaledBigInt(body.velocity.x)\n      newBody.velocity.y =\n        body.vy || this.convertFloatToScaledBigInt(body.velocity.y)\n      newBody.radius = this.convertFloatToScaledBigInt(body.radius)\n\n      // copy over any other properties on body\n      for (const key in body) {\n        if (typeof newBody[key] !== 'undefined' || skipCopying.includes(key))\n          continue\n        const value = body[key]\n        newBody[key] = value\n      }\n\n      bigBodies.push(newBody)\n    }\n    return bigBodies\n  },\n\n  detectCollision(bodies = this.bodies, missiles = this.missiles) {\n    let bigBodies = this.convertBodiesToBigInts(bodies)\n    const bigMissiles = this.convertBodiesToBigInts(missiles)\n    const { bodies: newBigBodies, missiles: newBigMissiles } =\n      this.detectCollisionBigInt(bigBodies, bigMissiles)\n    bodies = this.convertBigIntsToBodies(newBigBodies)\n    missiles = this.convertBigIntsToBodies(newBigMissiles)\n    // console.dir(\n    //   { bodies_out: bodies, missile_out: missiles[0] },\n    //   { depth: null }\n    // )\n    return { bodies, missiles }\n  },\n\n  detectCollisionBigInt(bodies, missiles) {\n    if (missiles.length == 0) {\n      return { bodies, missiles }\n    }\n    const missile = missiles[0]\n    // console.dir({ missile_in: missile }, { depth: null })\n    missile.position.x += missile.velocity.x\n    missile.position.y += missile.velocity.y\n\n    if (\n      missile.position.x > BigInt(this.windowWidth) * this.scalingFactor ||\n      missile.position.y < 0n\n    ) {\n      missile.radius = 0n\n    }\n\n    for (let j = 0; j < bodies.length; j++) {\n      const body = bodies[j]\n      const distance = _approxDist(\n        missile.position.x,\n        missile.position.y,\n        body.position.x,\n        body.position.y\n      )\n      // console.log({\n      //   p_x: body.position.x,\n      //   p_y: body.position.y,\n      //   m_x: missile.position.x,\n      //   m_y: missile.position.y\n      // })\n      // console.log({ distance })\n      // NOTE: this is to match the circuit. If the missile is gone, set minDist to 0\n      // Need to make sure comparison of distance is < and not <= for this to work\n      // because they may by chance be at the exact same coordinates and should still\n      // not trigger an _explosion since the missile is already gone.\n      const minDist = missile.radius == 0n ? 0n : body.radius * 2n\n      // console.log({ minDist })\n      if (distance < minDist) {\n        missile.radius = 0n\n        const x = this.convertScaledBigIntToFloat(body.position.x)\n        const y = this.convertScaledBigIntToFloat(body.position.y)\n        this.explosions.push(\n          ...this.convertBigIntsToBodies([JSON.parse(JSON.stringify(body))])\n        )\n        this.sound?.playExplosion(x, y)\n\n        bodies[j].radius = 0n\n      }\n\n      missiles[0] = missile\n    }\n    return { bodies, missiles }\n  }\n}\n\n// ------\n/// functional utils\n// ------\n\nfunction _convertBigIntToModP(v) {\n  const prime =\n    21888242871839275222246405745257275088548364400416034343698204186575808495617n\n  let vmp = v % prime\n  while (vmp < 0n) {\n    vmp += prime\n  }\n  return vmp\n}\nfunction _approxDist(x1, y1, x2, y2) {\n  const absX = x1 > x2 ? x1 - x2 : x2 - x1\n  const absY = y1 > y2 ? y1 - y2 : y2 - y1\n  const dxs = absX * absX\n  const dys = absY * absY\n  const distanceSquared = dxs + dys\n  const distance = _approxSqrt(distanceSquared)\n  return distance\n}\nfunction _approxSqrt(n) {\n  if (n == 0n) {\n    return 0n\n  }\n  var lo = 0n\n  var hi = n >> 1n\n  var mid, midSquared\n\n  while (lo <= hi) {\n    mid = (lo + hi) >> 1n // multiplication by multiplicative inverse is not what we want so we use >>\n\n    // TODO: Make more accurate by checking if lo + hi is odd or even before bit shifting\n    midSquared = mid * mid\n    if (midSquared == n) {\n      return mid // Exact square root found\n    } else if (midSquared < n) {\n      lo = mid + 1n // Adjust lower bound\n    } else {\n      hi = mid - 1n // Adjust upper bound\n    }\n  }\n  // If we reach here, no exact square root was found.\n  // return the closest approximation\n  // console.log(`final approx`, { lo, mid, hi })\n  return mid\n}\nfunction _approxDiv(dividend, divisor) {\n  if (dividend == 0n) {\n    return 0n\n  }\n  // Create internal signals for our binary search\n  var lo, hi, mid, testProduct\n\n  // Initialize our search space\n  lo = 0n\n  hi = dividend // Assuming worst case where divisor = 1\n\n  while (lo < hi) {\n    // 32 iterations for 32-bit numbers as an example\n    mid = (hi + lo + 1n) >> 1n\n    testProduct = mid * divisor\n\n    // Adjust our bounds based on the test product\n    if (testProduct > dividend) {\n      hi = mid - 1n\n    } else {\n      lo = mid\n    }\n  }\n  // console.log({ lo, mid, hi })\n  // Output the lo as our approximated quotient after iterations\n  // quotient <== lo;\n  return lo\n}\nfunction _calculateTime(constraints, steps = 1) {\n  const totalSteps = (steps * 1_000_000) / constraints\n  const fps = 25\n  const sec = totalSteps / fps\n  return Math.round(sec * 100) / 100\n}\n\nfunction _explosion(x, y, radius) {\n  let bombs = []\n  for (let i = 0; i < 100; i++) {\n    bombs.push({\n      x,\n      y,\n      i,\n      radius\n    })\n  }\n  return bombs\n}\n\nfunction _addVectors(v1, v2) {\n  return [v1[0] + v2[0], v1[1] + v2[1]]\n}\n\nfunction _validateSeed(seed) {\n  const error = 'Seed must be a 32-byte value'\n  // ensure that the seed is a 32-byte value\n  if (typeof seed === 'string') {\n    if (seed.length !== 66) {\n      throw new Error(error + ' (1)')\n    }\n    // confirm that all characters are hex characters\n    if (seed.substring(2, 66).match(/[^0-9A-Fa-f]/)) {\n      throw new Error(error + ' (2)')\n    }\n    if (seed.substring(0, 2) !== '0x') {\n      throw new Error(error + ' (3)')\n    }\n    seed = BigInt(seed)\n  }\n  if (typeof seed === 'bigint') {\n    if (seed < 0n) {\n      throw new Error(error + ' (4)')\n    }\n    if (\n      seed > 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn\n    ) {\n      // if (seed > 115792089237316195423570985008687907853269984665640564039457584007913129639935n) {\n      throw new Error(error + ' (5)')\n    }\n  } else {\n    throw new Error(error + ' (6)')\n  }\n}\n\n// function checkCollision(body1, body2) {\n//   const distance = dist(body1.position.x, body1.position.y, body2.position.x, body2.position.y);\n//   const minDist = (body1.radius + body2.radius) / 4;\n\n//   if (distance < minDist) {\n//     // Calculate collision response\n//     const angle = atan2(body2.position.y - body1.position.y, body2.position.x - body1.position.x);\n//     const overlap = minDist - distance;\n\n//     const totalMass = body1.radius ** 2 + body2.radius ** 2;\n//     const overlapRatio1 = body2.radius / totalMass;\n//     const overlapRatio2 = body1.radius / totalMass;\n\n//     const deltaX = -cos(angle) * overlap;\n//     const deltaY = -sin(angle) * overlap;\n\n//     body1.position.x -= deltaX * overlapRatio1;\n//     body1.position.y -= deltaY * overlapRatio1;\n//     body2.position.x += deltaX * overlapRatio2;\n//     body2.position.y += deltaY * overlapRatio2;\n\n//     // Update velocities\n//     const angle1 = atan2(body1.velocity.y, body1.velocity.x);\n//     const angle2 = atan2(body2.velocity.y, body2.velocity.x);\n//     const speed1 = body1.velocity.mag();\n//     const speed2 = body2.velocity.mag();\n\n//     const newVelX1 = cos(angle1) * speed2;\n//     const newVelY1 = sin(angle1) * speed2;\n//     const newVelX2 = cos(angle2) * speed1;\n//     const newVelY2 = sin(angle2) * speed1;\n\n//     body1.velocity.set(newVelX1, newVelY1);\n//     body2.velocity.set(newVelX2, newVelY2);\n//   }\n// }\n\nexport {\n  _convertBigIntToModP,\n  _approxDist,\n  _approxSqrt,\n  _approxDiv,\n  _calculateTime,\n  _explosion,\n  _addVectors,\n  _validateSeed\n}\n","import { rgbaOpacity } from './colors.js'\nimport { fonts } from './fonts.js'\n\nexport const Buttons = {\n  drawButton({\n    text,\n    x,\n    y,\n    textSize = 48,\n    height,\n    width,\n    onClick,\n    fg = 'black',\n    bg = 'white',\n    stroke,\n    fgHover = 'rgba(160, 67, 232, 0.25)',\n    p = this.p,\n    disabled = false,\n    key = `${text}-${x}-${y}-${height}-${width}`\n  }) {\n    // register the button if it's not registered\n    let button = this.buttons[key]\n    if (!button) {\n      this.buttons[key] = { x, y, height, width, onClick: onClick.bind(this) }\n      button = this.buttons[key]\n    }\n    button.visible = true\n    button.disabled = disabled\n    const justEntered = button.lastVisibleFrame !== this.p5Frames - 1\n    if (justEntered) {\n      button.visibleForFrames = 0\n    }\n    button.visibleForFrames++\n    button.lastVisibleFrame = this.p5Frames\n\n    const entranceTime = 0.4 // seconds\n\n    // animate in button when it is visible\n    const scale = Math.min(\n      1,\n      button.visibleForFrames / (entranceTime * this.P5_FPS)\n    )\n    const isAnimating = scale < 1\n    const scaledWidth = width * scale\n    const scaledHeight = height * scale\n\n    p.push()\n    p.noStroke()\n    p.strokeWeight(button.active ? 1 : 3)\n    p.textSize(textSize * scale)\n    p.fill(button.disabled ? rgbaOpacity(bg, 0.4) : bg)\n\n    if (stroke) p.stroke(stroke)\n    p.rect(\n      x + width / 2 - scaledWidth / 2,\n      y + height / 2 - scaledHeight / 2,\n      scaledWidth,\n      scaledHeight,\n      height / 2\n    )\n    p.noStroke()\n\n    if (scale >= 0.3 && fonts.dot) {\n      p.textFont(fonts.dot)\n      p.fill(button.disabled ? rgbaOpacity(fg, 0.4) : fg)\n      p.textAlign(p.CENTER, p.CENTER)\n      p.text(\n        text,\n        // tweak to center, somethign about the font\n        x + width / 2 + textSize * 0.13,\n        y + height / 2 + textSize * 0.05\n      )\n    }\n\n    if (!isAnimating && !button.disabled && button.hover) {\n      p.fill(fgHover)\n      p.rect(x, y, width, height, height / 2)\n    }\n\n    if (!isAnimating && !button.disabled && button.active) {\n      p.fill(rgbaOpacity(bg, 0.3))\n      p.rect(x, y, width, height, height / 2)\n    }\n\n    p.pop()\n  },\n\n  // single button with a fat appearance (retry, start)\n  drawFatButton(buttonOptions) {\n    const { bottom } = buttonOptions\n    const bottomPadding = bottom || 80\n    this.drawButton({\n      height: 96,\n      textSize: 48,\n      width: 275,\n      y: this.windowHeight - 96 - bottomPadding,\n      x: this.windowWidth / 2 - 275 / 2,\n      ...buttonOptions\n    })\n  },\n\n  // buttons that are drawn at the bottom of the screen (win screen)\n  drawBottomButton(buttonOptions) {\n    const { columns, column } = buttonOptions\n    const gutter = 24\n    const interButtonGutter = 6\n    const frameWidth = this.windowWidth - 2 * gutter\n    const width = (frameWidth - (columns - 1) * interButtonGutter) / columns\n    this.drawButton({\n      height: 84,\n      textSize: 44,\n      width,\n      y: this.windowHeight - gutter - 84,\n      x: gutter + column * (width + interButtonGutter),\n      ...buttonOptions\n    })\n  }\n}\n","import AnybodyProblemABI from './contractData/ABI-12345-AnybodyProblem.json' // TODO: update\nimport AnybodyProblemBaseSepolia from './contractData/84532-AnybodyProblem.json'\nimport AnybodyProblemLocal from './contractData/12345-AnybodyProblem.json'\n\nexport const AnybodyProblem = {\n  abi: AnybodyProblemABI,\n  networks: {\n    84532: AnybodyProblemBaseSepolia,\n    12345: AnybodyProblemLocal\n  }\n}\n\nimport SpeedrunsABI from './contractData/ABI-12345-Speedruns.json' // TODO: update\nimport SpeedrunsBaseSepolia from './contractData/84532-Speedruns.json'\nimport SpeedrunsLocal from './contractData/12345-Speedruns.json'\n\nexport const Speedruns = {\n  abi: SpeedrunsABI,\n  networks: {\n    84532: SpeedrunsBaseSepolia,\n    12345: SpeedrunsLocal\n  }\n}\n","{\n  \"_format\": \"hh-sol-artifact-1\",\n  \"contractName\": \"AnybodyProblem\",\n  \"sourceName\": \"contracts/AnybodyProblem.sol\",\n  \"abi\": [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"proceedRecipient_\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"speedruns_\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"externalMetadata_\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"verifiers_\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"verifiersTicks\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"verifiersBodies\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bool\",\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"returnData\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"EthMoved\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"level\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"seed\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"LevelCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"player\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"level\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"time\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"LevelSolved\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"seed\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"RunCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"player\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"accumulativeTime\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"RunSolved\",\n      \"type\": \"event\"\n    },\n    {\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"fallback\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"FIRST_SUNDAY_AT_6_PM_UTC\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"LEVELS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"SECONDS_IN_A_DAY\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"SECONDS_IN_A_WEEK\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"tickCounts\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256[2][]\",\n          \"name\": \"a\",\n          \"type\": \"uint256[2][]\"\n        },\n        {\n          \"internalType\": \"uint256[2][2][]\",\n          \"name\": \"b\",\n          \"type\": \"uint256[2][2][]\"\n        },\n        {\n          \"internalType\": \"uint256[2][]\",\n          \"name\": \"c\",\n          \"type\": \"uint256[2][]\"\n        },\n        {\n          \"internalType\": \"uint256[][]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[][]\"\n        }\n      ],\n      \"name\": \"batchSolve\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo102\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[102]\",\n          \"name\": \"\",\n          \"type\": \"uint256[102]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo112\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[112]\",\n          \"name\": \"\",\n          \"type\": \"uint256[112]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo22\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[22]\",\n          \"name\": \"\",\n          \"type\": \"uint256[22]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo32\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[32]\",\n          \"name\": \"\",\n          \"type\": \"uint256[32]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo42\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[42]\",\n          \"name\": \"\",\n          \"type\": \"uint256[42]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo52\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[52]\",\n          \"name\": \"\",\n          \"type\": \"uint256[52]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo62\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[62]\",\n          \"name\": \"\",\n          \"type\": \"uint256[62]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo72\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[72]\",\n          \"name\": \"\",\n          \"type\": \"uint256[72]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo82\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[82]\",\n          \"name\": \"\",\n          \"type\": \"uint256[82]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"convertTo92\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[92]\",\n          \"name\": \"\",\n          \"type\": \"uint256[92]\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"currentDay\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"currentLevel\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"currentWeek\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"externalMetadata\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"bodyIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"px\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"py\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vx\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vy\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"radius\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Body\",\n          \"name\": \"bodyData\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"i\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"extractBodyData\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"bodyIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"px\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"py\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vx\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vy\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"radius\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Body\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"fastestByDay\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"fastestByWeek\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"gamesPlayed\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"total\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"lastPlayed\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"streak\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"genRadius\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"level\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"generateLevelData\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"bodyIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"px\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"py\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vx\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vy\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"radius\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Body[6]\",\n          \"name\": \"bodyData\",\n          \"type\": \"tuple[6]\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bodyCount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"generateSeed\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"getLevelFromInputs\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bodyCount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"dummyCount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"level\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bodyIndex\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getLevelSeed\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"runId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getLevelsData\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"solved\",\n              \"type\": \"bool\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"time\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256[5]\",\n              \"name\": \"tmpInflightMissile\",\n              \"type\": \"uint256[5]\"\n            },\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"bodyIndex\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"px\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"py\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"vx\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"vy\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"radius\",\n                  \"type\": \"uint256\"\n                },\n                {\n                  \"internalType\": \"bytes32\",\n                  \"name\": \"seed\",\n                  \"type\": \"bytes32\"\n                }\n              ],\n              \"internalType\": \"struct AnybodyProblem.Body[6]\",\n              \"name\": \"tmpBodyData\",\n              \"type\": \"tuple[6]\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Level[]\",\n          \"name\": \"levels\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"dayLevelIndexSeed\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getRandomValues\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"bodyIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"px\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"py\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vx\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vy\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"radius\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Body\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"longestStreak\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"maxTicksByLevelIndex\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"maxVector\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"maxVectorScaled\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"mostGames\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"paused\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"price\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"proceedRecipient\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"min\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"max\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"rand\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"randomRange\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"recoverUnsuccessfulPayment\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"salePrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"royaltyInfo\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"runCount\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"runs\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"solved\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"accumulativeTime\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"seed\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"day\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"scalingFactor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"speedFactor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"speedruns\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"speedrunsSupportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"speedrunsTokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"startingRadius\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"timeUntilEndOfWeek\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"externalMetadata_\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"updateExternalMetadata\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"paused_\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"updatePaused\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"price_\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updatePrice\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"proceedRecipient_\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"updateProceedRecipient\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"speedruns_\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"updateSpeedrunsAddress\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"verifier_\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"verifierBodies\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"verifierTicks\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateVerifier\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"verifiers\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"bodyIndex\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"px\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"py\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vx\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"vy\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"radius\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"seed\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct AnybodyProblem.Body\",\n          \"name\": \"bodyData\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bodyCount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"i\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"verifyBodyDataMatches\",\n      \"outputs\": [],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"bodyCount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"verifier\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256[2]\",\n          \"name\": \"a\",\n          \"type\": \"uint256[2]\"\n        },\n        {\n          \"internalType\": \"uint256[2][2]\",\n          \"name\": \"b\",\n          \"type\": \"uint256[2][2]\"\n        },\n        {\n          \"internalType\": \"uint256[2]\",\n          \"name\": \"c\",\n          \"type\": \"uint256[2]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"input\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"verifyProof\",\n      \"outputs\": [],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"weeklyRecords\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"windowWidth\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"stateMutability\": \"payable\",\n      \"type\": \"receive\"\n    }\n  ],\n  \"bytecode\": \"\",\n  \"deployedBytecode\": \"\",\n  \"linkReferences\": {},\n  \"deployedLinkReferences\": {}\n}\n","{\n  \"address\": \"0x88d070d211d0C48f29Ef935a608FC44f03dc1B52\",\n  \"chain\": { \"chainId\": 84532, \"name\": \"unknown\" }\n}\n","{\n  \"address\": \"0xEd7C419987D0F765F5001f110a5925aD892a83F9\",\n  \"chain\": { \"chainId\": 12345, \"name\": \"unknown\" }\n}\n","{\n  \"_format\": \"hh-sol-artifact-1\",\n  \"contractName\": \"Speedruns\",\n  \"sourceName\": \"contracts/Speedruns.sol\",\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256[]\",\n          \"name\": \"values\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"TransferBatch\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TransferSingle\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"value\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"URI\",\n      \"type\": \"event\"\n    },\n    {\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"fallback\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"__burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"__mint\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"__safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"__setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"accounts\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"balanceOfBatch\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"topics\",\n          \"type\": \"bytes32[]\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"logData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"emitGenericEvent\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeBatchTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address payable\",\n          \"name\": \"anybodyProblem_\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"updateAnybodyProblemAddress\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"uri\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"stateMutability\": \"payable\",\n      \"type\": \"receive\"\n    }\n  ],\n  \"bytecode\": \"0x6080346200012657602081016001600160401b03811182821017620001105760405260008091526002546001908181811c9116801562000105575b6020821014620000f157601f8111620000a7575b600283905560038054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08684a3611ea190816200012c8239f35b60028352601f0160051c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101905b818110620000e657506200004e565b8381558201620000d7565b634e487b7160e01b83526022600452602483fd5b90607f16906200003a565b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610030575b3615610028573461002357610021611980565b005b600080fd5b610021611958565b60003560e01c8062fdd58e1461018357806301ffc9a71461017a5780630e89341c146101715780632eb2c2d6146101685780634e1273f41461015f57806356d5f24b146101565780635abc08191461014d578063715018a6146101445780638da5cb5b1461013b57806393ccd31014610132578063a22cb46514610129578063b46f007114610120578063c12e5c6814610117578063e2ce81a51461010e578063e985e9c514610105578063f242432a146100fc5763f2fde38b0361000e576100f7610b06565b61000e565b506100f7610aeb565b506100f7610ab6565b506100f7610a6e565b506100f7610930565b506100f76108be565b506100f761085e565b506100f761071b565b506100f76106f1565b506100f761068c565b506100f761065c565b506100f76105bc565b506100f76104f6565b506100f761042b565b506100f7610283565b506100f76101e3565b506100f761019d565b6001600160a01b0381160361002357565b50346100235760403660031901126100235760206101c96004356101c08161018c565b60243590610c33565b604051908152f35b6001600160e01b031981160361002357565b503461002357602036600319011261002357602061020b600435610206816101d1565b611b75565b6040519015158152f35b918091926000905b82821061023557501161022e575050565b6000910152565b9150806020918301518186015201829161021d565b9060209161026381518092818552858086019101610215565b601f01601f1916010190565b90602061028092818152019061024a565b90565b5034610023576020366003190112610023576102b76102a3600435611a0a565b60405191829160208352602083019061024a565b0390f35b50634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176102ed57604052565b6102f56102bb565b604052565b608081019081106001600160401b038211176102ed57604052565b90601f801991011681019081106001600160401b038211176102ed57604052565b6020906001600160401b03811161034f575b60051b0190565b6103576102bb565b610348565b81601f820112156100235780359161037383610336565b926103816040519485610315565b808452602092838086019260051b820101928311610023578301905b8282106103ab575050505090565b8135815290830190830161039d565b6020906001600160401b0381116103d7575b601f01601f19160190565b6103df6102bb565b6103cc565b81601f82011215610023578035906103fb826103ba565b926104096040519485610315565b8284526020838301011161002357816000926020809301838601378301015290565b50346100235760a0366003190112610023576004356104498161018c565b602435906104568261018c565b6001600160401b03916044358381116100235761047790369060040161035c565b6064358481116100235761048f90369060040161035c565b91608435948511610023576104ab6100219536906004016103e4565b93610e88565b90815180825260208080930193019160005b8281106104d1575050505090565b8351855293810193928101926001016104c3565b9060206102809281815201906104b1565b5034610023576040366003190112610023576004356001600160401b03808211610023573660238301121561002357816004013561053381610336565b926105416040519485610315565b81845260209160248386019160051b8301019136831161002357602401905b8282106105995785602435868111610023576102b79161058761058d92369060040161035c565b90610d5d565b604051918291826104e5565b83809183356105a78161018c565b815201910190610560565b8015150361002357565b5034610023576060366003190112610023576100216004356105dd8161018c565b6024356105e98161018c565b604435916105f6836105b2565b61060b60018060a01b036004541633146113af565b611810565b60a0600319820112610023576004356106288161018c565b916024356106358161018c565b916044359160643591608435906001600160401b03821161002357610280916004016103e4565b50346100235761002161066e36610610565b9361068760018060a09694961b036004541633146113af565b61160b565b5034610023576000806003193601126106ee576106a7610bdb565b600380546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b5034610023576000366003190112610023576003546040516001600160a01b039091168152602090f35b5034610023576080366003190112610023576004356107398161018c565b6024356044356064356001600160401b0381116100235761075e9036906004016103e4565b9160018060a01b03610775816004541633146113af565b841693841561080f576100219461078b83611533565b5061079584611533565b506107c5826107ae856000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b6107d08582546110d0565b9055604080518481526020810186905260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43361145f565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b50346100235760403660031901126100235761002160043561087f8161018c565b6024359061088c826105b2565b611ca4565b9181601f84011215610023578235916001600160401b038311610023576020838186019501011161002357565b5034610023576040366003190112610023576004356001600160401b03808211610023573660238301121561002357816004013591818311610023573660248460051b830101116100235760243591821161002357610021926109276024933690600401610891565b93909201611d97565b50346100235760603660031901126100235760043561094e8161018c565b6024356044359060018060a01b0361096b816004541633146113af565b8316918215610a1d57610a127fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62916000956109a585611533565b506109af82611533565b506109b8611582565b506109f8826109d5836107ae896000526000602052604060002090565b546109e2828210156115b3565b03916107ae876000526000602052604060002090565b556040805194855260208501919091523393918291820190565b0390a4610021611582565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b503461002357602036600319011261002357600435610a8c8161018c565b610a94610bdb565b600480546001600160a01b0319166001600160a01b0392909216919091179055005b503461002357604036600319011261002357602061020b600435610ad98161018c565b60243590610ae68261018c565b611c15565b503461002357610021610afd36610610565b93929092611d04565b503461002357602036600319011261002357600435610b248161018c565b610b2c610bdb565b6001600160a01b03908116908115610b875760009160035491816bffffffffffffffffffffffff60a01b84161760035560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6003546001600160a01b03163303610bef57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03811615610c67576000918252602082815260408084206001600160a01b03909316845291905290205490565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b6064820152608490fd5b90610cc982610336565b610cd66040519182610315565b8281528092610ce7601f1991610336565b0190602036910137565b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610d18570190565b610d20610cf1565b0190565b50634e487b7160e01b600052603260045260246000fd5b6020918151811015610d50575b60051b010190565b610d58610d24565b610d48565b9190918051835103610dce57610d738151610cbf565b9060005b8151811015610dc75780610db2610da1610d94610dc29486610d3b565b516001600160a01b031690565b610dab8389610d3b565b5190610c33565b610dbc8286610d3b565b52610d08565b610d77565b5090925050565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608490fd5b15610e2c57565b60405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608490fd5b6001600160a01b0380821696919592949392903388148015610fa5575b610eae90610e25565b610ebb8451865114610fba565b8516610ec8811515611017565b60005b8451811015610f5f578088610f53610f4b8a6107ae8b610ef987610ef2610f5a9a8f610d3b565b5192610d3b565b5195610f3a87610f17836107ae866000526000602052604060002090565b54610f2482821015611071565b03916107ae846000526000602052604060002090565b556000526000602052604060002090565b9182546110d0565b9055610d08565b610ecb565b50610fa396919592976040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610f9a8a8a836110dc565b0390a43361128e565b565b50610eae610fb33389611c15565b9050610ea5565b15610fc157565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b1561101e57565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b1561107857565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b81198111610d18570190565b90916110f3610280936040845260408401906104b1565b9160208184039101526104b1565b908160209103126100235751610280816101d1565b93906102809593611148916111569460018060a01b03809216885216602087015260a0604087015260a08601906104b1565b9084820360608601526104b1565b91608081840391015261024a565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d116111ba57565b905060046000803e60005160e01c90565b600060443d1061028057604051600319913d83016004833e81516001600160401b03918282113d60248401111761122857818401948551938411611230573d85010160208487010111611228575061028092910160200190610315565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b9493919092813b6112a2575b505050505050565b60006020946112c96040519788968795869463bc197c8160e01b9c8d875260048701611116565b03926001600160a01b03165af16000918161137f575b5061135757505060016112f06111ad565b6308c379a014611328575b61130b575b38808080808061129a565b60405162461bcd60e51b81528061132460048201611239565b0390fd5b6113306111cb565b8061133b57506112fb565b60405162461bcd60e51b8152908190611324906004830161026f565b6001600160e01b031916146113005760405162461bcd60e51b81528061132460048201611164565b6113a191925060203d81116113a8575b6113998183610315565b810190611101565b90386112df565b503d61138f565b156113b657565b60405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920416e79626f64792050726f626c656d2063616e2063616c6c0000006044820152606490fd5b909260a0926102809594600180861b031683526000602084015260408301526060820152816080820152019061024a565b919261028095949160a094600180871b03809216855216602084015260408301526060820152816080820152019061024a565b9390803b61146f575b5050505050565b6114979360006020946040519687958694859363f23a6e6160e01b9b8c8652600486016113fb565b03926001600160a01b03165af160009181611513575b506114eb57505060016114be6111ad565b6308c379a0146114d8575b61130b575b3880808080611468565b6114e06111cb565b8061133b57506114c9565b6001600160e01b031916146114ce5760405162461bcd60e51b81528061132460048201611164565b61152c91925060203d81116113a8576113998183610315565b90386114ad565b60405190604082018281106001600160401b03821117611575575b60405260018252602082016020368237825115611569575290565b611571610d24565b5290565b61157d6102bb565b61154e565b60405190602082018281106001600160401b038211176115a6575b60405260008252565b6115ae6102bb565b61159d565b156115ba57565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b6001600160a01b039485831694919391929190611629861515611017565b61163282611533565b5061163c84611533565b50600095828752602093878552816040998761166c8a8d8d209060018060a01b0316600052602052604060002090565b5461167982821015611071565b878c528b89520361169e8a8d8d209060018060a01b0316600052602052604060002090565b55858a528987528a8a206001600160a01b0384166000908152602091909152604090206116cc8982546110d0565b90558a51868152602081018990529089169033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290604090a43b611716575b5050505050505050565b61173c948785948a519788958694859363f23a6e6160e01b9c8d8652336004870161142c565b03925af191829185936117f1575b50506117c357505060019061175d6111ad565b6308c379a014611793575b5061177c57505b388080808080808061170c565b5162461bcd60e51b81528061132460048201611239565b61179b6111cb565b90816117a75750611768565b50825162461bcd60e51b8152908190611324906004830161026f565b6001600160e01b0319160390506117da575061176f565b5162461bcd60e51b81528061132460048201611164565b611808929350803d106113a8576113998183610315565b90388061174a565b6001600160a01b038083169390821692908385146118855761186b6020926107ae7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319560018060a01b03166000526001602052604060002090565b9015159060ff1981541660ff8316179055604051908152a3565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608490fd5b3d15611907573d906118ed826103ba565b916118fb6040519384610315565b82523d6000602084013e565b606090565b1561191357565b60405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f20616e79626f647950726f626c656d206661696c65640000006044820152606490fd5b610fa36000808060018060a01b03600454166040519034905af161197a6118dc565b5061190c565b610fa360008060018060a01b036004541660405136838237828136810182815203925af161197a6118dc565b602081830312610023578051906001600160401b038211610023570181601f820112156100235780516119de816103ba565b926119ec6040519485610315565b81845260208284010111610023576102809160208085019101610215565b9060018060a01b0360045416916040519060209182810191631649ecf760e31b8352602482015260248152611a3e816102d2565b6000948592839251915afa90611a526118dc565b9115611a6b5761028092935080825183010191016119ac565b9050604051908360025460019281841c93808316928315611b56575b8286108414611b425797869798611aa48789989960209181520190565b94908115611b215750600114611ac5575b5050505061028092500382610315565b60026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9690945091905b828510611b0b5750505061028093500138808080611ab5565b8654858501529586019587955093810193611af2565b93505050506102809491925060ff19168252151560051b0138808080611ab5565b634e487b7160e01b89526022600452602489fd5b94607f1694611a87565b908160209103126100235751610280816105b2565b60008060018060a01b0360045416604051936020850190637b7de1cd60e11b825263ffffffff60e01b169485602482015260248152611bb3816102d2565b51915afa611bbf6118dc565b9015611bd957610280915060208082518301019101611b60565b50636cdb3d1360e11b8114908115611c04575b8115611bf6575090565b6301ffc9a760e01b14919050565b6303a24d0760e21b81149150611bec565b9060008060018060a01b038060045416906040516020810191630bd1274f60e31b835280881660248301528616604482015260448152611c54816102fa565b51915afa90611c616118dc565b9115611c7c5750610280915060208082518301019101611b60565b611c9f91506107ae60ff9360018060a01b03166000526001602052604060002090565b541690565b9060008060018060a01b0380600454169082604051602081019263ceab69ff60e01b845288166024820152861515604482015260448152611ce4816102fa565b51925af1611cf06118dc565b5015611cfa575050565b610fa39133611810565b92919060008060018060a01b03968682611d41611d4f8b60045416946040519283918c8c8c6020860199634a940b5f60e11b8b526024870161142c565b03601f198101835282610315565b51925af193611d5c6118dc565b9415611d6a57505050505050565b610fa395811633148015611d82575b61068790610e25565b50610687611d903383611c15565b9050611d79565b90929192611db060018060a01b036004541633146113af565b60048111611e3457826040519485378383016040528015611e2e5780600114611e285780600214611e1a5780600314611e0657600414611def57505050565b6060810135926040820135926020830135923591a4565b5090916040820135926020830135923591a3565b5091906020830135923591a2565b503591a1565b505090a0565b60405162461bcd60e51b815260206004820152600f60248201526e546f6f206d616e7920746f7069637360881b6044820152606490fdfea26469706673582212200f50e1f41d5554fcc2b74696e75b168a1261a29643ba2be76b7e6dc7505ac7cd64736f6c634300080f0033\",\n  \"deployedBytecode\": \"0x60806040526004361015610030575b3615610028573461002357610021611980565b005b600080fd5b610021611958565b60003560e01c8062fdd58e1461018357806301ffc9a71461017a5780630e89341c146101715780632eb2c2d6146101685780634e1273f41461015f57806356d5f24b146101565780635abc08191461014d578063715018a6146101445780638da5cb5b1461013b57806393ccd31014610132578063a22cb46514610129578063b46f007114610120578063c12e5c6814610117578063e2ce81a51461010e578063e985e9c514610105578063f242432a146100fc5763f2fde38b0361000e576100f7610b06565b61000e565b506100f7610aeb565b506100f7610ab6565b506100f7610a6e565b506100f7610930565b506100f76108be565b506100f761085e565b506100f761071b565b506100f76106f1565b506100f761068c565b506100f761065c565b506100f76105bc565b506100f76104f6565b506100f761042b565b506100f7610283565b506100f76101e3565b506100f761019d565b6001600160a01b0381160361002357565b50346100235760403660031901126100235760206101c96004356101c08161018c565b60243590610c33565b604051908152f35b6001600160e01b031981160361002357565b503461002357602036600319011261002357602061020b600435610206816101d1565b611b75565b6040519015158152f35b918091926000905b82821061023557501161022e575050565b6000910152565b9150806020918301518186015201829161021d565b9060209161026381518092818552858086019101610215565b601f01601f1916010190565b90602061028092818152019061024a565b90565b5034610023576020366003190112610023576102b76102a3600435611a0a565b60405191829160208352602083019061024a565b0390f35b50634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176102ed57604052565b6102f56102bb565b604052565b608081019081106001600160401b038211176102ed57604052565b90601f801991011681019081106001600160401b038211176102ed57604052565b6020906001600160401b03811161034f575b60051b0190565b6103576102bb565b610348565b81601f820112156100235780359161037383610336565b926103816040519485610315565b808452602092838086019260051b820101928311610023578301905b8282106103ab575050505090565b8135815290830190830161039d565b6020906001600160401b0381116103d7575b601f01601f19160190565b6103df6102bb565b6103cc565b81601f82011215610023578035906103fb826103ba565b926104096040519485610315565b8284526020838301011161002357816000926020809301838601378301015290565b50346100235760a0366003190112610023576004356104498161018c565b602435906104568261018c565b6001600160401b03916044358381116100235761047790369060040161035c565b6064358481116100235761048f90369060040161035c565b91608435948511610023576104ab6100219536906004016103e4565b93610e88565b90815180825260208080930193019160005b8281106104d1575050505090565b8351855293810193928101926001016104c3565b9060206102809281815201906104b1565b5034610023576040366003190112610023576004356001600160401b03808211610023573660238301121561002357816004013561053381610336565b926105416040519485610315565b81845260209160248386019160051b8301019136831161002357602401905b8282106105995785602435868111610023576102b79161058761058d92369060040161035c565b90610d5d565b604051918291826104e5565b83809183356105a78161018c565b815201910190610560565b8015150361002357565b5034610023576060366003190112610023576100216004356105dd8161018c565b6024356105e98161018c565b604435916105f6836105b2565b61060b60018060a01b036004541633146113af565b611810565b60a0600319820112610023576004356106288161018c565b916024356106358161018c565b916044359160643591608435906001600160401b03821161002357610280916004016103e4565b50346100235761002161066e36610610565b9361068760018060a09694961b036004541633146113af565b61160b565b5034610023576000806003193601126106ee576106a7610bdb565b600380546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b5034610023576000366003190112610023576003546040516001600160a01b039091168152602090f35b5034610023576080366003190112610023576004356107398161018c565b6024356044356064356001600160401b0381116100235761075e9036906004016103e4565b9160018060a01b03610775816004541633146113af565b841693841561080f576100219461078b83611533565b5061079584611533565b506107c5826107ae856000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b6107d08582546110d0565b9055604080518481526020810186905260009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a43361145f565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b50346100235760403660031901126100235761002160043561087f8161018c565b6024359061088c826105b2565b611ca4565b9181601f84011215610023578235916001600160401b038311610023576020838186019501011161002357565b5034610023576040366003190112610023576004356001600160401b03808211610023573660238301121561002357816004013591818311610023573660248460051b830101116100235760243591821161002357610021926109276024933690600401610891565b93909201611d97565b50346100235760603660031901126100235760043561094e8161018c565b6024356044359060018060a01b0361096b816004541633146113af565b8316918215610a1d57610a127fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62916000956109a585611533565b506109af82611533565b506109b8611582565b506109f8826109d5836107ae896000526000602052604060002090565b546109e2828210156115b3565b03916107ae876000526000602052604060002090565b556040805194855260208501919091523393918291820190565b0390a4610021611582565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b503461002357602036600319011261002357600435610a8c8161018c565b610a94610bdb565b600480546001600160a01b0319166001600160a01b0392909216919091179055005b503461002357604036600319011261002357602061020b600435610ad98161018c565b60243590610ae68261018c565b611c15565b503461002357610021610afd36610610565b93929092611d04565b503461002357602036600319011261002357600435610b248161018c565b610b2c610bdb565b6001600160a01b03908116908115610b875760009160035491816bffffffffffffffffffffffff60a01b84161760035560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6003546001600160a01b03163303610bef57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03811615610c67576000918252602082815260408084206001600160a01b03909316845291905290205490565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b6064820152608490fd5b90610cc982610336565b610cd66040519182610315565b8281528092610ce7601f1991610336565b0190602036910137565b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610d18570190565b610d20610cf1565b0190565b50634e487b7160e01b600052603260045260246000fd5b6020918151811015610d50575b60051b010190565b610d58610d24565b610d48565b9190918051835103610dce57610d738151610cbf565b9060005b8151811015610dc75780610db2610da1610d94610dc29486610d3b565b516001600160a01b031690565b610dab8389610d3b565b5190610c33565b610dbc8286610d3b565b52610d08565b610d77565b5090925050565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608490fd5b15610e2c57565b60405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201526d195c881bdc88185c1c1c9bdd995960921b6064820152608490fd5b6001600160a01b0380821696919592949392903388148015610fa5575b610eae90610e25565b610ebb8451865114610fba565b8516610ec8811515611017565b60005b8451811015610f5f578088610f53610f4b8a6107ae8b610ef987610ef2610f5a9a8f610d3b565b5192610d3b565b5195610f3a87610f17836107ae866000526000602052604060002090565b54610f2482821015611071565b03916107ae846000526000602052604060002090565b556000526000602052604060002090565b9182546110d0565b9055610d08565b610ecb565b50610fa396919592976040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610f9a8a8a836110dc565b0390a43361128e565b565b50610eae610fb33389611c15565b9050610ea5565b15610fc157565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b1561101e57565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b1561107857565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b81198111610d18570190565b90916110f3610280936040845260408401906104b1565b9160208184039101526104b1565b908160209103126100235751610280816101d1565b93906102809593611148916111569460018060a01b03809216885216602087015260a0604087015260a08601906104b1565b9084820360608601526104b1565b91608081840391015261024a565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d116111ba57565b905060046000803e60005160e01c90565b600060443d1061028057604051600319913d83016004833e81516001600160401b03918282113d60248401111761122857818401948551938411611230573d85010160208487010111611228575061028092910160200190610315565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b9493919092813b6112a2575b505050505050565b60006020946112c96040519788968795869463bc197c8160e01b9c8d875260048701611116565b03926001600160a01b03165af16000918161137f575b5061135757505060016112f06111ad565b6308c379a014611328575b61130b575b38808080808061129a565b60405162461bcd60e51b81528061132460048201611239565b0390fd5b6113306111cb565b8061133b57506112fb565b60405162461bcd60e51b8152908190611324906004830161026f565b6001600160e01b031916146113005760405162461bcd60e51b81528061132460048201611164565b6113a191925060203d81116113a8575b6113998183610315565b810190611101565b90386112df565b503d61138f565b156113b657565b60405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920416e79626f64792050726f626c656d2063616e2063616c6c0000006044820152606490fd5b909260a0926102809594600180861b031683526000602084015260408301526060820152816080820152019061024a565b919261028095949160a094600180871b03809216855216602084015260408301526060820152816080820152019061024a565b9390803b61146f575b5050505050565b6114979360006020946040519687958694859363f23a6e6160e01b9b8c8652600486016113fb565b03926001600160a01b03165af160009181611513575b506114eb57505060016114be6111ad565b6308c379a0146114d8575b61130b575b3880808080611468565b6114e06111cb565b8061133b57506114c9565b6001600160e01b031916146114ce5760405162461bcd60e51b81528061132460048201611164565b61152c91925060203d81116113a8576113998183610315565b90386114ad565b60405190604082018281106001600160401b03821117611575575b60405260018252602082016020368237825115611569575290565b611571610d24565b5290565b61157d6102bb565b61154e565b60405190602082018281106001600160401b038211176115a6575b60405260008252565b6115ae6102bb565b61159d565b156115ba57565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b6001600160a01b039485831694919391929190611629861515611017565b61163282611533565b5061163c84611533565b50600095828752602093878552816040998761166c8a8d8d209060018060a01b0316600052602052604060002090565b5461167982821015611071565b878c528b89520361169e8a8d8d209060018060a01b0316600052602052604060002090565b55858a528987528a8a206001600160a01b0384166000908152602091909152604090206116cc8982546110d0565b90558a51868152602081018990529089169033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290604090a43b611716575b5050505050505050565b61173c948785948a519788958694859363f23a6e6160e01b9c8d8652336004870161142c565b03925af191829185936117f1575b50506117c357505060019061175d6111ad565b6308c379a014611793575b5061177c57505b388080808080808061170c565b5162461bcd60e51b81528061132460048201611239565b61179b6111cb565b90816117a75750611768565b50825162461bcd60e51b8152908190611324906004830161026f565b6001600160e01b0319160390506117da575061176f565b5162461bcd60e51b81528061132460048201611164565b611808929350803d106113a8576113998183610315565b90388061174a565b6001600160a01b038083169390821692908385146118855761186b6020926107ae7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319560018060a01b03166000526001602052604060002090565b9015159060ff1981541660ff8316179055604051908152a3565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608490fd5b3d15611907573d906118ed826103ba565b916118fb6040519384610315565b82523d6000602084013e565b606090565b1561191357565b60405162461bcd60e51b815260206004820152601d60248201527f43616c6c20746f20616e79626f647950726f626c656d206661696c65640000006044820152606490fd5b610fa36000808060018060a01b03600454166040519034905af161197a6118dc565b5061190c565b610fa360008060018060a01b036004541660405136838237828136810182815203925af161197a6118dc565b602081830312610023578051906001600160401b038211610023570181601f820112156100235780516119de816103ba565b926119ec6040519485610315565b81845260208284010111610023576102809160208085019101610215565b9060018060a01b0360045416916040519060209182810191631649ecf760e31b8352602482015260248152611a3e816102d2565b6000948592839251915afa90611a526118dc565b9115611a6b5761028092935080825183010191016119ac565b9050604051908360025460019281841c93808316928315611b56575b8286108414611b425797869798611aa48789989960209181520190565b94908115611b215750600114611ac5575b5050505061028092500382610315565b60026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace9690945091905b828510611b0b5750505061028093500138808080611ab5565b8654858501529586019587955093810193611af2565b93505050506102809491925060ff19168252151560051b0138808080611ab5565b634e487b7160e01b89526022600452602489fd5b94607f1694611a87565b908160209103126100235751610280816105b2565b60008060018060a01b0360045416604051936020850190637b7de1cd60e11b825263ffffffff60e01b169485602482015260248152611bb3816102d2565b51915afa611bbf6118dc565b9015611bd957610280915060208082518301019101611b60565b50636cdb3d1360e11b8114908115611c04575b8115611bf6575090565b6301ffc9a760e01b14919050565b6303a24d0760e21b81149150611bec565b9060008060018060a01b038060045416906040516020810191630bd1274f60e31b835280881660248301528616604482015260448152611c54816102fa565b51915afa90611c616118dc565b9115611c7c5750610280915060208082518301019101611b60565b611c9f91506107ae60ff9360018060a01b03166000526001602052604060002090565b541690565b9060008060018060a01b0380600454169082604051602081019263ceab69ff60e01b845288166024820152861515604482015260448152611ce4816102fa565b51925af1611cf06118dc565b5015611cfa575050565b610fa39133611810565b92919060008060018060a01b03968682611d41611d4f8b60045416946040519283918c8c8c6020860199634a940b5f60e11b8b526024870161142c565b03601f198101835282610315565b51925af193611d5c6118dc565b9415611d6a57505050505050565b610fa395811633148015611d82575b61068790610e25565b50610687611d903383611c15565b9050611d79565b90929192611db060018060a01b036004541633146113af565b60048111611e3457826040519485378383016040528015611e2e5780600114611e285780600214611e1a5780600314611e0657600414611def57505050565b6060810135926040820135926020830135923591a4565b5090916040820135926020830135923591a3565b5091906020830135923591a2565b503591a1565b505090a0565b60405162461bcd60e51b815260206004820152600f60248201526e546f6f206d616e7920746f7069637360881b6044820152606490fdfea26469706673582212200f50e1f41d5554fcc2b74696e75b168a1261a29643ba2be76b7e6dc7505ac7cd64736f6c634300080f0033\",\n  \"linkReferences\": {},\n  \"deployedLinkReferences\": {}\n}\n","{\n  \"address\": \"0xd28e9E8Ddcb512a0BF4bFCf80BCB802Bc2C109dc\",\n  \"chain\": { \"chainId\": 84532, \"name\": \"unknown\" }\n}\n","{\n  \"address\": \"0x2C05F9a7dE1EA42Ab57fce1B25565C085728D0af\",\n  \"chain\": { \"chainId\": 12345, \"name\": \"unknown\" }\n}\n"],"names":[],"version":3,"file":"module.js.map"}